<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>献给每一个正在逐梦路上的人</title>
      <link href="/article/1e3ea605/"/>
      <url>/article/1e3ea605/</url>
      
        <content type="html"><![CDATA[<h1 id="献给每一位正在逐梦路上的人-by-haiyan"><a class="markdownIt-Anchor" href="#献给每一位正在逐梦路上的人-by-haiyan"></a> 献给每一位正在逐梦路上的人 — By haiyan</h1><p>愿你在我看不到的地方安然无恙，愿你的冬天永远不缺暖阳；愿你的明天不再经历雨打风霜，愿你的未来永远热泪盈眶</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://player.bilibili.com/player.html?aid=48245742&bvid=BV13b411g726&cid=84511111&page=1&as_wide=1&high_quality=1&danmaku=0" frameborder="no" scrolling="no"></iframe></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Nacos 1.3.2 启动报错</title>
      <link href="/article/32c49c14/"/>
      <url>/article/32c49c14/</url>
      
        <content type="html"><![CDATA[<h1 id="报错情况"><a class="markdownIt-Anchor" href="#报错情况"></a> 报错情况</h1><p>Nacos 1.3.2 版本，双击 <code>startup.cmd</code> 之后发现</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Nacos/01/image-20200912234256052.webp" alt="image-20200912234256052" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Nacos/01/image-20200912234340034.webp" alt="image-20200912234340034" /></p><p>由于异常 cmd 窗口自动关闭，无法看到具体异常信息</p><p>编辑 <code>startup.cmd</code> 在文件末尾加上 <code>pause</code> 阻止控制台自动退出，观察异常输出信息如下：</p><ol><li><code>java.io.IOException: java.lang.IllegalArgumentException: db.num is null</code></li><li><code>org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat</code></li><li>…</li></ol><h1 id="原因"><a class="markdownIt-Anchor" href="#原因"></a> 原因</h1><p>Nacos 默认以集群方式启动，这种方式默认是要连接外部的 MySQL，而不是内嵌的 MySQL</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Nacos/01/image-20200913070156052.webp" alt="image-20200913070156052" /></p><p>知道问题了就可以把 cmd 脚本中的  <code>pause</code> 去掉</p><p><strong>GitHub issue：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Nacos/01/image-20200913003712.webp" alt="image-20200913003712" /></p><h1 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h1><p><strong>方式一：以单机的方式启动</strong></p><ul><li><p>方式一：命令行加参数。使用内嵌数据库：<code>startup.cmd -p embedded</code> 或者 启动单机模式：<code>startup.cmd -m standalone</code></p></li><li><p>方式二：修改脚本。将脚本中的 <code>set MODE=&quot;cluster&quot;</code> 修改为  <code>set MODE=&quot;standalone&quot;</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Nacos/01/image-20200913005544238.webp" alt="image-20200913005544238" /></p></li></ul><p><strong>方式二：连接外部 MySQL</strong></p><ol><li><p>新建数据库，并执行 <code>nacos安装目录/conf/nacos-mysql.sql</code> 脚本</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Nacos/01/image-20200913001503796.webp" alt="image-20200913001503796" /></p></li><li><p>修改 <code>nacos安装目录/conf/confapplication.properties</code> 配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Nacos/01/image-20200913002104005.webp" alt="image-20200913002104005" /></p></li><li><p>将 <code>nacos安装目录/conf/cluster.conf.example</code> 集群配置文件复制一份 (不配置的话，还是要报上边的第二个错误)</p><p>重命名为 <code>cluster.conf</code> ，内容如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">   #</span></span><br><span class="line"><span class="comment">   # Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment">   #</span></span><br><span class="line"><span class="comment">   # Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">   # you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">   # You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">   #</span></span><br><span class="line"><span class="comment">   #      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">   #</span></span><br><span class="line"><span class="comment">   # Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">   # distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">   # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">   # See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">   # limitations under the License.</span></span><br><span class="line"><span class="comment">   #</span></span><br><span class="line">   </span><br><span class="line"><span class="comment">   #it is ip</span></span><br><span class="line"><span class="comment">   #example,当前主机ip(局域网ip，写localhost、127.0.0.1在节点列表里会看到两个)</span></span><br><span class="line"><span class="meta">192.168.110.3</span>:<span class="string">8848</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud 基础使用</title>
      <link href="/article/81cda57/"/>
      <url>/article/81cda57/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 整合 非关系型数据库</title>
      <link href="/article/9c06b977/"/>
      <url>/article/9c06b977/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 整合 持久层</title>
      <link href="/article/9c06b977/"/>
      <url>/article/9c06b977/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 整合 web 开发</title>
      <link href="/article/9c06b977/"/>
      <url>/article/9c06b977/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 整合 视图层</title>
      <link href="/article/9c06b977/"/>
      <url>/article/9c06b977/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 基础使用</title>
      <link href="/article/7b9e79aa/"/>
      <url>/article/7b9e79aa/</url>
      
        <content type="html"><![CDATA[<h1 id="一-回顾-ssm"><a class="markdownIt-Anchor" href="#一-回顾-ssm"></a> 一、回顾 SSM</h1><p>在 Spring Boot 中，基本不使用 XML 进行配置，都是使用注解进行自动化配置。那么就来回顾一下原有 SSM 是怎么搭建</p><h2 id="1xml-配置-ssm"><a class="markdownIt-Anchor" href="#1xml-配置-ssm"></a> 1：XML 配置 SSM</h2><p>没有加 Mybatis 稍微体验一下即可</p><ol><li><p>创建工程引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xml-ssm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写 Spring 配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描所有注解，但是不扫描Controller --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024.ssm&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写 SpringMVC 配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 所有注解都不扫, 只扫描Controller --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024.ssm&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注解驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置 web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     &lt;context-param&gt; 的作用: web.xml 的配置中 &lt;context-param&gt; 配置作用</span></span><br><span class="line"><span class="comment">     1. 启动一个 WEB 项目的时候，容器 (如：Tomcat) 会去读它的配置文件 web.xml. 读两个节点: &lt;listener&gt;&lt;/listener&gt; 和 &lt;context-param&gt;&lt;/context-param&gt;</span></span><br><span class="line"><span class="comment">     2. 紧接着，容器创建一个 ServletContext (上下文), 这个 WEB 项目所有部分都将共享这个上下文.</span></span><br><span class="line"><span class="comment">     3. 容器将 &lt;context-param&gt;&lt;/context-param &gt; 转化为键值对，并交给 ServletContext.</span></span><br><span class="line"><span class="comment">     4. 容器创建 &lt;listener&gt;&lt;/listener&gt; 中的类实例，即创建监听.</span></span><br><span class="line"><span class="comment">     5. 在监听中会有 contextInitialized (ServletContextEvent args) 初始化方法，在这个方法中获得 ServletContext = ServletContextEvent.getServletContext ();</span></span><br><span class="line"><span class="comment">     context-param 的值 = ServletContext.getInitParameter (&quot;context-param 的键&quot;);</span></span><br><span class="line"><span class="comment">     6. 得到这个 context-param 的值之后，你就可以做一些操作了。注意，这个时候你的 WEB 项目还没有完全启动完成。这个动作会比所有的 Servlet 都要早.</span></span><br><span class="line"><span class="comment">     换句话说，这个时候，你对 &lt;context-param&gt; 中的键值做的操作，将在你的 WEB 项目完全启动之前被执行.</span></span><br><span class="line"><span class="comment">     7. 举例。你可能想在项目启动之前就打开数据库.那么这里就可以在 &lt;context-param&gt; 中设置数据库的连接方式，在监听类中初始化数据库的连接.</span></span><br><span class="line"><span class="comment">     8. 这个监听是自己写的一个类，除了初始化方法，它还有销毁方法。用于关闭应用前释放资源。比如说数据库连接的关闭.</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- SpringMVC 前端控制器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>写一个 Service 及 Controller 进行测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello -&gt; 你好&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;hello&quot;,produces = &quot;text/html;charset=utf-8&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloService.sayHello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="2无-xml-配置-ssm"><a class="markdownIt-Anchor" href="#2无-xml-配置-ssm"></a> 2：无 XML 配置 SSM</h2><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-ssm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写 Spring 配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(</span></span><br><span class="line"><span class="meta">        basePackages = &quot;com.petrel1024.ssm&quot;,</span></span><br><span class="line"><span class="meta">        useDefaultFilters = true,</span></span><br><span class="line"><span class="meta">        excludeFilters = &#123;</span></span><br><span class="line"><span class="meta">                @ComponentScan.Filter(type = FilterType.ANNOTATION, classes = Controller.class)</span></span><br><span class="line"><span class="meta">        &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfig</span> </span>&#123; &#125;</span><br></pre></td></tr></table></figure></li><li><p>编写 SpringMVC 配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(</span></span><br><span class="line"><span class="meta">        basePackages = &quot;com.petrel1024.ssm&quot;,</span></span><br><span class="line"><span class="meta">        useDefaultFilters = false,</span></span><br><span class="line"><span class="meta">        includeFilters = &#123;</span></span><br><span class="line"><span class="meta">                @ComponentScan.Filter(type = FilterType.ANNOTATION, classes = Controller.class),</span></span><br><span class="line"><span class="meta">                @ComponentScan.Filter(type = FilterType.ANNOTATION, classes = Configuration.class)</span></span><br><span class="line"><span class="meta">        &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringMVCConfig</span> </span>&#123; &#125;</span><br></pre></td></tr></table></figure></li><li><p>编写 WebConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebApplicationInitializer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartup</span><span class="params">(ServletContext servletContext)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        AnnotationConfigWebApplicationContext annWebConfigContext = </span><br><span class="line">                <span class="keyword">new</span> AnnotationConfigWebApplicationContext();</span><br><span class="line">        annWebConfigContext.setServletContext(servletContext);</span><br><span class="line">        annWebConfigContext.register(SpringMVCConfig.class);</span><br><span class="line">        ServletRegistration.Dynamic springMVC = servletContext.addServlet(<span class="string">&quot;dispatcherServlet&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> DispatcherServlet(annWebConfigContext));</span><br><span class="line">        springMVC.addMapping(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        springMVC.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>其余测试同上</p></li></ol><h2 id="3无-xml-配置其他配置"><a class="markdownIt-Anchor" href="#3无-xml-配置其他配置"></a> 3：无 XML 配置其他配置</h2><p>WebMvcConfigurationSupport：相当于 SpringMVC 的 XML 配置中的所有内容 (如：静态资源放行、跨域、拦截器等)</p><h3 id="1配置静态资源访问"><a class="markdownIt-Anchor" href="#1配置静态资源访问"></a> 1：配置静态资源访问</h3><ol><li><p>在 resources 目录下新建一个 static 文件夹，并放置一个 hello.html 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>SpringMVCConfig 配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(</span></span><br><span class="line"><span class="meta">        basePackages = &quot;com.petrel1024.ssm&quot;,</span></span><br><span class="line"><span class="meta">        useDefaultFilters = false,</span></span><br><span class="line"><span class="meta">        includeFilters = &#123;</span></span><br><span class="line"><span class="meta">                @ComponentScan.Filter(type = FilterType.ANNOTATION, classes = Controller.class),</span></span><br><span class="line"><span class="meta">                @ComponentScan.Filter(type = FilterType.ANNOTATION, classes = Configuration.class)</span></span><br><span class="line"><span class="meta">        &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringMVCConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;static/**&quot;</span>).addResourceLocations(<span class="string">&quot;classpath:/static/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="二-spring-boot-快速入门"><a class="markdownIt-Anchor" href="#二-spring-boot-快速入门"></a> 二、Spring Boot 快速入门</h1><h2 id="1spring-boot-简介"><a class="markdownIt-Anchor" href="#1spring-boot-简介"></a> 1：Spring Boot 简介</h2><p>官方介绍：<a href="https://spring.io/projects/spring-boot">https://spring.io/projects/spring-boot</a></p><p>文档地址：<a href="https://docs.spring.io/spring-boot/docs/">https://docs.spring.io/spring-boot/docs/</a></p><p>总的来说 Spring Boot 提供了以下功能：</p><ol><li>更加广泛、快速的 Spring 体验</li><li>一系列开箱即用的 starter</li><li>一系列非功能性的自动化配置</li><li>没有 XML 配置生成</li></ol><h2 id="2创建-spring-boot-工程"><a class="markdownIt-Anchor" href="#2创建-spring-boot-工程"></a> 2：创建 Spring Boot 工程</h2><p><strong>创建 Spring Boot 工程有三种方式：</strong></p><ol><li><p>在线创建</p><ul><li><a href="https://start.spring.io/">https://start.spring.io/</a></li><li><a href="https://start.aliyun.com/">https://start.aliyun.com/</a></li></ul></li><li><p>通过 IDEA 来创建</p></li><li><p>改造 Maven 工程来创建</p></li></ol><p>无论使用那种方式创建：</p><ul><li><p>最终的 pom 一定包含如下信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0</span></span></span><br><span class="line"><span class="tag"><span class="string">         https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 继承spring-boot-starter-parent --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>组id<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>项目名<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>版本号<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>打包后的名称<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>项目描述<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 默认1.8如继承spring-boot-starter-parent 可不写 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 默认加的单元测试, 可不要 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Spring Boot 打包插件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>最终的目录结构如下</p><p>![image-20200814182225498](D:\blog\imgs\source\petrel1024\SpringBoot 基础使用\image-20200814182225498.png)</p></li><li><p>一个启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BootQuickStartApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(BootQuickStartApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3springbootapplication-详解"><a class="markdownIt-Anchor" href="#3springbootapplication-详解"></a> 3：@SpringBootApplication 详解</h2><p>源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span> <span class="comment">// 等同与 @Configuration，既标注该类是 Spring 的一个配置类</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span> <span class="comment">// 开启自动化配置</span></span><br><span class="line"><span class="meta">@ComponentScan(excludeFilters = &#123;</span></span><br><span class="line"><span class="meta">@Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</span></span><br><span class="line"><span class="meta">@Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</span></span><br><span class="line"><span class="comment">// 包扫描: 扫描当前类所在包以及所有子包下的所有类</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootApplication &#123; ... &#125;</span><br></pre></td></tr></table></figure><h2 id="4spring-boot-starter-parent-详解"><a class="markdownIt-Anchor" href="#4spring-boot-starter-parent-详解"></a> 4：spring-boot-starter-parent 详解</h2><p>Spring Boot 工程默认会有一个 <code>spring-boot-starter-parent</code> 的 parent，那他究竟有什么用处呢</p><ol><li>定义了 Java 编译版本为 1.8</li><li>使用 UTF-8 格式编码</li><li>继承自 <code>spring-boot-dependencies</code>，这个里边定义了依赖的版本，也正是因为继承了这个依赖，所以我们在写依赖时才不需要写版本号</li><li>执行打包操作的配置</li><li>自动化的资源过滤</li><li>自动化的插件配置</li><li>针对 application.properties 和 application.yml 的资源过滤，包括通过 profile 定义的不同环境的配置文件，例如 application-dev.properties 和 application-dev.yml。</li></ol><p>查看源码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 锁定了各种依赖的版本 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- java版本 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 由于 application.properties 和 application.yml 文件接受 Spring 样式占位符 $ &#123;...&#125; ，</span></span><br><span class="line"><span class="comment"> 因此 Maven 过滤更改为使用 @ .. @ 占位符，</span></span><br><span class="line"><span class="comment"> 当然开发者可以通过设置名为 resource.delimiter 的 Maven 属性来覆盖 @ .. @ 占位符。 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource.delimiter</span>&gt;</span>@<span class="tag">&lt;/<span class="name">resource.delimiter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 编码格式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 资源过滤 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.yaml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 执行打包操作的配置：需要保留的文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.yml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.yaml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 插件配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">      ......</span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>查看 spring-boot-dependencies 源码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activemq.version</span>&gt;</span>5.15.13<span class="tag">&lt;/<span class="name">activemq.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">antlr2.version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">antlr2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appengine-sdk.version</span>&gt;</span>1.9.81<span class="tag">&lt;/<span class="name">appengine-sdk.version</span>&gt;</span></span><br><span class="line">    .....</span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到 <code>&lt;properties&gt;</code> 标签下管理一大堆的版本号，这也就是为什么我们在使用 Spring Boot 时很多依赖不用写版本号</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC 基础使用</title>
      <link href="/article/30332bd2/"/>
      <url>/article/30332bd2/</url>
      
        <content type="html"><![CDATA[<h1 id="一-概述"><a class="markdownIt-Anchor" href="#一-概述"></a> 一、概述</h1><h2 id="1三层架构-和-mvc-设计模式"><a class="markdownIt-Anchor" href="#1三层架构-和-mvc-设计模式"></a> 1：三层架构 和 MVC 设计模式</h2><p><strong>三层架构：</strong></p><ul><li><p><strong>web 层 - 表现层：</strong> 处理用户的请求和响应</p><p>技术：Servlet</p></li><li><p><strong>service 层 - 业务层：</strong> 编写业务，处理业务逻辑，编写事务<br />技术：Spring</p></li><li><p><strong>dao 层 - 持久层：</strong> 数据的增删改查<br />技术：JDBC → DbUtils → JDBCTemplate → Mybatis（主流） → Spring Data JPA（趋势）</p></li></ul><p><strong>MVC 设计模式：</strong></p><ul><li><p><strong>M：</strong> model → 模型、业务逻辑层</p><p>传统意义上的 service、dao、domain</p></li><li><p><strong>V：</strong> view → 视图展示层</p><p>jsp、html、freemarker：展示数据。广义上讲：只要能展示数据就是视图</p></li><li><p><strong>C：</strong> cotroller → 控制层</p><p>servlet：处理用户的请求和相应，生成合适的数据交给视图层展示</p></li></ul><h2 id="2springmvc-简介"><a class="markdownIt-Anchor" href="#2springmvc-简介"></a> 2：SpringMVC 简介</h2><p><strong>Spring 概述：</strong></p><p>SpringMVC 是一种基于 Java 的实现 MVC 设计模型的请求驱动类型的轻量级 Web 框架，属于 Spring FrameWork  的后续产品，已经融合在 Spring Web Flow 里面。</p><p>Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用 Spring 可插入的 MVC 架构，从而在使用 Spring进行 WEB 开发时，可以选择使用 Spring 的 Spring MVC 框架或集成其他 MVC 开发框架，</p><p>SpringMVC 已经成为目前最主流的 MVC 框架之一。并且随着 Spring3.0 的发布，全面超越 Struts2，成为最优秀的 MVC 框架。</p><p>它通过一套注解，让一个简单的 Java 类成为处理请求的控制器，而无须实现任何接口。同时它还支持 RESTful 编程风格的请求。</p><p><strong>SpringMVC 的优势：</strong></p><ul><li>清晰的角色划分：将 Web 层进行了职责解耦，基于 <code>请求-响应模型</code><ul><li>前端控制器 - DispatcherServlet</li><li>请求到处理器映射 - HandlerMapping</li><li>处理器适配器 - HandlerAdapter</li><li>视图解析器 - ViewResolver</li><li>处理器或页面控制器 - Controller</li><li>验证器 - Validator</li><li>命令对象 - Command 请求参数绑定到的对象就叫命令对象</li><li>表单对象 - Form Object 提供给表单展示和提交到的对象就叫表单对象</li></ul></li><li>分工明确，而且扩展点相当灵活，可以很容易扩展，虽然几乎不需要。</li><li>由于命令对象就是一个 POJO，无需继承框架特定 API，可以使用命令对象直接作为业务对象。</li><li>和 Spring 其他框架无缝集成，是其它 Web 框架所不具备的。</li><li>可适配，通过 HandlerAdapter 可以支持任意的类作为处理器。</li><li>可定制性，HandlerMapping、ViewResolver 等能够非常简单的定制。</li><li>功能强大的数据验证、格式化、绑定机制。</li><li>利用 Spring 提供的 Mock 对象能够非常简单的进行 Web 层单元测试。</li><li>本地化、主题的解析的支持，使我们更容易进行国际化和主题的切换。</li><li>强大的 JSP 标签库，使 JSP 编写更容易。</li></ul><p>还有比如 RESTful 风格的支持、简单的文件上传、约定大于配置的契约式编程支持、基于注解的零配置支持等等。</p><p><strong>SpringMVC 和 Struts2 的优略分析：</strong></p><p><strong>共同点：</strong></p><ul><li>它们都是表现层框架，都是基于 MVC 模型编写的</li><li>它们的底层都离不开原始 ServletAPI</li><li>它们处理请求的机制都是一个核心控制器</li></ul><p><strong>区别：</strong></p><ul><li><p>SpringMVC 的入口是 Servlet，而 Struts2 是 Filter</p></li><li><p>SpringMVC 是基于方法设计的，而 Struts2 是基于类，Struts2 每次执行都会创建一个动作类。</p><p>所以 SpringMVC 会稍微比 Struts2 快些。</p></li><li><p>SpringMVC 使用更加简洁，同时还支持 JSR303,，处理 ajax 的请求更方便</p><blockquote><p>JSR303：是一套 JavaBean 参数校验的标准，它定义了很多常用的校验注解，我们可以直接将这些注解加在我们 JavaBean 的属性上面，就可以在需要校验的时候进行校验了。</p></blockquote></li><li><p>Struts2 的 OGNL 表达式使页面的开发效率相比 Spring MVC 更高些，但执行效率并没有比 JSTL 提升，尤其是 struts2 的表单标签，远没有 html 执行效率高。</p></li></ul><h2 id="3回顾传统-servlet"><a class="markdownIt-Anchor" href="#3回顾传统-servlet"></a> 3：回顾传统 Servlet</h2><p>需求：在页面输出当前系统时间</p><p>创建 Maven JavaWEB 项目，并添加到 tomcat 中</p><p>pom 依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSP 模板</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;div style=<span class="string">&quot;text-align: center; color: red;margin: 200px auto;&quot;</span>&gt;</span><br><span class="line">            $&#123;content&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        String content = <span class="string">&quot;当前时间：&quot;</span> + date.toLocaleString();</span><br><span class="line">        req.setAttribute(<span class="string">&quot;content&quot;</span>,content);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;WEB-INF/pages/hello/hello.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上有哪些不足呢？</p><ol><li>每写一个功能就需要一个 Servlet</li><li>当接收请求数据 (例如表单提交的数据时) 要使用 request 的 getParameter 方法进行接收每一个数据，可不可以让接收到请求以后就是一个封装好的数据 (已经封装好的 pojo) 呢</li></ol><h1 id="二-springmvc-入门"><a class="markdownIt-Anchor" href="#二-springmvc-入门"></a> 二、SpringMVC 入门</h1><p>还是上边的需求：在页面输出当前系统时间</p><p>创建 Maven - web 项目，并添加到 tomcat 服务器中</p><h2 id="1引入依赖"><a class="markdownIt-Anchor" href="#1引入依赖"></a> 1：引入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring核心包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springMVC的jar包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--jsp--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2spring-mvcxml-配置"><a class="markdownIt-Anchor" href="#2spring-mvcxml-配置"></a> 2：spring-mvc.xml 配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/beans/spring-beans.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/context/spring-context.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/mvc </span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描包，创建bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3webxml-配置"><a class="markdownIt-Anchor" href="#3webxml-配置"></a> 3：web.xml 配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置servlet：前端控制器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 读取/加载配置文件,创建Spring容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 项目启动就创建该servlet,否则只有在第一次接收请求时才创建 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">/: 拦截所有请求: 包括http请求、静态资源请求:img、js、css...</span></span><br><span class="line"><span class="comment">/*: 拦截请求，不包含静态资源</span></span><br><span class="line"><span class="comment">    *.do、*.action: 拦截以.do、.action为结尾的请求</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4自定义核心控制类"><a class="markdownIt-Anchor" href="#4自定义核心控制类"></a> 4：自定义核心控制类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test</span><span class="params">(ModelAndView modelAndView)</span> </span>&#123;</span><br><span class="line">        String s = <span class="string">&quot;当前系统时间&quot;</span> + <span class="keyword">new</span> Date().toLocaleString();</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;content&quot;</span>,s);</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;WEB-INF/pages/hello/hello.jsp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test2&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test2</span><span class="params">(ModelAndView modelAndView)</span> </span>&#123;</span><br><span class="line">        String s = <span class="string">&quot;当前系统时间&quot;</span> + <span class="keyword">new</span> Date().toLocaleString();</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;content&quot;</span>,s);</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;WEB-INF/pages/hello/hello.jsp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动 tomcat 测试</p><h2 id="5入门程序执行流程"><a class="markdownIt-Anchor" href="#5入门程序执行流程"></a> 5：入门程序执行流程</h2><p>分 启动服务器 和 发送 http 请求两块来说</p><p><strong>启动服务器，加载一些配置文件</strong></p><ol><li>web.xml 被加载</li><li>DispatcherServlet 对象创建 (<code>&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</code>)</li><li>spring-mvc.xml 被加载，spring 容器被创建 (<code>init-param</code>)</li><li>spring 容器将 <code>@RequestMapping</code> 注解所标记的类或方法收集起来 (先这样理解，其实是用到了 HandlerMapping)</li></ol><p><strong>发送 http 请求</strong></p><ol><li>请求到达 DispatcherServlet 被拦截 (<code>&lt;url-pattern&gt;/&lt;/url-pattern&gt;</code>)</li><li>找到请求路径所映射的类或者方法，并执行</li><li>返回执行结果</li></ol><h2 id="6springmvc-的自动参数绑定"><a class="markdownIt-Anchor" href="#6springmvc-的自动参数绑定"></a> 6：SpringMVC 的自动参数绑定</h2><p>上边的程序其实是 SpringMVC 的一个重要功能：请求映射</p><p>下边说一下另一个重要功能：参数自动绑定</p><p>新建一个 pojo：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    get()&amp;set()&amp;toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 <code>HelloController</code> 中的 <code>test2</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test2&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test2</span><span class="params">(ModelAndView modelAndView, User user)</span> </span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    String s = <span class="string">&quot;当前系统时间&quot;</span> + <span class="keyword">new</span> Date().toLocaleString();</span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;content&quot;</span>,s);</span><br><span class="line">    modelAndView.setViewName(<span class="string">&quot;WEB-INF/pages/hello/hello.jsp&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动 tomcat，地址栏输入：<code>http://localhost:8080/项目名/test2?id=1&amp;username=abc&amp;password=efg</code></p><p>看控制台打印：是不是很 nice</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/SpringMVC/01/image-20190911120932.webp" /><h1 id="三-springmvc-的组件"><a class="markdownIt-Anchor" href="#三-springmvc-的组件"></a> 三、SpringMVC 的组件</h1><p>为什么我们写了 <code>@RequestMapping</code> 就可以找到相应的类或者方法呢？</p><p>为什么传了参数就可以自动进行封装呢？</p><p>其实都依赖于 SpringMVC 的处理器映射器、处理器适配器、视图解析器这三大组件来完成</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/SpringMVC/01/image-20190911120934.webp" /><p><strong>整体流程描述：</strong></p><ol><li>用户发起请求到前端控制器 <code>DispatcherServlet</code>，该控制器根据 <code>url-pattern</code> 会过滤出哪些请求可以访问、哪些不能访问。并且会加载 springmvc.xml 配置文件。</li><li>DispatcherServlet 会找到处理器映射器 <code>HandlerMapping</code>，通过 HandlerMapping 完成 url 到 controller 映射的组件，简单来说，就是将在 springmvc.xml 或注解中配置的 url 与对应的处理类找到并进行存储，用 <code>map&lt;url,handler&gt;</code> 这样的方式来存储。</li><li>HandlerMapping 有了映射关系，并且找到 url 对应的处理器，HandlerMapping 就会将其处理器 <code>Handler</code> 返回，在返回前，会加上很多拦截器。</li><li>DispatcherServlet 拿到 Handler 后，找到处理器适配器 <code>HandlerAdapter</code>，通过它来访问处理器，并执行处理器。</li><li>执行处理器</li><li>处理器会返回一个 <code>ModelAndView</code> 对象给 HandlerAdapter</li><li>通过 HandlerAdapter 将 ModelAndView 对象返回给 DispatcherServlet</li><li>DispatcherServlet 请求视图解析器 <code>ViewResolver</code> 去进行视图解析，根据逻辑视图名解析成真正的视图 jsp，其实就是将 ModelAndView 对象中存放视图的名称进行查找，找到对应的页面形成 <code>View</code> 对象</li><li>返回视图对象到前端控制器。</li><li>视图渲染，就是将 ModelAndView 对象中的数据放到 request 域中，用来让页面加载数据的。</li><li>通过第 8 步，通过名称找到了对应的页面，通过第 10 步，request 域中有了所需要的数据，那么就能够进行视图渲染了。最后将其返回即可。</li></ol><h2 id="1六个组件"><a class="markdownIt-Anchor" href="#1六个组件"></a> 1：六个组件</h2><h3 id="11dispatcherservlet-前端控制器"><a class="markdownIt-Anchor" href="#11dispatcherservlet-前端控制器"></a> 1.1：DispatcherServlet - 前端控制器</h3><p>dispatcherServlet 是整个流程的控制中心，由它调用其它组件处理用户的请求。</p><p>dispatcherServlet 的存在降低了组件之间的耦合性。</p><h3 id="12handlermapping-处理器映射器"><a class="markdownIt-Anchor" href="#12handlermapping-处理器映射器"></a> 1.2：HandlerMapping - 处理器映射器</h3><p>HandlerMapping 负责根据用户请求找到 Handler 即处理器</p><p>dispatcherServlet 接收到请求路径之后，找 HandlerMapping ，根据请求路径映射找到相应的方法或者类</p><p>SpringMVC 提供了不同的映射器实现不同的映射方式，例如：配置文件方式，实现接口方式，注解方式等。</p><h3 id="13handler-处理器"><a class="markdownIt-Anchor" href="#13handler-处理器"></a> 1.3：Handler - 处理器</h3><p>它就是我们开发中要编写的具体业务控制器。</p><p>由 DispatcherServlet 把用户请求转发到 Handler。由 Handler 对具体的用户请求进行处理。</p><h3 id="14handladapter-处理器适配器"><a class="markdownIt-Anchor" href="#14handladapter-处理器适配器"></a> 1.4：HandlAdapter - 处理器适配器</h3><p>通过 HandlerAdapter 对处理器进行执行，这是适配器模式的应用，通过扩展适配器可以对更多类型的处理器进行执行。</p><h3 id="15viewresolver-视图解析器"><a class="markdownIt-Anchor" href="#15viewresolver-视图解析器"></a> 1.5：ViewResolver - 视图解析器</h3><p>ViewResolver 负责将处理结果生成 View 视图。</p><p>ViewResolver 首先根据逻辑视图名解析成物理视图名即具体的页面地址，再生成 View 视图对象，最后对 View 进行渲染将处理结果通过页面展示给用户。</p><h3 id="16view-视图"><a class="markdownIt-Anchor" href="#16view-视图"></a> 1.6：View - 视图</h3><p>SpringMVC 框架提供了很多的 View 视图类型的支持，包括：jstlView、freemarkerView、pdfView 等。</p><p>我们最常用的视图就是 jsp，一般情况下需要通过页面标签或页面模版技术，将模型数据通过页面展示给用户，需要由程序员根据业务需求开发具体的页面。</p><h2 id="2定制组件"><a class="markdownIt-Anchor" href="#2定制组件"></a> 2：定制组件</h2><p>其实 springmvc 中的各个组件都是内置的，不用配置就可以</p><h3 id="21定制视图解析器"><a class="markdownIt-Anchor" href="#21定制视图解析器"></a> 2.1：定制视图解析器</h3><p>ModelAndView 中设置视图时，每次都要写前缀和后缀，可以不写吗？可以，定制视图解析器即可</p><p>在 springmvc.xml 中定制</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="22定制处理器映射器"><a class="markdownIt-Anchor" href="#22定制处理器映射器"></a> 2.2：定制处理器映射器</h3><p>在 SpringMVC 的各个组件中，处理器映射器、处理器适配器、视图解析器称为 SpringMVC 的三大组件。</p><p>使用 <code>&lt;mvc:annotation-driven&gt;</code> 会自动加载</p><ul><li>RequestMappingHandlerMapping (处理映射器)</li><li>RequestMappingHandlerAdapter (处理适配器)</li></ul><p>可用在 SpringMVC.xml 配置文件中使用 <code>&lt;mvc:annotation-driven&gt;</code> 替代注解处理器映射器和适配器的配置。</p><p>它就相当于在 xml 中配置了：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HandlerMapping --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> <span class="comment">&lt;!-- HandlerAdapter --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> <span class="comment">&lt;!-- HadnlerExceptionResolvers --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意： 一般开发中，我们都需要写上此标签（虽然从入门案例中看，我们不写也行，随着课程的深入，该标签还有具体的使用场景）</p><p>明确： 我们只需要编写处理具体业务的控制器以及视图。</p><blockquote><p>&lt;mvc:annotation-driven /&gt;注解意义：提供 Controller请求转发，json自动转换等功能</p><p>&lt;mvc:annotation-driven /&gt; 是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。配置一些 messageconverter。即解决了 @Controller 注解的使用前提配置 &lt;context:annotation-config /&gt; 是对包进行扫描，实现注释驱动 Bean 定义，同时将 bean 自动注入容器中使用。即解决了 @Controller 标识的类的 bean 的注入和使用。<br />&lt;mvc:annotation-driven /&gt; 会自动注册 RequestMappingHandlerMapping 与 RequestMappingHandlerAdapter 两个 Bean，这是 Spring MVC 为 @Controller 分发请求所必需的，并且提供了数据绑定支持，@NumberFormatannotation 支持，@DateTimeFormat 支持，@Valid 支持读写 XML 的支持（JAXB）和读写 JSON 的支持（默认Jackson）等功能。<br />我们处理响应 ajax 请求时，就使用到了对 json 的支持。<br />对 action 写 JUnit 单元测试时，要从 spring IOC 容器中取 DefaultAnnotationHandlerMapping 与 AnnotationMethodHandlerAdapter 两个 bean，来完成测试，取的时候要知道是 &lt;mvc:annotation-driven /&gt; 这一句注册的这两个 bean。</p></blockquote><h1 id="四-requestmapping-注解"><a class="markdownIt-Anchor" href="#四-requestmapping-注解"></a> 四、@RequestMapping 注解</h1><p><strong>源码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span> </span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span> </span><br><span class="line"><span class="meta">@Documented</span> </span><br><span class="line"><span class="meta">@Mapping</span> </span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> RequestMapping &#123; </span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="meta">@AliasFor(&quot;path&quot;)</span></span><br><span class="line">String[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    <span class="meta">@AliasFor(&quot;value&quot;)</span></span><br><span class="line">String[] path() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    RequestMethod[] method() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    String[] params() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    String[] headers() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    String[] consumes() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    String[] produces() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>作用：</strong> 请求映射，用于建立请求 URL 和处理请求方法之间的对应关系。</p><p><strong>出现位置：</strong> 可以标记在方法上，也可以标记在类上。标记在类上用来窄化路径</p><ul><li><p><strong>类上：</strong> 请求 URL的 第一级访问目录。如果不写的话，就相当于应用的根目录。写的话需要以 <code>/</code> 开头。 它出现的目的是为了 URL 可以按照模块化管理：如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">账户模块：</span><br><span class="line">/account/add </span><br><span class="line">/account/update </span><br><span class="line">/account/delete </span><br><span class="line">... </span><br><span class="line">订单模块： </span><br><span class="line">/order/add </span><br><span class="line">/order/update </span><br><span class="line">/order/delete</span><br></pre></td></tr></table></figure><p><code>/account</code>、<code>/order</code> 部分就是把 RequsetMappding 写在类上，使 URL 更加精细。</p></li><li><p><strong>方法上：</strong> 请求 URL 的第二级访问目录</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/account&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>属性：</strong></p><ul><li><p><strong>path：</strong> 用于指定请求的 URL，别名 value，所以属性名可以省略</p></li><li><p><strong>method：</strong> 用于指定请求的方式。</p><ul><li>get：路径和超链接请求都是 get 请求</li><li>post：必须在表单中实现</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(path = &quot;/test&quot;,method = RequestMethod.GET)</span></span><br></pre></td></tr></table></figure></li><li><p><strong>params：</strong> 用于指定限制请求参数的条件</p><p>它支持简单的表达式。要求请求参数的 key 和 value 必须和配置的一模一样。</p><p>例如：</p><p><code>params = &#123;&quot;name&quot;&#125;</code>，表示请求参数必须有 name</p><p><code>params = &#123;&quot;!name&quot;&#125;</code>，表示请求参数中不能有 name</p><p><code>params = &#123;&quot;name&quot;,&quot;age&quot;&#125;</code>，表示请求参数中必须有 name 和 age</p></li></ul><h1 id="五-请求参数绑定"><a class="markdownIt-Anchor" href="#五-请求参数绑定"></a> 五、请求参数绑定</h1><p>form 表单中请求参数，都是基于 key=value 的。</p><p>SpringMVC 绑定请求参数的过程，就是通过把表单中提交的请求参数，作为控制器中方法参数进行绑定的。例如：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;account/findAccount?accountId=10&quot;&gt;查询账户&lt;/a&gt;</span><br><span class="line">&lt;!--请求参数是： accountId=<span class="number">10</span> --&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 查询账户 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="meta">@RequestMapping(path = &quot;/findAccount&quot;,method = RequestMethod.GET)</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">findAccount</span><span class="params">(Integer accountId)</span> </span>&#123; </span><br><span class="line">    System.out.println(<span class="string">&quot;查询了账户。。。。&quot;</span>+accountId); </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>支持的数据类型：</strong></p><ul><li>基本类型参数： 包括基本类型和 String 类型</li><li>POJO 类型参数： 包括实体类，以及关联的实体类</li><li>数组和集合类型参数： 包括 List 结构和 Map 结构的集合（包括数组）</li></ul><p>SpringMVC 绑定请求参数是自动实现的，但是要想使用，必须遵循使用要求。</p><p><strong>使用要求：</strong></p><ul><li>基本类型或 String 类型：参数名称必须和控制器中方法的形参名称保持一致。(严格区分大小写)</li><li>POJO 类型 或 它的关联对象： 表单中参数名称和 POJO 类的属性名称保持一致。并且控制器方法的参数类型是 POJO 类型。</li><li>集合类型：要求集合类型的请求参数必须在 POJO 中。在表单中请求参数名称要和 POJO 中集合属性名称相同。<ul><li>给 List 集合中的元素赋值，使用下标。</li><li>给 Map 集合中的元素赋值，使用键值对。</li></ul></li></ul><p><strong>代码演示：</strong></p><p>两个实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Role</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer rId;</span><br><span class="line">    <span class="keyword">private</span> String rName;</span><br><span class="line">    get()&amp;set()&amp;toString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * User</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> Role role;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Role&gt; roles;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; map;</span><br><span class="line">    get()&amp;set()&amp;toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jsp 页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;form action=<span class="string">&quot;user/simpleType&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">            简单类型：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;simpleType&quot;</span>/&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span> /&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">        &lt;form action=<span class="string">&quot;user/pojo&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">            POJO：</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;id&quot;</span> /&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;userName&quot;</span> /&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;role.rId&quot;</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;role.rName&quot;</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">        &lt;form action=<span class="string">&quot;user/list&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">            List集合：</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;list[0]&quot;</span> /&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;list[1]&quot;</span> /&gt;</span><br><span class="line">            List存储Role：</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;roles[0].rId&quot;</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;roles[0].rName&quot;</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">        &lt;form action=<span class="string">&quot;user/map&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">            Map集合：</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;map[key1]&quot;</span> /&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;map[key2]&quot;</span> /&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Cotroller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(path=&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;/simpleType&quot;,method = RequestMethod.POST)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testSimpleType</span><span class="params">(String simpleType)</span></span>&#123;</span><br><span class="line">        System.out.println(simpleType);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;/pojo&quot;,method = RequestMethod.POST)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testPojo</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;/list&quot;,method = RequestMethod.POST)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testList</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;/map&quot;,method = RequestMethod.POST)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testMap</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1requestparam-注解"><a class="markdownIt-Anchor" href="#1requestparam-注解"></a> 1：@RequestParam 注解</h2><p>可以从上边的参数绑定中看出一个硬性要求，就是 name 属性名必须和控制器的方法参数名保持一致，那如果非要不一样呢？此时就可以使用 @RequestParam，如：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;user/testParam&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;userName&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(path = &quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;testParam&quot;, method = RequestMethod.POST)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testParam</span><span class="params">(<span class="meta">@RequestParam(&quot;userName&quot;)</span> String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>作用：</strong> 把请求中指定名称的参数给控制器中的形参赋值。和起别名差不多</p><p><strong>属性：</strong></p><ul><li>value：请求参数中的名称。</li><li>required：请求参数中是否必须提供此参数。<ul><li>true：默认值，表示必须提供，如果不提供将报错。</li><li>false：可有可无</li></ul></li><li>defaultValue：默认值，如果页面传参了，则使用页面传参的值，如果没有指定，则使用默认值</li></ul><h2 id="2自定义类型转换器"><a class="markdownIt-Anchor" href="#2自定义类型转换器"></a> 2：自定义类型转换器</h2><p>内置转换器中没有 Date 与 String 之间转换，所以需要自定义转换器</p><p><strong>JSP：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;user/testCustomize&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    自定义类型转换：</span><br><span class="line">    &lt;input type=<span class="string">&quot;date&quot;</span> name=<span class="string">&quot;birthday&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p><strong>Controller：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(path = &quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;testCustomize&quot;, method = RequestMethod.POST)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testCustomize</span><span class="params">(Date birthday)</span></span>&#123;</span><br><span class="line">        System.out.println(birthday);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>自定义类型转换器：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Petrel</span></span><br><span class="line"><span class="comment"> * 自定义类型转换器</span></span><br><span class="line"><span class="comment"> * 将字符串转为日期格式</span></span><br><span class="line"><span class="comment"> * 实现接口 &quot;Converter&lt;S,T&gt;&quot;</span></span><br><span class="line"><span class="comment"> * S:源类型 - String</span></span><br><span class="line"><span class="comment"> * T:目标类型 - Date</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringToDateConverter</span> <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">String</span>, <span class="title">Date</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类型转换方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source 源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">convert</span><span class="params">(String source)</span> </span>&#123;</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">        Date date = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            date = simpleDateFormat.parse(source);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>spring-mvc.xml 中配置类型转换工厂</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;converters&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.converter.StringToDateConverter&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在注解驱动中引入类型转换工厂</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注解驱动: 关联类型转换工厂--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">&quot;conversionService&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h1 id="六-编码过滤器"><a class="markdownIt-Anchor" href="#六-编码过滤器"></a> 六、编码过滤器</h1><p>前边的案例中你在输入框，输入一下中文试试，会发现控制台是几个 <code>????</code></p><p>随便写一个表单</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;encodingFilter&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;name&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>控制器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;encodingFilter&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testEncodingFilter</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">    System.out.println(name);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入中文，查看控制台</p><p>在 web.xml 中配置编码过滤器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置编码过滤器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置初始化参数，指定编码格式:拦截的是post请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定请求和响应的编码格式-了解，一般不用指定 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 拦截所有请求，不包括静态资源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是此种方式只能拦截 POST 请求，拦截 GET 请求需要到 Tomcat 中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span>/&gt;</span> </span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> <span class="attr">useBodyEncodingForURI</span>=<span class="string">&quot;true&quot;</span>/&gt;</span> </span><br></pre></td></tr></table></figure><p>如果遇到 ajax 请求仍然乱码，把： <code>useBodyEncodingForURI=&quot;true&quot;</code> 改为 <code>URIEncoding=&quot;UTF-8&quot;</code> 即可。</p><h1 id="七-消息头相关的两个注解-了解"><a class="markdownIt-Anchor" href="#七-消息头相关的两个注解-了解"></a> 七、消息头相关的两个注解 – 了解</h1><h2 id="1requestheader"><a class="markdownIt-Anchor" href="#1requestheader"></a> 1：RequestHeader</h2><p>作用： 用于获取请求消息头。</p><p>属性：</p><ul><li>value：提供消息头名称</li><li>required：是否必须有此消息头</li></ul><p>注： 在实际开发中一般不怎么用。</p><p>使用示例 jsp中代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- RequestHeader注解 --&gt; </span><br><span class="line">&lt;a href=&quot;springmvc/useRequestHeader&quot;&gt;获取请求消息头&lt;/a&gt; </span><br></pre></td></tr></table></figure><p>控制器中代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * RequestHeader注解 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="meta">@RequestMapping(&quot;/useRequestHeader&quot;)</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">useRequestHeader</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="meta">@RequestHeader(value=&quot;Accept-Language&quot;, required=false)</span> </span></span></span><br><span class="line"><span class="function"><span class="params">    String requestHeader)</span></span>&#123;</span><br><span class="line">    System.out.println(requestHeader); </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="2cookievalue"><a class="markdownIt-Anchor" href="#2cookievalue"></a> 2：CookieValue</h2><p>作用： 用于把指定 cookie 名称的值传入控制器方法参数。</p><p>属性：</p><ul><li>value：指定 cookie 的名称。</li><li>required：是否必须有此 cookie。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- CookieValue注解 --&gt; </span><br><span class="line">&lt;a href=&quot;springmvc/useCookieValue&quot;&gt;绑定cookie的值&lt;/a&gt; </span><br></pre></td></tr></table></figure><p>控制器中的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cookie注解注解 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="meta">@RequestMapping(&quot;/useCookieValue&quot;)</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">useCookieValue</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="meta">@CookieValue(value=&quot;JSESSIONID&quot;,required=false)</span> </span></span></span><br><span class="line"><span class="function"><span class="params">    String cookieValue)</span></span>&#123; </span><br><span class="line">    System.out.println(cookieValue); </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八-modelattribute-和-sessionattribute"><a class="markdownIt-Anchor" href="#八-modelattribute-和-sessionattribute"></a> 八、ModelAttribute 和 SessionAttribute</h1><p>它俩就是一个域用来存储对象的</p><h2 id="1modelattribute"><a class="markdownIt-Anchor" href="#1modelattribute"></a> 1：@ModelAttribute</h2><p><strong><code>@ModelAttribute</code>：</strong> 标记在方法上或参数上</p><p><strong>属性：</strong> value：用于获取数据的 key。key 可以是 POJO 的属性名称，也可以是 map 结构的 key。</p><p><strong>特点：</strong></p><ul><li><p>方法上：当执行控制器中任何一个方法时，都会先执行 <code>@ModelAttribute</code> 标记的方法</p></li><li><p>参数上：获取指定的数据给参数赋值。</p></li></ul><p><strong>使用场景：</strong> 当表单提交不完整的实体类数据时，保证没有提交的字段的数据，使用的是原来数据库的数据。</p><p><strong>缺点：</strong> 慎重使用，因为执行控制器中任何一个方法时，都会先执行 <code>@ModelAttribute</code> 标记的方法， 效率太低</p><p>用法一：</p><p>jsp 的代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 修改用户信息 --&gt; </span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.requset.contextPath&#125;/user/testUpdate&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;id&quot;</span> value=<span class="string">&quot;1&quot;</span> &gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> &gt;&lt;br/&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;age&quot;</span> &gt;&lt;br/&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;保存&quot;</span>&gt; </span><br><span class="line">&lt;/form&gt; </span><br></pre></td></tr></table></figure><p>控制的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    user.setSex(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * update user set username = ? ,sex = ? where id = ?</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ModelAttribute</span>:在执行控制器中任何一个方法时，都会先执行</span></span><br><span class="line"><span class="comment"> *      findById方法返回一个User对象</span></span><br><span class="line"><span class="comment"> *      判断参数user中的属性是否为null，如果为null，则使用findById的方法返回值中的数据覆盖</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/testUpdate&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testUpdate</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    System.out.println(<span class="string">&quot;更新&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用法二：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findById</span><span class="params">(Integer id, Map&lt;String ,Object&gt; map)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    user.setSex(<span class="string">&quot;女&quot;</span>);</span><br><span class="line"></span><br><span class="line">    map.put(<span class="string">&quot;aa&quot;</span>,user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/testUpdate&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testUpdate</span><span class="params">(<span class="meta">@ModelAttribute(&quot;aa&quot;)</span> User user)</span></span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    System.out.println(<span class="string">&quot;更新&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2sessionattribute"><a class="markdownIt-Anchor" href="#2sessionattribute"></a> 2：@SessionAttribute</h2><p><strong>@SessionAttributes：</strong> 在 session 范围内存储对象，用于多次执行控制器方法间的参数共享。</p><p><strong>属性：</strong></p><ul><li>value：用于指定存入的属性名称</li><li>type：用于指定存入的数据类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@SessionAttributes(&#123;&quot;username&quot;,&quot;password&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把用户名和密码存入到Session范围内</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testPut&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPut</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取session范围内的对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testGet&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGet</span><span class="params">(ModelMap modelMap)</span></span>&#123;</span><br><span class="line">        Object username = modelMap.get(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        System.out.println(username);</span><br><span class="line">        Object password = modelMap.get(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清空session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sessionStatus</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testClear&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testClear</span><span class="params">(SessionStatus sessionStatus)</span></span>&#123;</span><br><span class="line">        sessionStatus.setComplete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="九-restful-风格的-url"><a class="markdownIt-Anchor" href="#九-restful-风格的-url"></a> 九、Restful 风格的 URL</h1><p>Restful 风格中取消 URL 中所有的动作词汇，强调 URI 对应资源实体</p><p>统一资源接口</p><ul><li>查询：GET</li><li>新增：PUT</li><li>修改：POST</li><li>删除：DELETE</li></ul><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">根据id查询用户： &#x2F;user&#x2F;findById?id&#x3D;1 restful风格：&#x2F;user&#x2F;operate&#x2F;1使用get方式提交</span><br><span class="line">根据id删除用户：&#x2F;user&#x2F;delById?id&#x3D;1 restful风格：&#x2F;user&#x2F;operate&#x2F;1使用delete方式提交</span><br><span class="line">更新用户：&#x2F;user&#x2F;update?id&#x3D;1&amp;username&#x3D;zzz  restful风格：&#x2F;user&#x2F;operate&#x2F;1使用put方式提交</span><br><span class="line">添加用户：&#x2F;user&#x2F;save?id&#x3D;1&amp;username&#x3D;zzz   restful风格：&#x2F;user&#x2F;operate使用post方式提交</span><br></pre></td></tr></table></figure><h2 id="1pathvariable"><a class="markdownIt-Anchor" href="#1pathvariable"></a> 1：@PathVariable</h2><p>类似于：<code>/user/operate/1</code> 这种查询方式，如何获取请求路径中的 id 值呢？</p><p><strong>作用：</strong> 用于绑定 url 中的占位符。例如：请求 url 中 /user/{id}，这个 <code>&#123;id&#125;</code> 就是 url 占位符。</p><p><strong>属性：</strong></p><ul><li>value：用于指定 url 中占位符名称。</li><li>required：是否必须提供占位符。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据id查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/user/&#123;id&#125;&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">findById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;findById:&quot;</span>+id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2hiddenthttpmethodfilter"><a class="markdownIt-Anchor" href="#2hiddenthttpmethodfilter"></a> 2：HiddentHttpMethodFilter</h2><p>由于浏览器 form 表单只支持 GET 与 POST 请求，而 DELETE、PUT 等 method 并不支持。</p><p>Spring3.0 添加了一个过滤器 HiddentHttpMethodFilter，可以将浏览器请求改为指定的请求方式，发送给控制器方法，使得支持 GET、POST、PUT与DELETE 请求。</p><p>web.xml 中配置过滤器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启PUT和DELETE --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>更新：</strong></p><p>jsp 页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--请求更新用户--%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/operate/1&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;%--要使用put，delete提交方式</span><br><span class="line">    <span class="number">1</span>) 在web.xml开启put和delete提交方式</span><br><span class="line">    <span class="number">2</span>） 表单的提交方式必须post</span><br><span class="line">    <span class="number">3</span>) 表单中必须设置一个隐藏域 name=_method value=PUT</span><br><span class="line">    <span class="number">4</span>) 请求的方法返回值必须以流的形式返回，在方法上标记注解：<span class="meta">@ResponseBody</span></span><br><span class="line">    流的形式返回： response.getWriter().print()</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;_method&quot;</span> value=<span class="string">&quot;PUT&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;更新&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新用户</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/operate/&#123;id&#125;&quot; , method = RequestMethod.PUT)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;update:&quot;</span> + id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>删除用户：</strong></p><p>页面：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--请求删除用户--%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/operate/1&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;_method&quot;</span> value=<span class="string">&quot;DELETE&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;删除&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除用户</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/operate/&#123;id&#125;&quot; , method = RequestMethod.DELETE)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;delById:&quot;</span> + id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十-控制器方法的返回值"><a class="markdownIt-Anchor" href="#十-控制器方法的返回值"></a> 十、控制器方法的返回值</h1><h2 id="1返回值是-void-类型"><a class="markdownIt-Anchor" href="#1返回值是-void-类型"></a> 1：返回值是 void 类型</h2><p>因为没有指定返回值页面，所以页面会显示 404，并会自动截取请求路径，进入视图解析器，拼接完整的路径</p><blockquote><p>注：因为在自定义的视图解析器中设置了前缀和后缀，所以 WEB-INF 和 <code>.jsp</code> 会自动拼接</p></blockquote><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/SpringMVC/01/image-20190911120950.webp" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testVoid&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testVoid</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;测试没有返回值&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那怎么办</p><ul><li><p>方式一：在相应的路径下创建相应的 jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在WEB-INF/user 下创建 testVoid.jsp</span><br></pre></td></tr></table></figure></li><li><p>方式二：重定向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testVoid2&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testVoid2</span><span class="params">(HttpServletResponse response)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;测试没有返回值&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//重定向不能进入web-inf路径</span></span><br><span class="line">        <span class="comment">//转发可以进入web-inf路径</span></span><br><span class="line">        response.sendRedirect(<span class="string">&quot;/index.jsp&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方式三：转发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testVoid3&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testVoid3</span><span class="params">(HttpServletResponse response, HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;测试没有返回值&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/WEB-INF/show.jsp&quot;</span>).forward(request,response);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ServletException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2返回值为-string-类型"><a class="markdownIt-Anchor" href="#2返回值为-string-类型"></a> 2：返回值为 String 类型</h2><p>默认的情况：转发请求，返回值为 String 类型，返回值直接进入视图解析器，拼接前缀和后缀，完整的路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方法的返回值为String类型：返回值直接进入视图解析器,拼接前缀和后缀,完整的路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testReturnString&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testReturnString</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3返回值是-modelandview"><a class="markdownIt-Anchor" href="#3返回值是-modelandview"></a> 3：返回值是 ModelAndView</h2><p>ModelAndView：模型 (数据) 和视图 (展示)，Model 和 View 也可以拆开来使用</p><p>Model 模型：封装数据</p><p>View 视图：指定页面 → 模型和视图</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回值类型为ModelAndView,包含数据和视图页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testReturnModelAndView&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">testReturnModelAndView</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//准备数据--数据库查询</span></span><br><span class="line">    List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">    user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    user.setId(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    User user1 = <span class="keyword">new</span> User();</span><br><span class="line">    user1.setUsername(<span class="string">&quot;zhangsan1&quot;</span>);</span><br><span class="line">    user1.setSex(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">    user1.setId(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    userList.add(user);</span><br><span class="line">    userList.add(user1);</span><br><span class="line">    </span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">    <span class="comment">//添加数据</span></span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;userList&quot;</span>,userList);</span><br><span class="line">    <span class="comment">//指定页面</span></span><br><span class="line">    modelAndView.setViewName(<span class="string">&quot;show&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>  modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十一-转发和重定向"><a class="markdownIt-Anchor" href="#十一-转发和重定向"></a> 十一、转发和重定向</h1><h2 id="1重定向"><a class="markdownIt-Anchor" href="#1重定向"></a> 1：重定向</h2><p>return 返回时加上 <code>redirect</code> 即可完成重定向</p><p>一般用于新增之后从新查询所有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存的方法</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 重定向</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:findAll&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询所有的方法</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/findAll&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">finAll</span><span class="params">()</span></span>&#123; &#125;</span><br></pre></td></tr></table></figure><h2 id="2转发"><a class="markdownIt-Anchor" href="#2转发"></a> 2：转发</h2><p>return 返回时加上 <code>forward</code> 即可完成转发</p><p>转发不会进入视图解析器，所以要写完整路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/forward&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">forward</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 转发不会进入视图解析器所以要拼接完整路径</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;forward:/WEB-INF/user/testVoid.jsp&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十二-交互-json-数据"><a class="markdownIt-Anchor" href="#十二-交互-json-数据"></a> 十二、交互 json 数据</h1><p>前边说了 SpringMVC 会自动进行参数封装 (key=value)形式的，但是一般前端数据会以 json 数据来传递</p><p>前端发来的 json 数据如何接收，如何将 json 数据进行返回</p><p>刚好这两种情况对应两个注解 <code>@RequsetBody</code> 和 <code>@ReponseBody</code></p><blockquote><p>前置知识点： Springmvc 默认用 MappingJacksonHttpMessageConverter 对 json 数据进行转换，需要加入 jackson 的包。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 只引入它一个也可以，因为它需要依赖其余两个包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1requestbody"><a class="markdownIt-Anchor" href="#1requestbody"></a> 1：@RequestBody</h2><p>标记在方法参数上，用于获取请求体内容。</p><p><strong>JSP：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span> onclick=<span class="string">&quot;execute()&quot;</span>&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">    &lt;%-- jquery的包自行下载引入 --%&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> </span><br><span class="line">            src=&quot;$&#123;pageContext.request.contextPath&#125;/js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">      <span class="function">function <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">          url: <span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/testRequestBody&quot;</span>,</span><br><span class="line">          <span class="comment">// 告诉服务器，发送的是json类型的数据。若不加，默认是key=value形式</span></span><br><span class="line">          contentType: <span class="string">&quot;application/json;charset=utf-8&quot;</span>,</span><br><span class="line">          data: <span class="string">&quot;&#123;\&quot;id\&quot;:1,\&quot;name\&quot;:\&quot;张三\&quot;,\&quot;password\&quot;:\&quot;abc\&quot;&#125;&quot;</span>,</span><br><span class="line">          type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">          success: function (data) &#123;</span><br><span class="line">              </span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>Controller：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testRequestBody&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testString</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span></span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果发现：点击提交没得用，查看控制台发现提示找不到 <code>jquery.min.js</code> 为什么呢</p><p>因为 DispatcherServlet 配置是拦截所有请求，它是没有处理静态资源的能力的，所以如何解决</p><h2 id="2放行静态资源"><a class="markdownIt-Anchor" href="#2放行静态资源"></a> 2：放行静态资源</h2><p>什么是静态资源：css、js、图片、html等都是静态资源</p><p>如果配置的 DispatcherServlet 的映射路径为 / 时，需要在 springmvc 文件中进行配置，对静态资源进行放行。</p><p>常见有两种方式：二选一即可</p><ol><li><p>spring-mvc.xml 配置文件中加入以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>在 spring-mvc.xml 文件中配置上 <code>&lt;mvc:default-servlet-handler/&gt;</code>，发出静态资源请求后，请求传到 DispatcherServlet，DispatcherServlet 调用 RequestMappingHandlerMapping 进行映射匹配，匹配不成功，DispatcherServlet 最终会将请求转交给 tomcat 默认 default 进行处理。</p></li><li><p>spring-mvc.xml 配置文件中加入以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 对静态资源放行，把js下的静态资源映射到js目录下 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/js/*&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/js/&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>mapping：映射，<code>*</code> 代表一级目录，<code>**</code> 代表多级目录。</p><p>location：本地资源路径，注意必须是 webapp 根目录下的路径。</p><p>配置的 location 一定要是 web-app 根目录下，如果将资源目录，放置到 web-app/WEB-INF 下面会发生 404</p></li></ol><h2 id="3reponsebody"><a class="markdownIt-Anchor" href="#3reponsebody"></a> 3：@ReponseBody</h2><p>标记在方法上，用于返回 java 对象，通过 HttpMessageConverter 接口转换为指定格式的数据如：json、xml 等</p><p>加了 <code>@ReponseBody</code> 后就不会进入视图解析器 <code>InternalResourceViewResolver</code> ，return 返回啥就是啥 (如 返回的是 String(字符串)，就返回的字符串 (不加返回的是视图) )</p><p><strong>jsp：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span> onclick=<span class="string">&quot;execute()&quot;</span>&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">    &lt;%-- jquery的包自行下载引入 --%&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> </span><br><span class="line">            src=&quot;$&#123;pageContext.request.contextPath&#125;/js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">      <span class="function">function <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">          url: <span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/sendJson&quot;</span>,</span><br><span class="line">          <span class="comment">// 告诉服务器我想要json类型的数据,不指定会自动判断</span></span><br><span class="line">          dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">          type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">          success: function (data) &#123;</span><br><span class="line">            alert(data.name)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>controller：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/sendJson&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">sendJson</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;海燕&quot;</span>);</span><br><span class="line">    user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4restcontroller"><a class="markdownIt-Anchor" href="#4restcontroller"></a> 4：@RestController</h2><p>标记在类上，<code>@RestController</code> = <code>@ResponseBody</code> ＋ <code>@Controller</code></p><p>表示该类所有的方法都是以 json 数据进行返回</p><h1 id="十三-springmvc-的文件上传"><a class="markdownIt-Anchor" href="#十三-springmvc-的文件上传"></a> 十三、SpringMVC 的文件上传</h1><blockquote><p>文件上传的原理分析：</p><p>当 form 表单的 enctype 取值不是默认值后，<code>request.getParameter()</code> 将失效。</p><p><code>enctype=”application/x-www-form-urlencoded”</code> 时，form 表单的正文内容是：key=value&amp;key=value</p><p><code>enctype=&quot;Mutilpart/form-data&quot;</code>时，请求正文内容就变成： 每一部分都是 MIME 类型描述的正文</p><p>-----------------------------7de1a433602ac 分界符</p><p>Content-Disposition: form-data; name=“userName” 协议头</p><p>aaa 协议的正文</p><p>-----------------------------7de1a433602ac</p><p>Content-Disposition: form-data;name=“file”;filename=“D:\develop\a.txt”</p><p>Content-Type: text/plain 协议的类型（MIME类型）</p><p>bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb</p><p>-----------------------------7de1a433602ac–</p></blockquote><p>文件上传的必要前提：</p><ol><li><p>form 表单的 enctype 取值必须是：multipart/form-data (默认值是:application/x-www-form-urlencoded)</p><p>enctype：是表单请求正文的类型</p></li><li><p>method属性取值必须是：Post</p></li><li><p>提供一个文件选择域 <code>&lt;input type=&quot;file&quot; /&gt;</code></p></li></ol><h2 id="1commons-fileupload-第三方组件"><a class="markdownIt-Anchor" href="#1commons-fileupload-第三方组件"></a> 1：commons-fileupload - 第三方组件</h2><p>使用 commons-fileupload 组件实现文件上传，需要导入该组件相应的支撑 jar 包：commons-fileupload 和commons-io。</p><p>commons-io 不属于文件上传组件的开发 jar 文件，但 Commons-fileupload 组件从 1.1 版本开始，它工作时需要 commons-io 包的支持。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- commons-fileupload依赖commons-io,所以只引入commons-fileupload,commons-io会自动引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>jsp 页面：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">    上传文件的表单前提</span><br><span class="line">    <span class="number">1</span>) 提交方式必须是post</span><br><span class="line">    <span class="number">2</span>) 表单的类型必须：multipart/form-data， 多功能表单数据</span><br><span class="line">    <span class="number">3</span>) 必须有一个type=file的表单元素</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/upload&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt; &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;upload&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="2文件解析器-commonsmultipartresolver"><a class="markdownIt-Anchor" href="#2文件解析器-commonsmultipartresolver"></a> 2：文件解析器 - CommonsMultipartResolver</h2><p>spring-mvc.xml：配置文件解析器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置文件上传解析器 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- id的值是固定的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置上传文件的最大尺寸为5MB --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>5242880<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 声明参数 变量接收数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/upload&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(String username, MultipartFile upload, HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 1. 目标路径</span></span><br><span class="line">    <span class="comment">// 获取项目运行的路径</span></span><br><span class="line">    String realPath = request.getSession().getServletContext().getRealPath(<span class="string">&quot;/upload&quot;</span>);</span><br><span class="line">    <span class="comment">// 判断该路径是否存在</span></span><br><span class="line">    File realFile = <span class="keyword">new</span> File(realPath);</span><br><span class="line">    <span class="keyword">if</span>(!realFile.exists())&#123;</span><br><span class="line">        realFile.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 获取唯一的文件名称(包含扩展名)</span></span><br><span class="line">    String uuidName = UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取扩展名: 获取文件名</span></span><br><span class="line">    <span class="comment">// 获取真实的文件名</span></span><br><span class="line">    String originalFilename = upload.getOriginalFilename();</span><br><span class="line">    <span class="comment">// 截取字符串，获取文件的扩展名</span></span><br><span class="line">    String extendName = originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    System.out.println(extendName);</span><br><span class="line">    <span class="comment">// 唯一的文件名</span></span><br><span class="line">    String fileName = uuidName + extendName;</span><br><span class="line">    System.out.println(fileName);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.文件上传</span></span><br><span class="line">    <span class="comment">// transferTo: 执行文件上传</span></span><br><span class="line">    <span class="comment">// 参数file：目录文件</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        upload.transferTo(<span class="keyword">new</span> File(realFile, fileName));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3跨服务器上传"><a class="markdownIt-Anchor" href="#3跨服务器上传"></a> 3：跨服务器上传</h2><p>在实际开发中，会有很多处理不同功能的服务器。例如：</p><ul><li>应用服务器：负责部署应用</li><li>数据库服务器：运行数据库</li><li>缓存和消息服务器：负责处理大并发访问的缓存和消息</li><li>文件服务器：负责存储用户上传文件的服务器。</li></ul><p>(注意：此处说的不是服务器集群） 分服务器处理的目的是让服务器各司其职，从而提高项目的运行效率。</p><p>tomcat 默认不能跨服上传的，修改：<code>tomcat/conf/web.xml</code> ：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>0<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--需要添加的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>readonly<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置图片服务器：</p><ol><li>创建一个 web 项目</li><li>配置一个 tomcat，与原来 tomcat 端口号不一致</li><li>在 webapp 目录下创建一个 upload 目录，空的文件夹不会编译，需要在 upload 目录添加（任意）一个文件</li></ol><p>项目导入 jersey 的坐标：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.jersey<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.jersey<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改 Controller 代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 声明参数 变量接收数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/uploadServer&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">uploadServer</span><span class="params">(String username , MultipartFile upload, HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    <span class="comment">//1. 配置图片服务器的路径</span></span><br><span class="line">    String serverPath = <span class="string">&quot;http://localhost:9090/img_server/upload/&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//2. 获取唯一的文件名称(包含扩展名)</span></span><br><span class="line">    String uuidName = UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">//获取扩展名: 获取文件名</span></span><br><span class="line">    <span class="comment">//获取真实的文件名</span></span><br><span class="line">    String originalFilename = upload.getOriginalFilename();</span><br><span class="line">    <span class="comment">//截取字符串，获取文件的扩展名</span></span><br><span class="line">    String extendName = originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    System.out.println(extendName);</span><br><span class="line">    <span class="comment">//唯一的文件名</span></span><br><span class="line">    String fileName = uuidName + extendName;</span><br><span class="line">    System.out.println(fileName);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取jersey服务器客户端</span></span><br><span class="line">    Client client = Client.create();</span><br><span class="line">    <span class="comment">//配置上传路径的资源对象</span></span><br><span class="line">    WebResource resource = client.resource(serverPath + fileName);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//上传</span></span><br><span class="line">    <span class="comment">//参数：资源的类型</span></span><br><span class="line">    <span class="comment">//文件的字节内容</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        resource.put(String.class,upload.getBytes());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 jsp 页面中的路径</p><h1 id="十四-全局异常解析器-handlerexceptionresolver"><a class="markdownIt-Anchor" href="#十四-全局异常解析器-handlerexceptionresolver"></a> 十四、全局异常解析器 - HandlerExceptionResolver</h1><p>dao、service、controller 出现的异常都通过 throws Exception 向上抛出，最后由 SpringMVC 前端控制器交由异常处理器进行异常处理。</p><p>自定义异常的统一处理对象，实现接口：HandlerExceptionResolver</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyExceptionResolver</span> <span class="keyword">implements</span> <span class="title">HandlerExceptionResolver</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 解析异常</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> handler</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> e 其他模块传过来的异常对象</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">resolveException</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception e)</span> </span>&#123;</span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        <span class="comment">//添加数据</span></span><br><span class="line">        <span class="comment">//instanceof: 实例类型判断运算符</span></span><br><span class="line">        <span class="keyword">if</span>(e <span class="keyword">instanceof</span> CustomException)&#123;</span><br><span class="line">            <span class="comment">//强制转换</span></span><br><span class="line">            CustomException customException = (CustomException) e;</span><br><span class="line">            modelAndView.addObject(<span class="string">&quot;message&quot;</span>,customException.getMessage() );</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            modelAndView.addObject(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;系统错误，请联系管理员!!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//指定页面</span></span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十五-springmvc-拦截器-handlerinterceptor"><a class="markdownIt-Anchor" href="#十五-springmvc-拦截器-handlerinterceptor"></a> 十五、SpringMVC 拦截器 - HandlerInterceptor</h1><p>JavaWeb 三大组件：</p><ul><li><p>Servlet：接收请求、处理请求、相应内容</p></li><li><p>Filter：拦截请求，在 Servlet 之前运行的，可以将一些通用性操作放到 Filter 中，如：权限校验、编码等</p></li><li><p>Listener：Servlet 规范中的一种特殊类，用于监听 ServletContext、HttpSession 和 ServletRequest 等域对象的创建与销毁事件，当 Web 应用启动时启动，当 Web 应用销毁时销毁。用于监听域对象的属性发生修改的事件，可以在事件发生前、发生后做一些必要的处理</p><p>其中 ServletContextListener 可以监听 ServletContext 的生命周期，ServletContext 创建就意味着项目启动，它销毁了就代表项目关闭了</p></li></ul><p>过滤器 和 拦截器的区别：</p><ul><li><p>过滤器：是 Servlet 的一部分，任何 web 项目都可以使用</p><p>配置 <code>/*</code> 后会过滤所有的资源（请求）</p></li><li><p>拦截器：是 SpringMVC 的一部分，只能在 SpringMVC 中使用</p><p>配置了 <code>/*</code> 只会拦截请求，不会拦截静态资源</p></li></ul><p>拦截器类似于 Servlet 开发中的过滤器 Filter，用于对处理器进行预处理和后处理。</p><p>拦截器链 (Interceptor Chain)：拦截器链就是将拦截器按一定的顺序联结成一条链。在访问被拦截的方法或字段时，拦截器链中的拦截器就会按其之前定义的顺序被调用。</p><p>拦截器也是 AOP 思想的具体应用。</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/SpringMVC/01/image-20190911120900.webp" /><p>要想自定义拦截器， 要求必须实现：HandlerInterceptor 接口。</p><p>自定义拦截器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建自己的拦截器类，需要实现接口HandlerInterceptor</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterceptor1</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行顺序：在控制器方法执行前执行</span></span><br><span class="line"><span class="comment">     * 作用：拦截所有的请求，判断是否可以进行下一步执行</span></span><br><span class="line"><span class="comment">     * 举例：如果判断你是否登录成功了,如果登录成功，则放行，返回值配置为true</span></span><br><span class="line"><span class="comment">     *      如果登录失败，则拦截，返回值配置为false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">                             Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;拦截器1：preHandle执行了&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行的顺序： preHandel放行操作，可以执行</span></span><br><span class="line"><span class="comment">     * 控制器方法返回值之前执行,作用：可以对返回的数据验证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, </span></span></span><br><span class="line"><span class="function"><span class="params">                           Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;拦截器1：postHandle执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行顺序：preHandler必须放行, 执行完postHandle，之后执行</span></span><br><span class="line"><span class="comment">     * 作用：释放资源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, </span></span></span><br><span class="line"><span class="function"><span class="params">                                Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;拦截器1：afterCompletion执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Spring-MVC.xml 配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--扫描包，创建类对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1o24.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/pages/&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入拦截器:配置拦截器链--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置单个拦截器对象--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--拦截所有的请求--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--指定拦截器类--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.interceptor.MyInterceptor2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置单个拦截器对象--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--拦截所有的请求--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--指定拦截器类--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.interceptor.MyInterceptor1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--静态资源全部放行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:default-servlet-handler</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> SpringMVC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringMVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring 基础使用</title>
      <link href="/article/6c92115f/"/>
      <url>/article/6c92115f/</url>
      
        <content type="html"><![CDATA[<h1 id="一-spring-概述"><a class="markdownIt-Anchor" href="#一-spring-概述"></a> 一、Spring 概述</h1><p><a href="https://spring.io/">Spring</a> 框架早已成为 Java 后端开发事实上的行业标准，无数的公司选择 Spring 作为基础的开发框架，因此，如何用好 Spring，也就成为 Java 程序员的必修课之一。</p><h2 id="1spring-是什么"><a class="markdownIt-Anchor" href="#1spring-是什么"></a> 1：Spring 是什么</h2><p>Spring 是分层的 Java SE/EE 应用 <strong>full-stack</strong> 轻量级开源框架，以 <strong>IoC（Inverse Of Control：控制反转）和 AOP（Aspect Oriented Programming：面向切面编程）</strong> 为内核，提供了展现层 Spring MVC 和持久层 Spring JDBC 以及业务层事务管理等众多的企业级应用技术，还能整合开源世界众多著名的第三方框架和类库，逐渐成为使用最多的 Java EE 企业应用开源框架。</p><h2 id="2spring-的优势"><a class="markdownIt-Anchor" href="#2spring-的优势"></a> 2：Spring 的优势</h2><ol><li><strong>非侵入式：</strong> 基于 Spring 开发的应用中的对象可以不依赖于 Spring 的 API</li><li><strong>依赖注入：</strong> 通过 Spring 提供的 IoC 容器，可以将对象间的依赖关系交由 Spring 进行控制，避免硬编码所造成的过度程序耦合。用户也不必再为单例模式类、属性文件解析等这些很底层的需求编写代码，可以更专注于上层的应用</li><li><strong>容器：</strong> Spring 是一个容器，因为它包含并且管理应用对象的生命周期</li><li><strong>面向切面编程：</strong> 通过 Spring 的 AOP 功能，方便进行面向切面的编程，许多不容易用传统 OOP 实现的功能可以通过 AOP 轻松应对</li><li><strong>声明式事务的支持：</strong> 可以将我们从单调烦闷的事务管理代码中解脱出来，通过声明式方式灵活的进行事务的管理，提高开发效率</li><li><strong>组件化：</strong> Spring 实现了使用简单的组件配置组合成一个复杂的应用。在 Spring 中可以使用 XML 和 Java 注解组合这些对象。</li><li><strong>一站式：</strong> 在 IOC 和 AOP 的基础上可以整合各种企业应用的开源框架和优秀的第三方类库 (实际上 Spring 自身也提供了表述层的 SpringMVC 和持久层的 Spring JDBC)</li></ol><h2 id="3spring-的核心组件"><a class="markdownIt-Anchor" href="#3spring-的核心组件"></a> 3：Spring 的核心组件</h2><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120952.webp" alt="01" /><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data access:</span> </span><br><span class="line">  <span class="attr">spring-jdbc:</span> <span class="string">提供了对Jdbc模板的支持</span></span><br><span class="line">  <span class="attr">spring-orm:</span> <span class="string">整合第三方ORM框架(例如Hibernate)时使用</span></span><br><span class="line">  <span class="attr">spring-oxm:</span> <span class="string">对象xml映射的支持</span></span><br><span class="line">  <span class="attr">spring-jms:</span> <span class="string">提供对java</span> <span class="string">消息服务的支持</span></span><br><span class="line">  <span class="attr">spring-tx:</span> <span class="string">对事务的支持</span></span><br><span class="line"><span class="attr">web:</span> </span><br><span class="line">  <span class="attr">spring-web:</span> <span class="string">基础</span> <span class="string">web</span> <span class="string">功能，如文件上传</span></span><br><span class="line">  <span class="attr">spring-webmvc:</span> <span class="string">mvc</span> <span class="string">实现</span></span><br><span class="line">  <span class="attr">spring-webmvc-portlet:</span> <span class="string">基于</span> <span class="string">portlet</span> <span class="string">的</span> <span class="string">mvc</span> <span class="string">实现</span></span><br><span class="line">  <span class="attr">spring-websocket:</span> <span class="string">对WebSocket的支持</span></span><br><span class="line"><span class="attr">spring-aop:</span> <span class="string">提供AOP</span> <span class="string">(面向切面编程)的实现</span></span><br><span class="line"><span class="attr">spring-aspects:</span> <span class="string">提供对AspectJ框架的整合</span></span><br><span class="line"><span class="attr">instrument:</span> </span><br><span class="line">  <span class="attr">spring-instrument:</span> <span class="string">提供一些类级的工具支持和</span> <span class="string">ClassLoader</span> <span class="string">级的实现，用于服务器</span></span><br><span class="line">  <span class="attr">spring-instrument-tomcat:</span> <span class="string">针对</span> <span class="string">tomcat</span> <span class="string">的</span> <span class="string">instrument</span> <span class="string">实现</span></span><br><span class="line"><span class="attr">spring-messaging:</span> <span class="string">对消息服务的支持，例如搭配JMS、搭配AMQP、搭配WebSocket等</span></span><br><span class="line"><span class="attr">core:</span> </span><br><span class="line">  <span class="attr">spring-core:</span> <span class="string">依赖注入</span> <span class="string">IoC</span> <span class="string">与</span> <span class="string">DI</span> <span class="string">的最基本实现</span></span><br><span class="line">  <span class="attr">spring-beans:</span> <span class="string">Bean</span> <span class="string">工厂与</span> <span class="string">bean</span> <span class="string">的装配</span></span><br><span class="line">  <span class="attr">spring-context:</span> <span class="string">spring</span> <span class="string">的</span> <span class="string">context</span> <span class="string">即</span> <span class="string">IoC</span> <span class="string">容器</span></span><br><span class="line">  <span class="attr">spring-context-support:</span> <span class="string">spring</span> <span class="string">额外支持包，比如邮件服务、视图解析等</span></span><br><span class="line">  <span class="attr">spring-expression:</span> <span class="string">spring</span> <span class="string">对表达式语言的支持</span></span><br><span class="line"><span class="attr">test:</span> </span><br><span class="line">  <span class="attr">spring-text:</span> <span class="string">对单元测试的支持</span></span><br></pre></td></tr></table></figure><h1 id="二-程序的耦合与解耦-了解"><a class="markdownIt-Anchor" href="#二-程序的耦合与解耦-了解"></a> 二、程序的耦合与解耦 - 了解</h1><p>什么是耦合：模块之间的关联程度, 依赖程度</p><p>什么是解耦：降低模块之间的耦合度 (依赖关系)</p><p>解耦的目的：编译期不依赖，运行期才依赖</p><p>解耦思路：</p><ol><li>把全限类名都放到配置文件中</li><li>通过工厂帮助创建对象</li></ol><h2 id="1代码体现"><a class="markdownIt-Anchor" href="#1代码体现"></a> 1：代码体现</h2><p>早期我们的 JDBC 操作，注册驱动时，我们为什么不使用 DriverManager 的 register 方法，而是采用 <code>Class.forName</code> 的方式？</p><p><strong>原因就是：</strong> 我们的类依赖了数据库的具体驱动类（MySQL），如果这时候更换了数据库品牌（比如 Oracle），需要修改源码来重新数据库驱动。这显然不是我们想要的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 实际开发中应该做到：编译期不依赖，运行时才依赖。</span></span><br><span class="line"><span class="comment"> * 解耦的思路： </span></span><br><span class="line"><span class="comment"> * 第一步：使用反射来创建对象，而避免使用new关键字。 </span></span><br><span class="line"><span class="comment"> * 第二步：通过读取配置文件来获取要创建的对象全限定类名 </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcDemo1</span> </span>&#123; <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123; </span><br><span class="line">    <span class="comment">// 1.注册驱动 </span></span><br><span class="line">    <span class="comment">// DriverManager.registerDriver(new com.mysql.jdbc.Driver());</span></span><br><span class="line">    Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>); </span><br><span class="line">    <span class="comment">// 2.获取连接</span></span><br><span class="line">    <span class="comment">// 3.获取操作数据库的预处理对象 </span></span><br><span class="line">    <span class="comment">// 4.执行SQL，得到结果集 </span></span><br><span class="line">    <span class="comment">// 5.遍历结果集 </span></span><br><span class="line">    <span class="comment">// 6.释放资源 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用反射来注册驱动</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);<span class="comment">// 此处只是一个字符串 </span></span><br></pre></td></tr></table></figure><p>此时的好处是，我们的类中不再依赖具体的驱动类，此时就算删除 mysql 的驱动 jar 包，依然可以编译（运行就不要想了，没有驱动不可能运行成功的）。</p><p>同时，也产生了一个新的问题，mysql 驱动的全限定类名字符串是在 java 类中写死的，一旦要改还是要修改源码。</p><p>解决这个问题也很简单，<strong>使用配置文件配置</strong></p><h2 id="2工厂模式解耦-自定义ioc"><a class="markdownIt-Anchor" href="#2工厂模式解耦-自定义ioc"></a> 2：工厂模式解耦 – 自定义IOC</h2><p>创建 UserDao 与 UserService 及相应的实现类</p><p>配置文件：beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        用bean标签配置所有bean对象</span></span><br><span class="line"><span class="comment">        id：对象的唯一标识</span></span><br><span class="line"><span class="comment">        class：全限定类名，意味着SpringIOC内部的核心就是根据全限定类名来反射创建对象</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.dao.impl.UserDaoImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.service.impl.UserServiceImpl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>pom 中引入解析 xml 的 dom4j 及 junit</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建 BeanFactory 工厂对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String ,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">// 提前把所有的对象创建出来,存储</span></span><br><span class="line">    <span class="comment">// Map:因为有查找需求 --相当于容器对象-- 包含了所有的对象</span></span><br><span class="line">    <span class="comment">// 静态代码块</span></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">// 获取配置文件的输入流对象</span></span><br><span class="line">        InputStream in = BeanFactory.class</span><br><span class="line">            .getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// 解析xml获取xml中所有的信息</span></span><br><span class="line">        SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建文档对象</span></span><br><span class="line">            Document doc = reader.read(in);</span><br><span class="line">            <span class="comment">// 获取根节点</span></span><br><span class="line">            Element root = doc.getRootElement();</span><br><span class="line">            <span class="comment">// 获取根节点中所有的子节点</span></span><br><span class="line">                <span class="comment">// element(&quot;bean&quot;) : 获取第一个叫bean的子节点</span></span><br><span class="line">                <span class="comment">// elements(&quot;bean&quot;) : 获取所有叫bean的子节点</span></span><br><span class="line">                <span class="comment">// elements() : 获取所有的子节点</span></span><br><span class="line">            List&lt;Element&gt; beanList = root.elements(<span class="string">&quot;bean&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取每一个bean的id和class</span></span><br><span class="line">            <span class="keyword">for</span> (Element element : beanList) &#123;</span><br><span class="line">                String id = element.attributeValue(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                String className = element.attributeValue(<span class="string">&quot;class&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 通过className全限类名创建对象--获取字节码</span></span><br><span class="line">                Class clazz = Class.forName(className);</span><br><span class="line">                <span class="comment">// 通过反射创建对象</span></span><br><span class="line">                Object obj = clazz.newInstance();</span><br><span class="line">                <span class="comment">// 存储在Map集合中</span></span><br><span class="line">                    <span class="comment">// key:id</span></span><br><span class="line">                    <span class="comment">// value:obj</span></span><br><span class="line">                map.put(id ,obj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 需要实现的功能，传入一个名字，获取一个Bean对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> map.get(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCustom</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCustomIoc</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Object userService = BeanFactory.getBean(<span class="string">&quot;userService&quot;</span>);</span><br><span class="line">        System.out.println(userService);</span><br><span class="line">        Object userService2 = BeanFactory.getBean(<span class="string">&quot;userService&quot;</span>);</span><br><span class="line">        System.out.println(userService2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现这样创建出来的对象是单例的，若想让他是多例的，需要在 get 方法中创建对象</p><p>BeanFactory 代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,String&gt; map=<span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">// 提前把所有的对象创建出来，存储</span></span><br><span class="line">    <span class="comment">// Map:因为有查找需求 --相当于容器对象 --包含所有对象</span></span><br><span class="line">    <span class="comment">// 静态代码块</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 获取配置文件的输入流对象</span></span><br><span class="line">        InputStream in = BeanFactory.class</span><br><span class="line">                .getClassLoader()</span><br><span class="line">                .getResourceAsStream(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// 解析xml获取xml中所有信息</span></span><br><span class="line">        SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建文档对象</span></span><br><span class="line">            Document doc = saxReader.read(in);</span><br><span class="line">            <span class="comment">// 获取根节点</span></span><br><span class="line">            Element root = doc.getRootElement();</span><br><span class="line">            <span class="comment">// 获取根节点中所有的子节点</span></span><br><span class="line">               <span class="comment">// element(&quot;bean&quot;) : 获取第一个叫bean的子节点</span></span><br><span class="line">               <span class="comment">// elements(&quot;bean&quot;) : 获取所有叫bean的子节点</span></span><br><span class="line">               <span class="comment">// elements() : 获取所有的子节点</span></span><br><span class="line">            List&lt;Element&gt; beanList = root.elements(<span class="string">&quot;bean&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取每一个bean的id和class</span></span><br><span class="line">            <span class="keyword">for</span> (Element element : beanList) &#123;</span><br><span class="line">                String id = element.attributeValue(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                String className = element.attributeValue(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">                <span class="comment">// 存入Map集合</span></span><br><span class="line">                <span class="comment">// key:id</span></span><br><span class="line">                <span class="comment">// value:className(全限定类名)</span></span><br><span class="line">                map.put(id,className);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        Object o=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 通过传入的名字获取className--获取全限定类名</span></span><br><span class="line">            <span class="comment">// 再根据className全限类名创建对象--获取字节码</span></span><br><span class="line">            Class clazz = Class.forName(map.get(name));</span><br><span class="line">            <span class="comment">// 根据反射创建对象</span></span><br><span class="line">            o = clazz.newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时测试出创建出来的对象是多例的</p><h2 id="3控制反转-inversion-of-control"><a class="markdownIt-Anchor" href="#3控制反转-inversion-of-control"></a> 3：控制反转 - Inversion Of Control</h2><p>上边使用工厂模式进行解耦。 它的核心思想就是：</p><ol><li>通过读取配置文件反射创建对象。</li><li>把创建出来的对象都存起来，当我们下次使用时可以直接从存储的位置获取。</li></ol><p>这里面要解释两个问题：</p><ul><li><p>存哪去？</p><p>分析：由于我们是很多对象，肯定要找个集合来存。这时候有 Map 和 List 供选择。 到底选 Map 还是 List 就看我们有没有查找需求。有<strong>查找需求，选 Map</strong> 。存放对象的集合也称之为<strong>容器</strong>。</p></li><li><p>什么是工厂？</p><p>工厂就是负责给我们从容器中获取指定对象的类。这时候我们获取对象的方式发生了改变。</p><p>原来： 我们在获取对象时，都是采用 new 的方式。是<strong>主动</strong>的。</p><p>现在： 我们获取对象时，同时跟工厂要，有工厂为我们查找或者创建对象。是<strong>被动</strong>的。</p></li></ul><p>这种被动接收的方式获取对象的思想就是控制反转，它是 spring 框架的核心之一。</p><p><strong>控制反转</strong> (Inversion of Control，缩写为<strong>IoC</strong>) ：把创建对象的权力交给框架，它包含 <strong>依赖注入</strong> (Dependency Injection，简称<strong>DI</strong>) 和 <strong>依赖查找</strong> (Dependency Lookup)</p><h1 id="三-ioc"><a class="markdownIt-Anchor" href="#三-ioc"></a> 三、IOC</h1><p>Inversion of Control：控制反转，实际上就是指对一个对象的控制权的反转。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">自我理解:</span> </span><br><span class="line">  <span class="string">原始:</span> <span class="string">一个对象就是一个唯一实例，如果只是</span> <span class="string">new</span> <span class="string">对象、然后赋值，只能在当前类中使用。</span></span><br><span class="line">  <span class="string">如果其他类中需要一个一模一样的对象，就需要再次</span> <span class="string">new</span> <span class="string">对象，或者使用上边那个类创建对象后使用</span></span><br><span class="line">  <span class="attr">Spring:</span> <span class="string">可以将这个对象交给Spring容器去管理(xml解析及根据全限定类名反射创建对象),需要时从容器中获取。</span></span><br><span class="line">  <span class="string">交给Spring之后,</span> <span class="string">这个对象什么时候创建，什么时候销毁，都由Spring控制</span></span><br><span class="line">  <span class="string">也就是将控制权由我们自己转给了Spring</span></span><br><span class="line">  <span class="string">交给Spring管理的对象统称为Bean对象</span></span><br></pre></td></tr></table></figure><p><strong>入门程序：</strong></p><ol><li><p>pom.xml 添加 Spring 核心依赖，RELEASE：发行版</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring核心依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在 resource 中创建 beans.xml 并 引入约束</p><p>或者直接在 resources 右键 → new → XML Configuration File → Spring Config (因为已经引入了 SpringContext 的包)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">引入bean的名称空间</span></span><br><span class="line"><span class="comment">xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">引入约束</span></span><br><span class="line"><span class="comment">    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="comment">     https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span></span><br><span class="line"><span class="comment">约束：限制xml的书写</span></span><br><span class="line"><span class="comment">dtd:mybatis</span></span><br><span class="line"><span class="comment">schema:spring</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.dao.impl.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建容器，获取对象</p><p><code>org.springframework.context.ApplicationContext</code>：它是一个接口，要找实现类：</p><ol><li><code>org.springframework.context.ClassPathXmlApplicationContext</code>：xml 配置</li><li><code>org.springframework.context.annotation.AnnotationConfigApplicationContext;</code>：注解配置</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.创建spring的IOC容器</span></span><br><span class="line">ApplicationContext ac=<span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line"><span class="comment">// 2.获取对象</span></span><br><span class="line">Object userDao = ac.getBean(<span class="string">&quot;userDao&quot;</span>);</span><br><span class="line">System.out.println(userDao);</span><br></pre></td></tr></table></figure></li></ol><h2 id="1spring-中工厂类的结构图"><a class="markdownIt-Anchor" href="#1spring-中工厂类的结构图"></a> 1：Spring 中工厂类的结构图</h2><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120958.webp" alt="beanFactory关系图" /><p>BeanFactory 接口是 spring 容器的顶层接口</p><ul><li>ApplicationContext 接口是 beanFactory 子接口<ul><li>实现类：ClassPathXmlApplicationContext → 从类路径之下读取配置文件 (常用)</li><li>实现类：FileSystemXmlApplicationContext → 从绝对路径指定的配置文件读取</li><li>实现类：AnnotationConfigApplicationContext → 纯注解配置使用的类 (常用)</li></ul></li></ul><p><strong>BeanFactory 和 ApplicationContext 的区别：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Resource resource = <span class="keyword">new</span> ClassPathResource(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line"><span class="comment">// BeanFactory:创建容器对象时，只是加载了配置文件，没有创建对象</span></span><br><span class="line"><span class="comment">// 获取对象时:创建对象</span></span><br><span class="line">BeanFactory beanFactory = <span class="keyword">new</span> XmlBeanFactory(resource);</span><br><span class="line">Object userDao = beanFactory.getBean(<span class="string">&quot;userDao&quot;</span>);</span><br><span class="line">System.out.println(userDao);</span><br></pre></td></tr></table></figure><p>使用 ApplicationContext 创建对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在创建容器对象时，创建对象(常用)</span></span><br><span class="line"><span class="comment">// ApplicationContext:在创建容器时只创建单例模式的对象、多例模式的对象，在获取时创建</span></span><br><span class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">Object userDao2 = ac.getBean(<span class="string">&quot;userDao&quot;</span>);</span><br><span class="line">System.out.println(userDao2);</span><br></pre></td></tr></table></figure><h2 id="2获取-bean-对象"><a class="markdownIt-Anchor" href="#2获取-bean-对象"></a> 2：获取 Bean 对象</h2><p>使用 getBean获取对象的方式有：</p><ol><li><p>根据 id/name 来获取对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line"><span class="comment">// 根据名称获取该对象</span></span><br><span class="line">Object userDao = ac.getBean(<span class="string">&quot;userDao&quot;</span>);</span><br><span class="line">System.out.println(userDao);</span><br></pre></td></tr></table></figure></li><li><p>根据 类型 来获取对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据类型获取该对象</span></span><br><span class="line"><span class="comment">// 如果该类型有两个实现类，会执行异常</span></span><br><span class="line">UserDao userDao = ac.getBean(UserDao.class);</span><br><span class="line">System.out.println(userDao);</span><br></pre></td></tr></table></figure></li><li><p>根据 id/name 和 类型 来获取对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 同时根据名称和类型来获取对象</span></span><br><span class="line"><span class="comment">// 得到是id为userDao1的对象，类型为UserDao接口的实现类</span></span><br><span class="line">UserDao userDao = ac.getBean(<span class="string">&quot;userDao2&quot;</span>, UserDao.class);</span><br><span class="line">System.out.println(userDao);</span><br></pre></td></tr></table></figure></li></ol><h2 id="3bean-标签"><a class="markdownIt-Anchor" href="#3bean-标签"></a> 3：bean 标签</h2><p><strong>作用：<strong>用于配置对象让 Spring 来创建的。 默认情况下它</strong>调用</strong>的是类中的<strong>无参构造</strong>，如果没有无参构造则不能创建成功。</p><p><strong>属性：</strong></p><ul><li><strong>id：</strong> 给对象在容器中提供一个唯一标识，用于获取对象。使用 <strong>name</strong> 亦可</li><li><strong>class：</strong> 指定类的全限定类名，用于反射创建对象，默认情况下调用<strong>无参构造</strong>。</li><li><strong>scope：指定对象的作用范围</strong><ul><li><strong>singleton：</strong> 单例模式，<strong>默认</strong>值</li><li><strong>prototype：</strong> 多例模式</li><li><strong>request：</strong> 请求范围，WEB 项目中，Spring 创建一个 Bean 的对象，将对象存入到 request 域中.</li><li><strong>session：</strong> 会话范围，WEB 项目中，Spring 创建一个 Bean 的对象，将对象存入到 session 域中.</li><li><strong>global session：</strong> 全局范围 – Spring 5 的新特性中被删除了</li></ul></li><li><strong>init-method：</strong> 指定类中的初始化方法名称。</li><li><strong>destroy-method：</strong> 指定类中销毁方法名称。</li></ul><p><strong>bean 对象的作用范围与生命周期：</strong></p><ul><li><p><strong>单例对象：</strong><code>scope=&quot;singleton&quot;</code> 一个应用只有一个对象的实例。它的作用范围就是整个引用。</p><p>生命周期：</p><ul><li>对象出生：当应用加载，创建容器时，对象就被创建了。</li><li>对象活着：只要容器在，对象一直活着。</li><li>对象死亡：当应用卸载、销毁容器时，对象就被销毁了。</li></ul></li><li><p><strong>多例对象：</strong><code>scope=&quot;prototype&quot;</code> 每次访问对象时，都会重新创建对象实例。</p><p>生命周期：</p><ul><li>对象出生：当使用对象时，创建新的对象实例。</li><li>对象活着：只要对象在使用中，就一直活着。</li><li>对象死亡：当对象长时间不用时，被 java 的垃圾回收器回收了。</li></ul></li></ul><h2 id="4创建-bean-对象的三种方式"><a class="markdownIt-Anchor" href="#4创建-bean-对象的三种方式"></a> 4：创建 bean 对象的三种方式</h2><p>创建对象，创建对象，不是获取，不要混淆，三种方式：</p><ol><li><p>默认使用无参构造函数</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">在默认情况下:它会根据默认无参构造函数来创建类对象。</span></span><br><span class="line"><span class="comment">如果bean中没有默认无参构造函数，将会创建失败。 </span></span><br><span class="line"><span class="comment">--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.service.impl.AccountServiceImpl&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Spring 管理静态工厂 — 使用静态工厂的方法创建对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟一个静态工厂，创建业务层实现类 </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticFactory</span> </span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AccountService <span class="title">createAccountService</span><span class="params">()</span></span>&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AccountServiceImpl(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">此种方式是: </span></span><br><span class="line"><span class="comment">使用StaticFactory类中的静态方法createAccountService创建对象，并存入spring容器 </span></span><br><span class="line"><span class="comment">id属性：指定bean的id，用于从容器中获取 </span></span><br><span class="line"><span class="comment">class属性：指定静态工厂的全限定类名 </span></span><br><span class="line"><span class="comment">factory-method属性：指定生产对象的静态方法 </span></span><br><span class="line"><span class="comment">--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountService&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.factory.StaticFactory&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">factory-method</span>=<span class="string">&quot;createAccountService&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Spring 管理实例工厂 — 使用实例工厂的方法创建对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 模拟一个实例工厂，创建业务层实现类 </span></span><br><span class="line"><span class="comment"> * 此工厂创建对象，必须现有工厂实例对象，再调用方法 </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InstanceFactory</span> </span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> AccountService <span class="title">createAccountService</span><span class="params">()</span></span>&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AccountServiceImpl(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  此种方式是： </span></span><br><span class="line"><span class="comment">  先把工厂的创建交给spring来管理。 </span></span><br><span class="line"><span class="comment">  然后在使用工厂的bean来调用里面的方法 </span></span><br><span class="line"><span class="comment">  factory-bean属性：用于指定实例工厂bean的id。 </span></span><br><span class="line"><span class="comment">  factory-method属性：用于指定实例工厂中创建对象的方法。 </span></span><br><span class="line"><span class="comment">--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;instancFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.factory.InstanceFactory&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountService&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">factory-bean</span>=<span class="string">&quot;instancFactory&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">factory-method</span>=<span class="string">&quot;createAccountService&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>    </span><br></pre></td></tr></table></figure></li></ol><h2 id="5属性注入"><a class="markdownIt-Anchor" href="#5属性注入"></a> 5：属性注入</h2><p>创建一个实体类 User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id, String userName, Date birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    get()&amp;set()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="51构造方法注入"><a class="markdownIt-Anchor" href="#51构造方法注入"></a> 5.1：构造方法注入</h3><p>使用类中的构造函数，给成员变量赋值。注意，赋值的操作不是我们自己做的，而是通过配置的方式，让 Spring 框架来为我们注入。具体代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">使用构造函数的方式，给service中的属性传值 </span></span><br><span class="line"><span class="comment">要求：类中需要提供一个对应参数列表的构造函数。 </span></span><br><span class="line"><span class="comment">涉及的标签： constructor-arg </span></span><br><span class="line"><span class="comment">属性： </span></span><br><span class="line"><span class="comment">index:指定参数在构造函数参数列表的索引位置 </span></span><br><span class="line"><span class="comment">type:指定参数在构造函数中的数据类型 </span></span><br><span class="line"><span class="comment">name:指定参数在构造函数中的名称 用这个找给谁赋值 </span></span><br><span class="line"><span class="comment">=======上面三个都是找给谁赋值，下面两个指的是赋什么值的======</span></span><br><span class="line"><span class="comment">value:它只能复制基本数据类型和String类型 </span></span><br><span class="line"><span class="comment">ref:它能赋的值是其他bean类型，也就是说，必须得是在配置文件中配置过的bean </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.domain.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 通过构造方法参数的索引赋值 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;constructor-arg index=&quot;0&quot; value=&quot;1&quot; /&gt;</span></span><br><span class="line"><span class="comment">        &lt;!-- &lt;constructor-arg index=&quot;1&quot; value=&quot;张三&quot; /&gt;</span></span><br><span class="line"><span class="comment">        &lt;!-- 通过构造方法参数类型赋值 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;constructor-arg type=&quot;java.lang.Integer&quot; value=&quot;2&quot; /&gt;</span></span><br><span class="line"><span class="comment">        &lt;!-- &lt;constructor-arg type=&quot;java.lang.String&quot; value=&quot;李四&quot; /&gt;</span></span><br><span class="line"><span class="comment">        &lt;!-- 通过构造方法参数名字赋值：推荐 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;birthday&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">class</span>=<span class="string">&quot;java.util.Date&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 这里也可以通过Date的构造方法对它进行赋值 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="53set-方法注入-常用"><a class="markdownIt-Anchor" href="#53set-方法注入-常用"></a> 5.3：set 方法注入 - 常用</h3><p>在类中提供需要注入成员的 set 方法，然后在配置文件中赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  </span></span><br><span class="line"><span class="comment">通过配置文件给bean中的属性传值：</span></span><br><span class="line"><span class="comment">使用set方法的方式 </span></span><br><span class="line"><span class="comment">涉及的标签： property </span></span><br><span class="line"><span class="comment">属性： </span></span><br><span class="line"><span class="comment">name：找的是类中set方法后面的部分 </span></span><br><span class="line"><span class="comment">ref：给属性赋值是其他bean类型的 </span></span><br><span class="line"><span class="comment">value：给属性赋值是基本数据类型和string类型的 </span></span><br><span class="line"><span class="comment">实际开发中，此种方式用的较多。 </span></span><br><span class="line"><span class="comment">--&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.domain.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- property：属性注入, 先找到set方法，才能最终找到属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王朝&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;now&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;now&quot;</span> <span class="attr">class</span>=<span class="string">&quot;java.util.Date&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="54p-名称空间注入-了解"><a class="markdownIt-Anchor" href="#54p-名称空间注入-了解"></a> 5.4：p 名称空间注入 - 了解</h3><p>此种方式是通过在 xml 中导入 p 名称空间，使用 p:propertyName 来注入数据，它的本质仍然是调用类中的 set 方法实现注入功能</p><p>在头部文件中引入 p 名称空间</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http:// www.springframework.org/schema/beans&quot;</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http:// www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http:// www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http:// www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">                           http:// www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 p 名称空间注入属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.domain.User&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">p:id</span>=<span class="string">&quot;5&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">p:username</span>=<span class="string">&quot;马汉&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">p:sex</span>=<span class="string">&quot;男&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">p:birthday-ref</span>=<span class="string">&quot;birthday&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="55注入集合属性"><a class="markdownIt-Anchor" href="#55注入集合属性"></a> 5.5：注入集合属性</h3><p>给类中的集合成员传值，它用的也是 set 方法注入的方式，只不过变量的数据类型都是集合。演示注入数组，List、Set；Map、Properties。</p><p>创建实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConnectionArrayMapProperty</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; set;</span><br><span class="line">    <span class="keyword">private</span> String[] strs;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; map;</span><br><span class="line">    <span class="keyword">private</span> Properties properties;</span><br><span class="line">    get()&amp;set()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;connectionArrayMapProperty&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.domain.ConnectionArrayMapProperty&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--array ,list ,set 结构相同，标签可以混用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaSE<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaEE<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaME<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;set&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaSE<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaEE<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaME<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;strs&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaSE<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaEE<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>javaME<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--map集合properties结构相同，可以通用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;五&quot;</span> &gt;</span>five<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;六&quot;</span> &gt;</span>six<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;七&quot;</span> &gt;</span>seven<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;properties&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 键值对配置 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;一&quot;</span> <span class="attr">value</span>=<span class="string">&quot;one&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;二&quot;</span> <span class="attr">value</span>=<span class="string">&quot;two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;三&quot;</span> <span class="attr">value</span>=<span class="string">&quot;three&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;四&quot;</span> <span class="attr">value</span>=<span class="string">&quot;four&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6例-使用-ioc-完成对数据库表的-crud"><a class="markdownIt-Anchor" href="#6例-使用-ioc-完成对数据库表的-crud"></a> 6：例 - 使用 IOC 完成对数据库表的 CRUD</h2><p>先用传统方式完成，再用 ioc 进行改造</p><h3 id="61传统方式"><a class="markdownIt-Anchor" href="#61传统方式"></a> 6.1：传统方式</h3><p><strong>创建数据库(表)：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use spring;</span><br><span class="line">create table account(</span><br><span class="line">    id int primary key auto_increment,</span><br><span class="line">    name varchar(40),</span><br><span class="line">    money float</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">insert into account(name,money) values(&#39;aaa&#39;,1000);</span><br><span class="line">insert into account(name,money) values(&#39;bbb&#39;,1000);</span><br><span class="line">insert into account(name,money) values(&#39;ccc&#39;,1000);</span><br></pre></td></tr></table></figure><p><strong>引入依赖：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- spring的核心包（基本） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- dbutils --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- c3p0数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 单元测试 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>创建实体类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Float money;</span><br><span class="line">    get()&amp;set()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>持久层：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*== 接口 ==*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*== 实现类 ==*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/spring&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        dataSource.setUser(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">&quot;Petrel12345&quot;</span>);</span><br><span class="line">        queryRunner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Account&gt; accountList = <span class="keyword">null</span>;</span><br><span class="line">        String sql = <span class="string">&quot;select * from account&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            accountList = queryRunner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(Account.class));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> accountList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from account where id = ? &quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Account account = queryRunner.query(sql, </span><br><span class="line">                                                <span class="keyword">new</span> BeanHandler&lt;&gt;(Account.class), </span><br><span class="line">                                                id);</span><br><span class="line">            <span class="keyword">return</span> account;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;insert into account values(null,?,?)&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,account.getName(),account.getMoney());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;update account set name = ? , money = ? where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,account.getName(),account.getMoney(),account.getId());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;delete from account where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,id);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>业务层：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*== 接口 ==*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*== 实现类 ==*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    AccountDao accountDao=<span class="keyword">new</span> AccountDaoImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        accountDao.del(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAccountCRUD</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        AccountService accountService=<span class="keyword">new</span> AccountServiceImpl();</span><br><span class="line">        List&lt;Account&gt; accountList = accountService.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Account account : accountList) &#123;</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span></span>&#123;</span><br><span class="line">        AccountService accountService=<span class="keyword">new</span> AccountServiceImpl();</span><br><span class="line">        Account account = accountService.findById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span></span>&#123;</span><br><span class="line">        AccountService accountService=<span class="keyword">new</span> AccountServiceImpl();</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">&quot;ddd&quot;</span>);</span><br><span class="line">        account.setMoney(<span class="number">1111F</span>);</span><br><span class="line">        accountService.save(account);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        AccountService accountService=<span class="keyword">new</span> AccountServiceImpl();</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setId(<span class="number">4</span>);</span><br><span class="line">        account.setName(<span class="string">&quot;dbd&quot;</span>);</span><br><span class="line">        account.setMoney(<span class="number">1234F</span>);</span><br><span class="line">        accountService.update(account);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDel</span><span class="params">()</span></span>&#123;</span><br><span class="line">        AccountService accountService=<span class="keyword">new</span> AccountServiceImpl();</span><br><span class="line">        accountService.del(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="62使用-ioc-改造"><a class="markdownIt-Anchor" href="#62使用-ioc-改造"></a> 6.2：使用 IOC 改造</h3><p>传统方式的问题在于，必须开发完持久层才能开发业务层，依赖程度过高</p><ul><li><p>测试类中需要 AccountService - 创建容器</p></li><li><p>业务层需要 AccountDao - 注入</p><p>注意：此时不要再在业务层创建容器获取 dao，因为配置文件只有一份，在测试类中创建容器时，会创建 service 的实现类对象 (单例) ，假如在 service 实现类中继续创建容器，就会再次加载配置文件，创建 service 的实现类对象，陷入了递归状态，永远也出不去。</p><p>解决办法：使用依赖注入，向 Service 中注入 dao</p></li><li><p>持久层需要 QueryRunner</p><p>QueryRunner 需要 DataSource</p></li></ul><p>创建 applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">                           http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 测试时需要用到Service对象，创建service对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.service.impl.AccountServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 需要在AccountService中提供AccountDao的set方法 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;accountDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;accountDao&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- AccountService中需要AccountDao对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.dao.impl.AccountDaoImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 需要在AccountDao中提供queryRunner的set方法 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;queryRunner&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;queryRunner&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- AccountDao中需要QueryRunner对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;queryRunner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbutils.QueryRunner&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 按照类型在构造方法注入数据源对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;javax.sql.DataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- QueryRunner对象中需要DataSource对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/spring&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Petrel12345&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两个实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AccountServiceImpl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccountDao</span><span class="params">(AccountDao accountDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accountDao = accountDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        accountDao.del(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AccountDaoImpl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setQueryRunner</span><span class="params">(QueryRunner queryRunner)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.queryRunner = queryRunner;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Account&gt; accountList = <span class="keyword">null</span>;</span><br><span class="line">        String sql = <span class="string">&quot;select * from account&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            accountList = queryRunner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(Account.class));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> accountList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from account where id = ? &quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Account account = queryRunner.query(sql, </span><br><span class="line">                                                <span class="keyword">new</span> BeanHandler&lt;&gt;(Account.class), id);</span><br><span class="line">            <span class="keyword">return</span> account;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;insert into account values(null,?,?)&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,account.getName(),account.getMoney());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;update account set name = ? , money = ? where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,account.getName(),account.getMoney(),account.getId());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;delete from account where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,id);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAccountCRUD</span> </span>&#123;</span><br><span class="line">    ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        AccountService accountService = ac.getBean(</span><br><span class="line">            <span class="string">&quot;accountService&quot;</span>,AccountService.class);</span><br><span class="line">        List&lt;Account&gt; accountList = accountService.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Account account : accountList) &#123;</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        AccountService accountService = ac.getBean(</span><br><span class="line">            <span class="string">&quot;accountService&quot;</span>,AccountService.class);</span><br><span class="line">        Account account = accountService.findById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        AccountService accountService = ac.getBean(</span><br><span class="line">            <span class="string">&quot;accountService&quot;</span>,AccountService.class);</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">&quot;ddd&quot;</span>);</span><br><span class="line">        account.setMoney(<span class="number">1111F</span>);</span><br><span class="line">        accountService.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        AccountService accountService = ac.getBean(</span><br><span class="line">            <span class="string">&quot;accountService&quot;</span>,AccountService.class);</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setId(<span class="number">4</span>);</span><br><span class="line">        account.setName(<span class="string">&quot;dbd&quot;</span>);</span><br><span class="line">        account.setMoney(<span class="number">1234F</span>);</span><br><span class="line">        accountService.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        AccountService accountService = ac.getBean(</span><br><span class="line">            <span class="string">&quot;accountService&quot;</span>,AccountService.class);</span><br><span class="line">        accountService.del(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-ioc-常用注解"><a class="markdownIt-Anchor" href="#四-ioc-常用注解"></a> 四、IOC 常用注解</h1><p>经上边 xml 方式完成对数据库表的 CRUD 发现，配置过于繁琐，所以下边介绍 IOC 中常用的注解</p><p>先说，半 xml 半注解的方式，后边再说纯注解的方式</p><p>入门案例：</p><ul><li><p>SpringContext 的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入spring的核心包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入单元测试 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>引入 Context 的名称空间，及约束（其实直接写：&lt;context:component-scan···· 它就会自动引入）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http:// www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        开启注解，指定扫描的包: context:component-scan</span></span><br><span class="line"><span class="comment">        引入context名称空间-引入约束</span></span><br><span class="line"><span class="comment">        base-package:指定要扫描的包, 扫描的是包及其子包</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            context:include-filter ：指定包含过滤</span></span><br><span class="line"><span class="comment">            type=&quot;annotation&quot;: 按照类型过滤</span></span><br><span class="line"><span class="comment">            expression: 过滤的表达式</span></span><br><span class="line"><span class="comment">            只扫描标记了Controller注解的类</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> </span></span><br><span class="line"><span class="tag">                                <span class="attr">expression</span>=</span></span><br><span class="line"><span class="tag">                                &quot;<span class="attr">org.springframework.stereotype.Controller</span>&quot; /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            context:exclude-filter：指定排除过滤</span></span><br><span class="line"><span class="comment">            type=&quot;annotation&quot;: 按照类型过滤</span></span><br><span class="line"><span class="comment">            expression:过滤的表达式</span></span><br><span class="line"><span class="comment">            排除标记了Controller的注解都会扫描</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> </span></span><br><span class="line"><span class="tag">                                <span class="attr">expression</span>=</span></span><br><span class="line"><span class="tag">                                &quot;<span class="attr">org.springframework.stereotype.Controller</span>&quot; /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>类上标注注解：@Component</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAnn</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAnn</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ApplicationContext ac=<span class="keyword">new</span> ClassPathXmlApplicationContext(</span><br><span class="line">            <span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">        UserDao userDao = ac.getBean(UserDao.class);</span><br><span class="line">        System.out.println(userDao);</span><br><span class="line"></span><br><span class="line">        UserService userService = ac.getBean(UserService.class);</span><br><span class="line">        System.out.println(userService);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="1component-创建对象"><a class="markdownIt-Anchor" href="#1component-创建对象"></a> 1：@Component - 创建对象</h2><p>标记在类上，不能用在方法上</p><p><strong>作用：</strong> 创建对象, 只要标记了，扫描了该包，对象就会创建</p><p><strong>相当于：</strong> <code>&lt;bean id=&quot;&quot; class=&quot;全限定类名&quot;&gt;&lt;/bean&gt;</code></p><p><strong>属性：</strong><code>value=&quot;userDao&quot;</code> 相当于 xml 中的 <code>id=&quot;userDao&quot;</code> 如果没有指定 value 属性，默认的名称是：简单类名，首字母小写，例：UserDaoImpl → userDaoImpl、UserServiceImpl → userServiceImpl</p><p>它衍生了<strong>三个子注解：</strong></p><ul><li><strong>@Controller：</strong> 一般用于web 层 (控制层)</li><li><strong>@Service：</strong> 一般用于业务层</li><li><strong>@Repository：</strong> 一般用于持久层</li></ul><h2 id="2autowired-属性注入"><a class="markdownIt-Anchor" href="#2autowired-属性注入"></a> 2：@Autowired - 属性注入</h2><p><strong>@Autowired</strong>  – 自动注入，可以标记在属性和 set 方法上，如果标记在属性上，可以没有 set 方法</p><p><strong>相当于：</strong> <code>&lt;property name=&quot;&quot; ref=&quot;&quot;&gt; &lt;property name=&quot;&quot; value=&quot;&quot;&gt;</code></p><p><strong>特点：<strong>默认自动按照</strong>类型</strong>注入</p><p><strong>流程：</strong> 当属性 / set 方法标记了 @Autowired，会自动在容器中查询该属性类型的对象，若有且只有一个，则注入，若有多个需要配合 @Qualifier 使用</p><ul><li><p><strong>@Qualifier：</strong> 必须与 @Autowired 结合使用</p><p><strong>属性：</strong> value：指定 bean 的 id</p><p><strong>作用：</strong> 如果自动注入按照类型注入失败，则按照指定的名称注入</p></li></ul><p>如果没有 @Qualifier，类型注入失败，则按照属性名按照名称注入</p><h2 id="3resource-属性注入"><a class="markdownIt-Anchor" href="#3resource-属性注入"></a> 3：@Resource - 属性注入</h2><p><strong>相当于：</strong> <code>&lt;property name=&quot;&quot; ref=&quot;&quot;&gt; &lt;property name=&quot;&quot; value=&quot;&quot;&gt;</code></p><p><strong>流程：</strong> 当属性 / set 方法标记了 @Resource，会自动按照名称注入， 如果名称没有找到，则根据类型注入，如果类型有多个，则抛出异常</p><p><strong>属性：</strong> name：指定 bean 的 id</p><p><strong>@AutoWired 与 @Resource 的区别：</strong></p><ul><li>@Autowired：默认按照类型注入，如果类型有多个，则按照名称注入  – spring 提供</li><li>@Resource：默认按照名称注入，没有名称没有找到，按照类型注入  – jdk 提供</li></ul><h2 id="4自动装配-了解"><a class="markdownIt-Anchor" href="#4自动装配-了解"></a> 4：自动装配 - 了解</h2><p>autowire 会根据某种策略自动为非字面量赋值。不如注解好用，这里只是说一下做个了解</p><ul><li><p>手动装配：以 value 或 ref 的方式<strong>明确指定属性值</strong>都是手动装配。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;car&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;car&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.pojo.Car&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;劳斯莱斯&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>自动装配：根据指定的装配规则，<strong>不需要明确指定</strong>，Spring<strong>自动</strong>将匹配的属性值<strong>注入</strong>bean中。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.pojo.User&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;property name=&quot;car&quot; ref=&quot;car&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel1024.pojo.Car&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;劳斯莱斯&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>autowire = byName：<code>当前Bean(user)的属性名</code> 与 <code>需要注入的Bean(car)的id值</code> 一样时即可自动注入</p><p>autowire = byType：只要当前 IOC 容器中有一个 Bean 的类型 与 当前 Bean(user) 的属性类型一致 (包含多态) 时即可自动注入；同时若该类型有多个 Bean 实例，则无法进行自动注入</p></li></ul><h2 id="5使用注解改造对数据表的-crud"><a class="markdownIt-Anchor" href="#5使用注解改造对数据表的-crud"></a> 5：使用注解改造对数据表的 CRUD</h2><p>是半 xml 半注解的方式，纯注解方式后边说</p><p>实体类、接口、测试类、pom不变</p><p>配置文件：applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 开启注解 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- AccountDao中需要QueryRunner对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;queryRunner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbutils.QueryRunner&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 按照类型在构造方法注入数据源对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;javax.sql.DataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- QueryRunner对象中需要DataSource对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/spring&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Petrel12345&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两个实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AccountServiceImpl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service(&quot;accountService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        accountDao.del(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AccountDaoImpl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository(&quot;accountDao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Account&gt; accountList = <span class="keyword">null</span>;</span><br><span class="line">        String sql = <span class="string">&quot;select * from account&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            accountList = queryRunner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(Account.class));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> accountList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from account where id = ? &quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Account account = queryRunner.query(sql, </span><br><span class="line">                                                <span class="keyword">new</span> BeanHandler&lt;&gt;(Account.class), </span><br><span class="line">                                                id);</span><br><span class="line">            <span class="keyword">return</span> account;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;insert into account values(null,?,?)&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,account.getName(),account.getMoney());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;update account set name = ? , money = ? where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,account.getName(),account.getMoney(),account.getId());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;delete from account where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,id);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6纯注解开发"><a class="markdownIt-Anchor" href="#6纯注解开发"></a> 6：纯注解开发</h2><p>既然是纯注解开发，那就没有配置文件了，注意在创建容器时要用 <code>AnnotationApplicationContext</code></p><p>原有配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- AccountDao中需要QueryRunner对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;queryRunner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbutils.QueryRunner&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 按照类型在构造方法注入数据源对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;javax.sql.DataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- QueryRunner对象中需要DataSource对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/spring&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Petrel12345&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下边会介绍几个新的注解，来一步一步替代这些标签，及配置文件本身。</p><h3 id="61configuration-替代配置文件"><a class="markdownIt-Anchor" href="#61configuration-替代配置文件"></a> 6.1：@Configuration - 替代配置文件</h3><p>没有配置文件，就需要找一个类来代替原来的配置，若要使其能替代配置文件，就需要用 @Configuration 来将它标记为配置文件类</p><p><strong>@Configuration：</strong></p><ul><li><strong>作用：</strong> 用于指定当前类是一个 spring 配置类，当创建容器时会从该类上加载注解。获取容器时需要使用 <code>AnnotationApplicationContext(有@Configuration注解的类.class)</code></li><li><strong>属性：</strong> value 用于指定配置类的字节码</li><li><strong>替代：</strong> applicationContext.xml</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Petrel</span></span><br><span class="line"><span class="comment"> * 1. 标记该类为配置文件类  <span class="doctag">@Configuration</span></span></span><br><span class="line"><span class="comment"> * 记得在测试类中将获取容器对象换为获取容器时需要使用AnnotationApplicationContext</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfiguration</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="62componentscan-指定扫描的包"><a class="markdownIt-Anchor" href="#62componentscan-指定扫描的包"></a> 6.2：@ComponentScan - 指定扫描的包</h3><p><strong>@ComponScan：</strong></p><ul><li><strong>作用：</strong> 用于指定 spring 在初始化容器时要扫描的包。</li><li><strong>属性：</strong> basePackages：用于指定要扫描的包。和该注解中的 value 属性作用一样。</li><li><strong>替代：</strong> <code>&lt;context:component-scan base-package=&quot;com.petrel1024&quot;/&gt;</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Petrel</span></span><br><span class="line"><span class="comment"> * 1. 标记该类为配置文件类  <span class="doctag">@Configuration</span></span></span><br><span class="line"><span class="comment"> * 2. 指定注解扫描的包路径  <span class="doctag">@ComponentScan</span>(&#123;&quot;com.petrel1024&quot;&#125;)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.petrel1024&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfiguration</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="63import-引入其他配置文件"><a class="markdownIt-Anchor" href="#63import-引入其他配置文件"></a> 6.3：@Import - 引入其他配置文件</h3><p><strong>@Import：</strong></p><ul><li><strong>作用：</strong> 用于导入其他配置类，在引入其他配置类时 ( 另外的那个配置文件类可以加 @Configuration 注解)</li><li><strong>属性：</strong> value[]：用于指定其他配置类的字节码。</li><li><strong>替代：</strong> <code>&lt;import resource=&quot;classpath:applicationContext-dao.xml&quot;&gt;</code> xml 中若要引入，就是使用此标签，不再过多详解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 持久层配置文件类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Configuration</span> :可以省略的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">  <span class="meta">@Configuration</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcConfiguration</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Petrel</span></span><br><span class="line"><span class="comment"> * 1. 标记该类为配置文件类  <span class="doctag">@Configuration</span></span></span><br><span class="line"><span class="comment"> * 2. 指定注解扫描的包路径  <span class="doctag">@ComponentScan</span>(&#123;&quot;com.petrel1024&quot;&#125;)</span></span><br><span class="line"><span class="comment"> * 3. 引入其他配置文件类    <span class="doctag">@Import</span>(&#123;JDBCConfiguration.class&#125;)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.petrel1024&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Import(&#123;JdbcConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfiguration</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="64bean-将方法返回的对象放入容器"><a class="markdownIt-Anchor" href="#64bean-将方法返回的对象放入容器"></a> 6.4：@Bean - 将方法返回的对象放入容器</h3><p><strong>@Bean：</strong> 通过方法创建对象，一般用于创建别人提供的类</p><ul><li><p><strong>作用：</strong> 该注解只能写在方法上，表明使用此方法创建一个对象，并且放入 spring 容器</p></li><li><p><strong>属性：</strong> name：给当前 @Bean 注解方法创建的对象指定一个名称 ( 即 bean 的 id )</p></li><li><p><strong>替代：</strong></p><ul><li><code>&lt;bean id=&quot;queryRunner&quot; class=&quot;org.apache.commons.dbutils.QueryRunner&quot;&gt;&lt;/bean&gt;</code></li><li><code>&lt;bean id=&quot;dataSource&quot; class=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;&gt;&lt;/bean&gt;</code></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Petrel</span></span><br><span class="line"><span class="comment"> * 配置持久层的对象</span></span><br><span class="line"><span class="comment"> * &quot;<span class="doctag">@Configuration</span>&quot;:可以省略的</span></span><br><span class="line"><span class="comment"> * &quot;<span class="doctag">@Bean</span>(&quot;name&quot;)&quot;:用在方法上，用来指定方法创建的对象存到容器中</span></span><br><span class="line"><span class="comment"> *     &quot;name&quot;: 就是在容器中的名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 可以调用方法传入 dataSource</span></span><br><span class="line"><span class="comment">     * 也可以直接传入，因为QueryRunner对象是在容器中创建，所以他会自动去容器中找dataSource这个对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataSource</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean(&quot;queryRunner&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QueryRunner <span class="title">createQueryRunner</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 需用通过构造方法注入dataSource</span></span><br><span class="line">        QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        <span class="keyword">return</span> queryRunner;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建数据源对象：dataSource</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> DataSource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean(&quot;dataSource&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">createDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/spring&quot;</span>);</span><br><span class="line">        dataSource.setUser(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">&quot;Petrel12345&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，XML 中的所有配置都已经被替代，但是优化还未结束</p><h3 id="65propertysource-引入-properties-文件"><a class="markdownIt-Anchor" href="#65propertysource-引入-properties-文件"></a> 6.5：@PropertySource - 引入 *.properties 文件</h3><p>在创建 DataSource 时，把属性写死，不便于修改，所以应该把他们放入配置文件当中</p><p>在 resource 目录下，新建一个 jdbc.properties 用来配置数据源对象需要的属性，内容如下</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/spring</span></span><br><span class="line"><span class="meta">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">Petrel12345</span></span><br></pre></td></tr></table></figure><p>使用 PropertySource 注解来引入 jdbc.properties</p><p><strong>@PropertySource：</strong></p><ul><li><strong>作用：</strong> 用于加载 .properties 文件中的配置</li><li><strong>属性：</strong> value[]：用于指定 properties 文件位置。如果是在类路径下，需要写上 classpath:</li><li><strong>相当于：</strong> <code>&lt;context:property-placeholder location=&quot;classpath:jdbc.properties&quot; /&gt;</code> xml 中若要引入就是使用此标签，若要使用 properties 中的数据，就使用 <strong>“${key}”</strong> 引用即可</li></ul><p>此处还涉及一个注解 @value 下一个说</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &quot;<span class="doctag">@PropertySource</span>&quot;:用于加载 .properties 文件中的配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PropertySource(&#123;&quot;jdbc.properties&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.driver&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String driver;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.user&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;queryRunner&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QueryRunner <span class="title">createQueryRunner</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 需用通过构造方法注入dataSource</span></span><br><span class="line">        QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        <span class="keyword">return</span> queryRunner;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;dataSource&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">createDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        dataSource.setJdbcUrl(url);</span><br><span class="line">        dataSource.setUser(user);</span><br><span class="line">        dataSource.setPassword(password);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource.setDriverClass(driver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="66value-属性注入"><a class="markdownIt-Anchor" href="#66value-属性注入"></a> 6.6：@Value - 属性注入</h3><p>和 @Autowired 和 @Resource 类似，都相当于 <code>property</code> 标签，用于依赖注入，但是 value 只能注入基本数据类型和 String 类型</p><p><strong>@Value：</strong></p><ul><li><strong>作用：</strong> 注入基本数据类型和 String 类型的数据</li><li><strong>属性：</strong> value：用于指定值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String password;</span><br></pre></td></tr></table></figure><h3 id="67scope-作用域"><a class="markdownIt-Anchor" href="#67scope-作用域"></a> 6.7：@Scope - 作用域</h3><p><strong>相当于：</strong> bean 标签中的 scope <code>&lt;bean id=&quot;&quot; class=&quot;&quot; scope=&quot;&quot;&gt;</code></p><p><strong><code>@Scope</code></strong></p><ul><li><strong>作用：</strong> 指定 bean 的作用范围。</li><li><strong>属性：</strong> value：指定范围的值。<ul><li><strong>取值：</strong> singleton、prototype、request、session、globalsession</li></ul></li></ul><h1 id="五-bean-的生命周期"><a class="markdownIt-Anchor" href="#五-bean-的生命周期"></a> 五、Bean 的生命周期</h1><p>Spring IOC 容器可以管理 bean 的生命周期，Spring 允许在 bean 生命周期内特定的时间点执行指定的任务。</p><p><strong>Spring IOC容器对bean的生命周期进行管理的过程：</strong></p><ol><li>通过构造器或工厂方法创建 bean 实例</li><li>为 bean 的属性设置值和对其他 bean 的引用</li><li>调用 bean 的初始化方法</li><li>bean 可以使用了</li><li>当容器关闭时，调用 bean 的销毁方法</li></ol><p>在配置 bean 时，通过 init-method 和 destroy-method 属性为 bean 指定初始化和销毁方法</p><h2 id="1相关的两个注解"><a class="markdownIt-Anchor" href="#1相关的两个注解"></a> 1：相关的两个注解</h2><p><strong>相当于：</strong> <code>&lt;bean id=&quot;&quot; class=&quot;&quot; init-method=&quot;&quot; destroy-method=&quot;&quot; /&gt;</code></p><p><strong>@PostConstruct：</strong> 用于指定初始化方法。</p><p><strong>@PreDestroy：</strong> 用于指定销毁方法。</p><h2 id="2后置处理器"><a class="markdownIt-Anchor" href="#2后置处理器"></a> 2：后置处理器</h2><p>bean 后置处理器允许在调用 <strong>初始化方法前后</strong> 对 bean 进行额外的处理</p><p>bean 后置处理器对 IOC 容器里的所有 bean 实例逐一处理，而非单一实例。其典型应用是：检查 bean 属性的正确性或根据特定的标准更改 bean 的属性。</p><p>bean 后置处理器需要实现接口：<code>org.springframework.beans.factory.config.BeanPostProcessor</code></p><p>在初始化方法被调用前后，Spring 将把每个 bean 实例分别传递给上述接口的以下两个方法：</p><ul><li>postProcessBeforeInitialization(Object, String)</li><li>postProcessAfterInitialization(Object, String)</li></ul><p><strong>添加 bean 后置处理器后 bean 的生命周期：</strong></p><ol><li>通过构造器或工厂方法<strong>创建 bean 实例</strong></li><li>为 bean 的 <strong>属性设置值</strong> 和对其他 bean 的引用</li><li>将 bean 实例传递给 bean 后置处理器的 postProcessBeforeInitialization() 方法</li><li>调用 bean 的<strong>初始化</strong>方法</li><li>将 bean 实例传递给 bean 后置处理器的 postProcessAfterInitialization() 方法</li><li>bean 可以使用了</li><li>当容器关闭时调用 bean 的<strong>销毁方法</strong></li></ol><h1 id="六条件注解"><a class="markdownIt-Anchor" href="#六条件注解"></a> 六：条件注解</h1><p><code>@Conditional()</code>：按照一定的条件进行判断，满足条件给容器注册 bean</p><p>SpringBoot 中会大量的使用 @Conditional 注释，常用于以下场景：</p><ol><li>作为类级别的注解直接或者间接的与 @Component 相关联，包括 @Configuration 类；</li><li>作为元注解，用于自动编写构造性注解；</li><li>作为方法级别的注解，作用在任何 @Bean 方法上。</li></ol><h1 id="七-aware-接口"><a class="markdownIt-Anchor" href="#七-aware-接口"></a> 七、Aware 接口</h1><p>Aware 接口，从字面上理解就是感知捕获。单纯的一个 Bean 是没有知觉的。</p><p>之所以 UserDao 能够注入到 UserService ，有一个前提，就是它两个都是被 Spring 容器管理的。如果直接 new 一个 UserService，这是没用的，因为 UserService 没有被 Spring 容器管理，所以也不会给它里边注入 Bean。</p><p>在实际开发中，我们可能会遇到一些类，需要获取到容器的详细信息，那就可以通过 Aware 接口来实现。</p><p>Aware 是一个空接口，有很多实现类，这些实现的接口，有一些公共特性：</p><ol><li>都是以 Aware 结尾</li><li>都继承自 Aware</li><li>接口内均定义了一个 set 方法</li></ol><p>每一个子接口均提供了一个 set 方法，方法的参数就是当前 Bean 需要感知的内容，因此我们需要在 Bean 中声明相关的成员变量来接受这个参数。接收到这个参数后，就可以通过这个参数获取到容器的详细信息了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SayHello</span> <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断容器中是否存在某个 Bean</span></span><br><span class="line">        <span class="keyword">boolean</span> userDao = applicationContext.containsBean(<span class="string">&quot;userDao333&quot;</span>);</span><br><span class="line">        System.out.println(userDao);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello &quot;</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八-spring-整合-junit"><a class="markdownIt-Anchor" href="#八-spring-整合-junit"></a> 八、Spring 整合 JUnit</h1><p>在测试类中，每个测试方法都有以下两行代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>); </span><br><span class="line">AccountService as = ac.getBean(<span class="string">&quot;accountService&quot;</span>,AccountService.class); </span><br></pre></td></tr></table></figure><p>为了方便我们将它提取出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext ac;</span><br><span class="line">AccountService accountService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">accountService = ac.getBean(<span class="string">&quot;accountService&quot;</span>, AccountService.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">这里我们使用了 @Before 注解来获取 Spring 容器，并获取到需要使用的 Bean 实例。</span><br><span class="line">这样就可以做到把业务代码和获取 Spring 容器的代码分离开来，无论有多少个业务方法需要测试，都只需要添加一个 @Test 标注的方法就可，无需重复获取 Spring 容器。</span><br><span class="line"></span><br><span class="line">但是这种只是简单的使用了 JUnit，而没有与 Spring 进行整合，如果我们想要做到不写 Spring 容器初始化的代码，只用 JUnit 是做不到的。</span><br><span class="line"></span><br><span class="line">针对上述问题，我们需要的是程序能自动帮我们创建容器。但显然，JUnit 是无法实现的，因为它自己都无法知晓我们是否使用了 Spring 框架，更不用说帮我们创建 Spring 容器了。</span><br><span class="line"></span><br><span class="line">不过好在，JUnit 给我们暴露了一个注解，可以让我们替换掉它的运行器。 这时，我们需要依靠 Spring 框架，因为它提供了一个运行器，可以读取配置文件（或注解）来创建容器。我们只需要告诉它配置文件在哪就行了。</span><br></pre></td></tr></table></figure><p>上边的看看就行，只需要知道 Spring 与 JUnit 整合的<strong>目的</strong>就是：<strong>让程序自动为我们创建 Spring 容器</strong></p><p><strong>整合步骤：</strong></p><ul><li><p><strong>引入依赖</strong></p><p>注意：引入 Spring 的测试包，必须引入相应的 JUnit 的包</p><ul><li>Spring5，必须引入 JUnit 4.12 版本以上的包</li><li>Spring4，必须引入 JUnit 9 版本以上的包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>替换运行器</strong></p><p>使用 <strong>@Runwith</strong> 注解，关联 <code>SpringJUnit4ClassRunner.class</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAccountCRUD</span> </span>&#123; &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>引入配置文件</strong></p><p>只有运行器可不行，要告诉运行器，我们是根据那个配置文件来创建容器</p><p>此时就可以使用 <strong>@ContextConfiguration</strong> 来指定 Spring 配置文件的位置</p><p>但是问题又来了，配置文件的方式有两种：xml 配置 和 配置类 (纯注解) 配置，如何使用呢</p><p>@ContextConfiguration 的属性：</p><ul><li>locations：配置一个 String 数组</li><li>classes：配置一个 Class&lt;?&gt; 数组</li></ul><p>此时问题就迎刃而解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * xml配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(locations = &#123;&quot;classpath:applicationContext.xml&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAccountCRUD</span> </span>&#123; &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 纯注解配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(classes = &#123;SpringConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAccountCRUD</span> </span>&#123; &#125;</span><br></pre></td></tr></table></figure><p>好了，此时程序就可以自动创建容器对象</p><p>此时，测试代码就为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAccountCRUD</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Account&gt; accountList = accountService.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Account account : accountList) &#123;</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account = accountService.findById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">&quot;ddd&quot;</span>);</span><br><span class="line">        account.setMoney(<span class="number">1111F</span>);</span><br><span class="line">        accountService.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setId(<span class="number">4</span>);</span><br><span class="line">        account.setName(<span class="string">&quot;dbd&quot;</span>);</span><br><span class="line">        account.setMoney(<span class="number">1234F</span>);</span><br><span class="line">        accountService.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        accountService.del(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="九-转账案例"><a class="markdownIt-Anchor" href="#九-转账案例"></a> 九、转账案例</h1><p><strong>需求：</strong> 在业务层添加一个转账方法 实现账户名称 aaa 给账户名称 bbb 转账功能。</p><p>为了熟悉前边知识，从环境搭建从新来一次</p><p><strong>引入坐标</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Spring 配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                           http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                           http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 扫描包开启注解 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 创建QueryRunner对象,构造方法中需要DataSources对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;queryRunner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbutils.QueryRunner&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;javax.sql.DataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 创建DataSource对象,注入四个必要的属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 引入外部properties文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>jdbc 配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/spring</span></span><br><span class="line"><span class="meta">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">Petrel12345</span></span><br></pre></td></tr></table></figure><p><strong>实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Float money;</span><br><span class="line">    <span class="comment">// get/set方法，toString方法 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>持久层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据账户名查找账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fromName 账户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findByName</span><span class="params">(String fromName)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fromAccount 账户实体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account fromAccount)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;select * from account where name = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> queryRunner.query(sql,<span class="keyword">new</span> BeanHandler&lt;&gt;(Account.class),name);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;update account set money=? where name=?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.update(sql,account.getMoney(),account.getName());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>业务层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转账</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fromName 转出的账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toName 转入的账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> money 转账金额</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String fromName,String toName,Float money)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String fromName, String toName, Float money)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 查询转出的账户</span></span><br><span class="line">        Account fromAccount = accountDao.findByName(fromName);</span><br><span class="line">        <span class="comment">// 查询转入的账户</span></span><br><span class="line">        Account toAccount = accountDao.findByName(toName);</span><br><span class="line">        <span class="comment">// 修改转出账户的余额：假设余额充足</span></span><br><span class="line">        fromAccount.setMoney(fromAccount.getMoney() - money);</span><br><span class="line">        <span class="comment">// 修改转入账户的余额</span></span><br><span class="line">        toAccount.setMoney(toAccount.getMoney() + money);</span><br><span class="line">        <span class="comment">// 持久化到数据库</span></span><br><span class="line">        accountDao.update(fromAccount);</span><br><span class="line">        accountDao.update(toAccount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTransfer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountService accountService;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransfer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        accountService.transfer(<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;bbb&quot;</span>,<span class="number">100F</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1事务问题"><a class="markdownIt-Anchor" href="#1事务问题"></a> 1：事务问题</h2><p>虽然代码写完了，运行不出问题，结果也没问题，但是，再转账的业务加上一个运行时异常再试试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String fromName, String toName, Float money)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 查询转出的账户</span></span><br><span class="line">    Account fromAccount = accountDao.findByName(fromName);</span><br><span class="line">    <span class="comment">// 查询转入的账户</span></span><br><span class="line">    Account toAccount = accountDao.findByName(toName);</span><br><span class="line">    <span class="comment">// 修改转出账户的余额：假设余额充足</span></span><br><span class="line">    fromAccount.setMoney(fromAccount.getMoney() - money);</span><br><span class="line">    <span class="comment">// 修改转入账户的余额</span></span><br><span class="line">    toAccount.setMoney(toAccount.getMoney() + money);</span><br><span class="line">    <span class="comment">// 持久化到数据库</span></span><br><span class="line">    accountDao.update(fromAccount);</span><br><span class="line">    <span class="comment">// 加一个异常</span></span><br><span class="line">    System.out.println((<span class="number">1</span> / <span class="number">0</span>));</span><br><span class="line">    accountDao.update(toAccount);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时程序在运行时出现异常，但是数据库内的数据却发生了变化，<code>fromAccount</code> 的账户少了钱，<code>toAccount</code> 的账户却没有加钱</p><p>怎么办呢？此时就需要将转账的代码加上<strong>事务</strong>，一旦发生异常立即回滚到初始的状态</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120922.webp" /><p><strong>但是此时有出现一个新的问题：</strong> 一个事务必须在一个 Connection 中完成，如果不在一个事务中，即使在 service 中加了事务控制，出现了异常还是会导致数据错误。代码中有几个 connection 呢</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个</span></span><br><span class="line">accountDao.findByName(fromName);</span><br><span class="line"><span class="comment">// 两个</span></span><br><span class="line">accountDao.findByName(toName);</span><br><span class="line"><span class="comment">// 三个</span></span><br><span class="line">accountDao.update(fromAccount);</span><br><span class="line"><span class="comment">// 四个</span></span><br><span class="line">accountDao.update(toAccount);</span><br></pre></td></tr></table></figure><p>这怎么办？此时就需要用到线程绑定：ThreadLocal</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120926.webp" alt="事务问题" /><p>写两个工具类</p><ul><li><p><strong>一个管理连接的工具类，用于实现 <code>Connection</code> 和线程的绑定</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一个管理连接的工具类，用于实现连接和线程的绑定</span></span><br><span class="line"><span class="comment"> * 保证当前线程中获取的Connection是同一个</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConnectionUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> ThreadLocal&lt;Connection&gt; tl = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前线程上绑定的连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 线程上的连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Connection <span class="title">getThreadConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.先看看线程上是否绑了</span></span><br><span class="line">            Connection conn = tl.get();</span><br><span class="line">            <span class="keyword">if</span> (conn == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 2.从数据源中获取一个连接</span></span><br><span class="line">                conn = dataSource.getConnection();</span><br><span class="line">                <span class="comment">// 3.和线程局部变量绑定</span></span><br><span class="line">                tl.set(conn);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 4.返回线程上的连接</span></span><br><span class="line">            <span class="keyword">return</span> tl.get();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把连接和当前线程解绑</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tl.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>事务管理器</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事务管理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionManager</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ConnectionUtil connectionUtil;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开启事务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beginTransaction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 从当前线程上获取连接，实现开启事务</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtil.getThreadConnection().setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提交事务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtil.getThreadConnection().commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 回滚事务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtil.getThreadConnection().rollback();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtil.getThreadConnection().setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 解绑线程：把连接和线程解绑</span></span><br><span class="line">            connectionUtil.remove();</span><br><span class="line">            <span class="comment">// 关闭连接（还回池中）</span></span><br><span class="line">            connectionUtil.getThreadConnection().close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>说明：</strong></p><ul><li><p>ConnectionUtil 中注入了 DataSource 获取 Connection，并将 Connection 和 ThreadLocal 绑定</p><p>所以持久层中注入 ConnectionUtil，来获取 Connection 和 ThreadLocal 绑定后的连接：ThreadConnection，同时在使用 QueryRunner 的执行 sql 的方法时，需要将 ThreadConnection 传入</p></li><li><p>TransactionManager 中注入了 ConnectionUtil 来获取 ThreadConnection ，并使用它来开启事务</p><p>所以业务层中注入 TransactionManager，来管理事务</p></li></ul></li><li><p><strong>实现：</strong></p><p>既然 Connection 是我们自己获取，那么就使用 QueryRunner 的空参构造，不用再在 QueryRunner 对象中注入 DataSource 对象</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用空参构造 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;queryRunner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbutils.QueryRunner&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>持久层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    QueryRunner queryRunner;</span><br><span class="line">    <span class="comment">// 注入ConnectionUtil</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    ConnectionUtil connectionUtil;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findByName</span><span class="params">(String fromName)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;select * from account where name = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Connection conn = connectionUtil.getThreadConnection();</span><br><span class="line">            <span class="keyword">return</span> queryRunner.query(conn,sql,<span class="keyword">new</span> BeanHandler&lt;&gt;(Account.class),</span><br><span class="line">                                     fromName);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;update account set money=? where name=?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Connection conn = connectionUtil.getThreadConnection();</span><br><span class="line">            queryRunner.update(conn,sql,account.getMoney(),account.getName());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>业务层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一个事务必须在一个Connection中完成</span></span><br><span class="line"><span class="comment"> * ThreadLocal:线程绑定，绑定Connection对象</span></span><br><span class="line"><span class="comment"> * 业务层和持久层所需要的Connection要到ThreadLocal中获取</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    TransactionManager txManager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String fromName, String toName, Float money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1：开启事务 conn.setAutoCommit(false);</span></span><br><span class="line">            txManager.beginTransaction();</span><br><span class="line"></span><br><span class="line">            Account fromAccount = accountDao.findByName(fromName);</span><br><span class="line">            Account toAccount = accountDao.findByName(toName);</span><br><span class="line">            fromAccount.setMoney(fromAccount.getMoney() - money);</span><br><span class="line">            toAccount.setMoney(toAccount.getMoney() + money);</span><br><span class="line">            accountDao.update(fromAccount);</span><br><span class="line">            System.out.println((<span class="number">1</span> / <span class="number">0</span>));</span><br><span class="line">            accountDao.update(toAccount);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2：提交事务 conn.commit();</span></span><br><span class="line">            txManager.commit();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// 3：回滚事务 conn.rollback();</span></span><br><span class="line">            txManager.rollback();</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 4：还原状态 conn.setAutoCommit(true);</span></span><br><span class="line">            txManager.release();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时再次测试，即便是事务中发生异常，数据库中的数据也不会出错</p></li></ul><h2 id="2新的问题"><a class="markdownIt-Anchor" href="#2新的问题"></a> 2：新的问题</h2><p>但是此时再次出现新的问题，这只是一个转账的业务。假设还有其他业务中，包含有多个要持久化到数据库中的操作，那么就又需要用到事务。再次假设还有许多这样的业务，那该怎么办？每一个业务中开一次事务？</p><p>其次，这些业务中都需要用到上边的工具类，万一要把工具类中的方法名字一改，只要用到该方法的业务都需要改</p><p><strong>问题如下：</strong></p><ol><li>重复代码</li><li>代码臃肿问题</li><li>技术与业务整合到一起了</li></ol><p><strong>解决的思路：</strong></p><ul><li>提取重复的代码 (抽取共性逻辑)</li><li>业务层中不需要技术代码，不修改业务层源码的情况下，技术增强使用动态代理</li></ul><h2 id="3动态代理回顾"><a class="markdownIt-Anchor" href="#3动态代理回顾"></a> 3：动态代理回顾</h2><p><strong>动态代理：</strong> 不修改原来代码的基础上，对原来的代码增强</p><p><strong>特点：</strong> 随用随创建，随用随加载</p><p>以工厂和经销商为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 制造产品</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">make</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;生成了一个产品&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建立一个销售的网点：直营</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 建立一个销售的网点:直营</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OldSale</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sale</span><span class="params">(Float money)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在以&quot;</span>+money+<span class="string">&quot;价格卖出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新型销售方式 - 总经销商</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 总经销商</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">NewSale</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 卖产品</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> money</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sale</span><span class="params">(Float money)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新型销售方式 - 销售网点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 经销商创建的销售网点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewSaleImpl</span> <span class="keyword">implements</span> <span class="title">NewSale</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sale</span><span class="params">(Float money)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在以&quot;</span>+money+<span class="string">&quot;价格卖出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="31jdk-动态代理-基于接口"><a class="markdownIt-Anchor" href="#31jdk-动态代理-基于接口"></a> 3.1：jdk 动态代理 - 基于接口</h3><p>基于接口的动态代理</p><p><strong>提供者：</strong> JDK 官方的 Proxy 类。</p><p><strong>要求：</strong> 被代理类最少实现一个接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJDKProxy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 真实的对象</span></span><br><span class="line">    NewSale newSale = <span class="keyword">new</span> NewSaleImpl();</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 代理对象</span></span><br><span class="line"><span class="comment">    *   参数一：类加载器</span></span><br><span class="line"><span class="comment">    *   参数二：类实现的接口</span></span><br><span class="line"><span class="comment">    *   参数三：真实对象的增强部分，实现InvocationHandler接口的实现类(使用匿名内部类)</span></span><br><span class="line"><span class="comment">    *   返回值：本质上是一个真实类(NewSaleImpl)所实现的接口(NewSale)的一个实现类</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    NewSale sale = (NewSale) Proxy.newProxyInstance(newSale.getClass().getClassLoader(),</span><br><span class="line">                newSale.getClass().getInterfaces(),</span><br><span class="line">                <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 增强内容</span></span><br><span class="line"><span class="comment">                     * <span class="doctag">@param</span> proxy : 代理对象</span></span><br><span class="line"><span class="comment">                     * <span class="doctag">@param</span> method : 代理的方法,未增强的方法</span></span><br><span class="line"><span class="comment">                     * <span class="doctag">@param</span> args  : 代理的方法的参数</span></span><br><span class="line"><span class="comment">                     * <span class="doctag">@return</span> 代理的方法的返回值</span></span><br><span class="line"><span class="comment">                     * <span class="doctag">@throws</span> Throwable</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> </span></span><br><span class="line"><span class="function">                        <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                        <span class="comment">// 生成产品</span></span><br><span class="line">                        ProductFactory productFactory = <span class="keyword">new</span> ProductFactory();</span><br><span class="line">                        productFactory.make();</span><br><span class="line">                        <span class="comment">// 开始销售:通过反射执行真实对象的方法</span></span><br><span class="line">                        <span class="comment">// 参数1：真实的对象</span></span><br><span class="line">                        <span class="comment">// 参数2：方法的参数</span></span><br><span class="line">                        method.invoke(newSale, args);</span><br><span class="line">                        <span class="comment">// 判断是否挣钱了</span></span><br><span class="line">                        <span class="comment">// 卖的价格：args[0]  假设产品的成本是 1500</span></span><br><span class="line">                        <span class="keyword">if</span> ((Float) args[<span class="number">0</span>] &gt; <span class="number">1500</span>) &#123;</span><br><span class="line">                            <span class="comment">// 卖的价格高于成本，挣了，可卖</span></span><br><span class="line">                            System.out.println(<span class="string">&quot;卖的价格高于成本，挣了，可卖&quot;</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="comment">// 卖的价格低于成本，赔了，不可卖</span></span><br><span class="line">                            System.out.println(<span class="string">&quot;卖的价格低于成本，赔了，不可卖&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">    sale.sale(<span class="number">1000F</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="32cglib-动态代理-基于类"><a class="markdownIt-Anchor" href="#32cglib-动态代理-基于类"></a> 3.2：cglib 动态代理 - 基于类</h3><p>基于子类的动态代理</p><p><strong>提供者：</strong> 第三方的 CGLib，如果报 asmxxxx 异常，需要导入 asm.jar</p><p><strong>要求：</strong> 被代理类不能用 final 修饰的类</p><p>导入 jar 包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCglibProxy</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="comment">// 真实对象</span></span><br><span class="line">    OldSale oldSale = <span class="keyword">new</span> OldSale();</span><br><span class="line">    <span class="comment">// 创建cglib代理对象</span></span><br><span class="line">    <span class="comment">// 1. 创建增强类对象</span></span><br><span class="line">    Enhancer enhancer = <span class="keyword">new</span> Enhancer();</span><br><span class="line">    <span class="comment">// 2. 指定代理对象的父类</span></span><br><span class="line">    enhancer.setSuperclass(oldSale.getClass());</span><br><span class="line">    <span class="comment">// 3. 指定增强的内容</span></span><br><span class="line">    <span class="comment">// MethodInterceptor:接口是方法拦截器</span></span><br><span class="line">    enhancer.setCallback(<span class="keyword">new</span> MethodInterceptor() &#123;</span><br><span class="line">        <span class="comment">/***</span></span><br><span class="line"><span class="comment">        *  增强的内容</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> o  代理对象，增强后的对象</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> method   代理的方法</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> objects   代理的方法的参数</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> methodProxy   代理方法,增强后的方法</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">        * <span class="doctag">@throws</span> Throwable</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Object o, Method method, Object[] objects, </span></span></span><br><span class="line"><span class="function"><span class="params">                                MethodProxy methodProxy)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                <span class="comment">// 生成产品</span></span><br><span class="line">                ProductFactory factory = <span class="keyword">new</span> ProductFactory();</span><br><span class="line">                factory.make();</span><br><span class="line">                <span class="comment">// 开始销售,执行真实对象的内容</span></span><br><span class="line">                method.invoke(oldSale, objects);</span><br><span class="line">                <span class="comment">// 判断是否挣钱了</span></span><br><span class="line">                <span class="comment">// 卖的价格：objects[0]  假设产品的成本是 1500</span></span><br><span class="line">                <span class="keyword">if</span> ((Float) objects[<span class="number">0</span>] &gt; <span class="number">1500</span>) &#123;</span><br><span class="line">                    <span class="comment">// 卖的价格高于成本，挣了，可卖</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;卖的价格高于成本，挣了，可卖&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 卖的价格低于成本，赔了，不可卖</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;卖的价格低于成本，赔了，不可卖&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="comment">// 4. 创建代理对象: </span></span><br><span class="line">    OldSale saleProxy = (OldSale) enhancer.create();</span><br><span class="line">    saleProxy.sale(<span class="number">2000f</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-使用动态代理解决问题"><a class="markdownIt-Anchor" href="#4-使用动态代理解决问题"></a> 4、使用动态代理解决问题</h2><p>业务层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String fromName, String toName, Float money)</span> </span>&#123;</span><br><span class="line">        Account fromAccount = accountDao.findByName(fromName);</span><br><span class="line">        Account toAccount = accountDao.findByName(toName);</span><br><span class="line">        fromAccount.setMoney(fromAccount.getMoney() - money);</span><br><span class="line">        toAccount.setMoney(toAccount.getMoney() + money);</span><br><span class="line">        accountDao.update(fromAccount);</span><br><span class="line">        <span class="comment">// 加异常，看事务是否回滚成功</span></span><br><span class="line">        System.out.println((<span class="number">1</span> / <span class="number">0</span>));</span><br><span class="line">        accountDao.update(toAccount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加一个事务代理工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionProxy</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> TransactionManager transactionManager;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">proxy</span><span class="params">(<span class="keyword">final</span> Object o)</span> </span>&#123;</span><br><span class="line">        Object proxyInstance = Proxy.newProxyInstance(</span><br><span class="line">            TransactionProxy.class.getClassLoader(),</span><br><span class="line">            o.getClass().getInterfaces(),</span><br><span class="line">            <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, </span></span></span><br><span class="line"><span class="function"><span class="params">                                     Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                    <span class="comment">//补事务</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        transactionManager.beginTransaction();</span><br><span class="line">                        <span class="comment">////被增强的方法有返回值就返回，没返回值会返回null</span></span><br><span class="line">                        Object result = method.invoke(o, args);</span><br><span class="line">                        transactionManager.commint();                        </span><br><span class="line">                        <span class="keyword">return</span> result;</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        transactionManager.rollback();</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                        transactionManager.release();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="keyword">return</span> proxyInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext-service.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTransfer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountService accountService;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    TransactionProxy transactionProxy;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        AccountService proxyAccountService = (AccountService) transactionProxy.proxy(accountService);</span><br><span class="line">        proxyAccountService.transfer(<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;bbb&quot;</span>,<span class="number">100F</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时业务与技术就分开了</p><p>但是不够智能，每次都需要手动增强，Service 多了、事务多了，写起来就比较繁琐。</p><p>下边就看 SpringAop 为我们增强功能</p><h1 id="十-spring-aop-概述"><a class="markdownIt-Anchor" href="#十-spring-aop-概述"></a> 十、Spring AOP 概述</h1><h2 id="1什么是-aop"><a class="markdownIt-Anchor" href="#1什么是-aop"></a> 1：什么是 AOP</h2><p>AOP：全称是 Aspect Oriented Programming 即：面向切面编程。</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120934.webp" /><p>简单的说，它就是把我们程序重复的代码抽取出来，在需要执行的时候，使用动态代理的技术，在不修改源码的基础上，对我们的已有方法进行增强。</p><p><strong>作用：</strong> 在程序运行期间，不修改源码对已有方法进行增强。</p><p><strong>优势：</strong> 减少重复代码 提高开发效率 维护方便</p><p>Aop（Aspect Oriented Programming），面向切面编程，这是对面向对象思想的一种补充。</p><p>面向切面编程，就是在程序运行时，不改变程序源码的情况下，动态的增强方法的功能，常见的使用场景非常多：</p><ol><li>日志</li><li>事务</li><li>数据库操作</li><li>….</li></ol><p>这些操作中，无一例外，都有很多模板化的代码，而解决模板化代码，消除臃肿就是 Aop 的强项。</p><p>在 Aop 中，有几个常见的概念：</p><table><thead><tr><th style="text-align:left">概念</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">切点</td><td style="text-align:left">要添加代码的地方，称作切点</td></tr><tr><td style="text-align:left">通知（增强）</td><td style="text-align:left">通知就是向切点动态添加的代码</td></tr><tr><td style="text-align:left">切面</td><td style="text-align:left">切点 + 通知</td></tr><tr><td style="text-align:left">连接点</td><td style="text-align:left">切点的定义</td></tr></tbody></table><h2 id="2aop-和-oop"><a class="markdownIt-Anchor" href="#2aop-和-oop"></a> 2：AOP 和 OOP</h2><p><strong>OOP：</strong></p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120938.webp" /><p><strong>AOP：</strong></p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120942.webp" /><h2 id="3aop-中相关术语"><a class="markdownIt-Anchor" href="#3aop-中相关术语"></a> 3：AOP 中相关术语</h2><blockquote><p><strong>连接点 (JointPoint)：</strong> Spring 中指那些被拦截到的方法</p><p><strong>切面 (Aspect)：</strong> 通常是一个类，里面可以定义切入点和通知</p><p><strong>切入点 (Pointcut)：</strong> 就是带有通知的连接点，在程序中主要体现为书写切入点表达式</p><p><strong>通知 (Advice)：</strong> AOP 在特定的连接点上执行的增强处理</p><ul><li>前置通知：before</li><li>后置通知：afterReturning</li><li>异常通知：afterThrowing</li><li>最终通知：after</li><li>环绕通知：around</li></ul><p><strong>织入 (weave)：</strong> 将切面应用到目标对象并导致代理对象创建的过程</p><p><strong>AOP 代理 (AOP Proxy)：</strong> AOP 代理对象，可以是 jdk 动态代理，也可以是 CGLIB 代理</p><p><strong>目标对象 (Target Object)：</strong> 包含连接点的对象，被代理对象</p></blockquote><p>大白话描述：连接点就是被增强对象中的所有方法，需要增强的方法成为切入点，把多个切入点的共有逻辑抽取出来封装到一个切面类里，切面类中定义增强 (通知) 的方式及内容。整个增强的过程成为织入</p><h2 id="4spring-aop-入门"><a class="markdownIt-Anchor" href="#4spring-aop-入门"></a> 4：Spring AOP 入门</h2><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置aop，必须引入一个包:版本必须要1.8.7以上--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>日志类 / 通知类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component(&quot;logger&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法前执行的共有逻辑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 后置通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法后执行的共有逻辑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异常通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">throwing</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法发生异常执行的共有逻辑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最终通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;无论如何最后都要执行的共有逻辑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;保存方法执行&quot;</span>);</span><br><span class="line">        <span class="comment">//System.out.println(1 / 0);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:asp</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描包,创建对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- aop配置:织入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">asp:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            1:配置通知对象:负责增强逻辑的对象</span></span><br><span class="line"><span class="comment">            2:配置切面=切入点+通知 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">asp:aspect</span> <span class="attr">id</span>=<span class="string">&quot;log&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;logger&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 切入点 expression:用于定义切入点表达式。 id:用于给切入点表达式提供一个唯一标识--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> </span></span><br><span class="line"><span class="tag">                          <span class="attr">expression</span>=<span class="string">&quot;execution(* com.petrel1024.service.impl.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 前置通知 </span></span><br><span class="line"><span class="comment"> method:指定通知中方法的名称</span></span><br><span class="line"><span class="comment"> pointct:定义切入点表达式 </span></span><br><span class="line"><span class="comment"> pointcut-ref：指定切入点表达式的引用</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 后置通知 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;afterReturning&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 异常通知 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;throwing&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 最终通知 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">asp:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">asp:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLog</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testLogger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        accountService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十一-aop-中的细节"><a class="markdownIt-Anchor" href="#十一-aop-中的细节"></a> 十一、AOP 中的细节</h1><h2 id="1execution-表达式"><a class="markdownIt-Anchor" href="#1execution-表达式"></a> 1：execution 表达式</h2><p>execution 表达式格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution([修饰符] 返回值类型 包名.类名.方法名(参数))</span><br></pre></td></tr></table></figure><p>写法说明：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">全匹配方式</span>: <span class="string">public void com.petrel1024.service.impl.UserServiceImpl.saveUser(com.petrel1024.service.User)</span></span><br><span class="line"><span class="meta">访问呢修饰符其实可以省略</span>: <span class="string">void com.petrel1024.service.impl.UserServiceImpl.saveUser(com.petrel1024.service.User)</span></span><br><span class="line"><span class="meta">返回值可以使用*号,表示任意返回值</span>: <span class="string">* com.petrel1024.service.impl.UserServiceImpl.saveUser(com.petrel1024.service.User)</span></span><br><span class="line"><span class="meta">包名可以使用*号,表示任意包。但是有几级包，需要写几个*</span>: <span class="string">* *.*.*.*.UserServiceImpl.saveUser(com.petrel1024.service.User)</span></span><br><span class="line"><span class="meta">使用..来表示当前包，及其子包</span>: <span class="string">* com..UserServiceImpl.saveUser(com.petrel1024.service.User)</span></span><br><span class="line"><span class="meta">类名可以使用*号，表示任意类</span>: <span class="string">* com..*.saveUser(com.petrel1024.service.User)</span></span><br><span class="line"><span class="meta">方法名可以使用*号，表示任意方法</span>: <span class="string">* com..*.*(com.petrel1024.service.User)</span></span><br><span class="line"><span class="meta">参数列表可以使用*号，表示参数可以是任意数据类型，但是必须有参数</span>: <span class="string">* com..*.*(*)</span></span><br><span class="line"><span class="meta">参数列表可以使用..表示有无参数均可，有参数可以是任意类型</span>: <span class="string">* com..*.*(..)</span></span><br><span class="line"><span class="meta">全通配方式</span>: <span class="string">* *..*.*(..)</span></span><br></pre></td></tr></table></figure><p>通常情况下，我们都是对业务层的方法进行增强，所以切入点表达式都是切到业务层实现类。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">execution(*</span> <span class="string">com.petrel1024.service.impl.*.*(..))</span></span><br></pre></td></tr></table></figure><h2 id="2环绕通知-常用"><a class="markdownIt-Anchor" href="#2环绕通知-常用"></a> 2：环绕通知 - 常用</h2><p>环绕通知 = 前置通知 + 后置通知 + 最终通知 + 异常通知</p><p>环绕通知可以手动控制增强方法何时执行的方式。</p><p>配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">asp:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">asp:aspect</span> <span class="attr">id</span>=<span class="string">&quot;log&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;logger&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">asp:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> </span></span><br><span class="line"><span class="tag">                      <span class="attr">expression</span>=<span class="string">&quot;execution(* com.petrel1024.service.impl.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">asp:around</span> <span class="attr">method</span>=<span class="string">&quot;arround&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">asp:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">asp:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通知类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component(&quot;logger&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 环绕通知 </span></span><br><span class="line"><span class="comment">     * 问题: 当配置完环绕通知之后，没有业务层方法执行(没有切入点方法执行)</span></span><br><span class="line"><span class="comment">     * 分析: 通过动态代理的代码分析，现在的环绕通知没有明确的切入点方法调用 </span></span><br><span class="line"><span class="comment">     * 解决: spring框架提供了一个接口ProceedingJoinPoint，该接口可以作为环绕通知的方法参数来使用</span></span><br><span class="line"><span class="comment">     * 当环绕通知执行时，spring框架会为我们注入该接口的实现类。</span></span><br><span class="line"><span class="comment">     * 它有一个方法proceed()，就相当于invoke，明确的业务层方法调用 </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * ProceedingJoinPoint: 翻译过来的意思是切入点,使用它来执行业务层方法(如何执行?使用proceed)</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * spring的环绕通知: 它是spring为我们提供的一种可以在代码中手动控制增强方法何时执行的方式。 </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">arround</span><span class="params">(ProceedingJoinPoint pjp)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">try</span> &#123; </span><br><span class="line">            System.out.println(<span class="string">&quot;方法之前&quot;</span>); </span><br><span class="line">            Object o = pjp.proceed();<span class="comment">//明确的方法调用 </span></span><br><span class="line">            System.out.println(<span class="string">&quot;方法之后&quot;</span>); </span><br><span class="line">            <span class="keyword">return</span> o</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123; </span><br><span class="line">            System.out.println(<span class="string">&quot;方法异常&quot;</span>); </span><br><span class="line">            e.printStackTrace(); </span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123; </span><br><span class="line">            System.out.println(<span class="string">&quot;最终执行&quot;</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLog</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testLogger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        accountService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3使用-aop-改造转账案例"><a class="markdownIt-Anchor" href="#3使用-aop-改造转账案例"></a> 3：使用 AOP 改造转账案例</h2><p>dao、service、不变，删除 TransactionProxy</p><p>修改事务管理器： TransactionManager 中代码 → 添加环绕通知</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionManager</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ConnectionUtil connectionUtil;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开启事务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beginTransaction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 从当前线程上获取连接，实现开启事务</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtil.getConnection().setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提交事务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtil.getConnection().commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 回滚事务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtil.getConnection().rollback();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtil.getConnection().setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 关闭连接（还回池中）</span></span><br><span class="line">            connectionUtil.getConnection().close();</span><br><span class="line">            <span class="comment">// 解绑线程：把连接和线程解绑</span></span><br><span class="line">            connectionUtil.remove();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增强事务逻辑</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            beginTransaction();</span><br><span class="line">            Object o = proceedingJoinPoint.proceed();</span><br><span class="line">            commit();</span><br><span class="line">            <span class="keyword">return</span> o;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            rollback();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            release();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xml 中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">asp:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">id</span>=<span class="string">&quot;txManager&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;around&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">pointcut</span>=<span class="string">&quot;execution(* com.petrel1024.service..*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">asp:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext-service.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTransfer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        accountService.transfer(<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;bbb&quot;</span>,<span class="number">100F</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十二-aop-中的注解"><a class="markdownIt-Anchor" href="#十二-aop-中的注解"></a> 十二、AOP 中的注解</h1><p>半注解半 xml</p><p>要被替代的 xml 配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 事务配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 切面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">id</span>=<span class="string">&quot;txManager&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 切入点 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> </span></span><br><span class="line"><span class="tag">                      <span class="attr">expression</span>=<span class="string">&quot;execution(* com.petrel1024.service..*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 通知 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;around&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1开启自动代理-开启注解代理"><a class="markdownIt-Anchor" href="#1开启自动代理-开启注解代理"></a> 1：开启自动代理 - 开启注解代理</h2><p>applicationContext.xml 中开启自动代理，如果要彻底删除 xml 配置文件需要在配置文件类上加 <code>@EnableAspectJAutoProxy</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启自动代理也就是开启代理注解支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2aspect-配置切面"><a class="markdownIt-Anchor" href="#2aspect-配置切面"></a> 2：@Aspect - 配置切面</h2><p>在类上加 <code>@Aspect</code> 标记为切面类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionManager</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="3pointcut-配置切入点"><a class="markdownIt-Anchor" href="#3pointcut-配置切入点"></a> 3：@Pointcut - 配置切入点</h2><p>切面类中随便写一个无参无返回值的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(* com.petrel1024.service.*.*.*(..))&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointcut</span><span class="params">()</span></span>&#123; &#125;</span><br></pre></td></tr></table></figure><h2 id="4通知注解"><a class="markdownIt-Anchor" href="#4通知注解"></a> 4：通知注解</h2><p><strong>@Before(“切入点，@Pointcut注解标记的方法名，如上边的那个：pointcut()”)：</strong> 前置通知</p><p><strong>@AfterReturning(“切入点”)：</strong> 后置通知</p><p><strong>@AfterThrowing(value = “切入点”,throwing = “抛出异常的变量名”)：</strong> 异常通知</p><p><strong>@After(“切入点”)：</strong> 最终通知</p><p><strong>@Around(“切入点”)：</strong> 环绕通知</p><p>例如：环绕通知</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(* com.petrel1024.service.*.*.*(..))&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointcut</span><span class="params">()</span></span>&#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Around(&quot;pointcut()&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">arround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        begin();</span><br><span class="line">        Object o = proceedingJoinPoint.proceed();</span><br><span class="line">        commit();</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        rollbacK();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        release();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5通知注解中直接写切入点"><a class="markdownIt-Anchor" href="#5通知注解中直接写切入点"></a> 5：通知注解中直接写切入点</h2><p>xml 切入点可以提取出来，也可以写在通知中</p><p>xml 中切入点提取出来</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 切入点 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">expression</span>=<span class="string">&quot;execution(* com.petrel1024.service..*.*(..))&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通知 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;around&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>xml 中切入点写在通知里</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;around&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;execution(* com.petrel1024.service..*.*(..))&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>用那种呢？当然是写在通知里，所有通知中常用的只有环绕通知，没有必要提取出来</p><p>环绕通知：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * 删除此注解及方法</span></span><br><span class="line"><span class="comment"> * @Pointcut(&quot;execution(* com.petrel1024.service..*.*(..))&quot;)</span></span><br><span class="line"><span class="comment"> * public void pointcut()&#123; &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Around(&quot;execution(* com.petrel1024.service..*.*(..))&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">arround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        begin();</span><br><span class="line">        Object o = proceedingJoinPoint.proceed();</span><br><span class="line">        commit();</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        rollbacK();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        release();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十三-springjdbctemplate-了解"><a class="markdownIt-Anchor" href="#十三-springjdbctemplate-了解"></a> 十三、SpringJdbcTemplate – 了解</h1><h2 id="1jdbctemplate-概述"><a class="markdownIt-Anchor" href="#1jdbctemplate-概述"></a> 1：JdbcTemplate 概述</h2><p>它是 Spring 框架中提供的一个对象，是对原始 Jdbc API 对象的简单封装。</p><p>Spring 框架提供了很多的操作模板类。</p><ul><li>操作关系型数据的：<ul><li>JdbcTemplate</li><li>HibernateTemplate</li></ul></li><li>操作 nosql 数据库的： RedisTemplate</li><li>操作消息队列的：JmsTemplate</li></ul><p>回顾学过的持久性技术：</p><ul><li>JBDC：Java 提供的操作数据库的 API</li><li>DBUtils：Apache 提供的对 JDBC 进行简单封装的工具包</li><li>SpringJdbcTemplate：Spring 提供的对 JDBC 进行简单封装的工具包</li><li>Mybatis：对 JDBC 高度封装的持久层框架</li><li>数据库连接池有哪些：<ul><li>C3P0：历史悠久，长时间未维护，适用于小型系统</li><li>DBCP：Apache提供，单线程，并发量低，性能不好，适用于小型系统</li><li>HikariCP：SpringBoot 默认数据库连接池，目前连接池中性能最好的。推荐使用</li><li>Druid：阿里巴巴提供的数据连接池，功能全面，性能也非常好。推荐使用</li></ul></li></ul><p>为什么要学一下 SpringJdbcTemplate 不用 DBUtils，因为它可以对结果集进行映射，且使用它获取出来的 Connection 已经进行过线程绑定，不用自己再写 ThreadLocal。But 以后用的多么？不多 (笑哭)，等 Spring 与 Mybatis 整合之后就用的不多了</p><h2 id="2jdbctemplate-入门"><a class="markdownIt-Anchor" href="#2jdbctemplate-入门"></a> 2：JdbcTemplate 入门</h2><p>引入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Spring核心包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- SpringJdbcTemplate --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Spring测试包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- MySQL驱动包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- HiKariCP --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zaxxer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>HikariCP<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- druid --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JDBC.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jdbc.driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://192.168.159.132:3306/spring?characterEncoding=utf8</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">Petrel12345</span></span><br></pre></td></tr></table></figure><p>Spring 配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                           http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                           http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描包创建bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 引入properties配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注入JdbcTemplate --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- set方式注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;hikariDataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 配置数据源 选择时二选一即可--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HikariCP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hikariDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zaxxer.hikari.HikariDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverClassName&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Druid --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;druidDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverClassName&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>持久层 (简单测试，接口和 service 层就不写出来了)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;insert into account values(null,?,?)&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql,account.getName(),account.getMoney());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJdbcTemplate</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account =<span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">&quot;ddd&quot;</span>);</span><br><span class="line">        account.setMoney(<span class="number">1000f</span>);</span><br><span class="line">        accountService.save(account);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过 <code>org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection()</code> 和 <code>org.springframework.transaction.support.TransactionSynchronizationManager</code> 发现使用 SpringJdbcTemplate 使用了 ThreadLocal 进行了线程绑定</p><h2 id="3jdbctemplate-中的查询操作"><a class="markdownIt-Anchor" href="#3jdbctemplate-中的查询操作"></a> 3：JdbcTemplate 中的查询操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from account where id=?&quot;</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * queryForObject 查单个对象的</span></span><br><span class="line"><span class="comment">         * 如果查询多个 采用 queryForList 或者直接query</span></span><br><span class="line"><span class="comment">         * BeanPropertyRowMapper 和之前的 beanHandler 作用一模一样</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> getJdbcTemplate().queryForObject(</span><br><span class="line">            sql,</span><br><span class="line">            <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(Account.class),</span><br><span class="line">            id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select *  from  account&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> getJdbcTemplate().query(sql,<span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(Account.class));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4jdbctemplate-中的更新删除"><a class="markdownIt-Anchor" href="#4jdbctemplate-中的更新删除"></a> 4：JdbcTemplate 中的更新删除</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;update account set money=? where name=?&quot;</span>;</span><br><span class="line">        getJdbcTemplate().update(sql,account.getMoney(),account.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;delete from account where id=?&quot;</span>;</span><br><span class="line">        getJdbcTemplate().update(sql,id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5jdbctemplate-中的结果集封装"><a class="markdownIt-Anchor" href="#5jdbctemplate-中的结果集封装"></a> 5：JdbcTemplate 中的结果集封装</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAllWithAlias</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql=<span class="string">&quot;select id as xx,name,money  from  account&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> getJdbcTemplate().query(sql, <span class="keyword">new</span> RowMapper&lt;Account&gt;() &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 原始的jdbc中的结果集封装</span></span><br><span class="line"><span class="comment">             * PrepareStatement st=connection.prepareStatement(&quot;&quot;);</span></span><br><span class="line"><span class="comment">             * ResultSet result = st.excute();</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * while(result.next)&#123;</span></span><br><span class="line"><span class="comment">             *     result.getObject(id)</span></span><br><span class="line"><span class="comment">             * &#125;            </span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">// 方法里的代码就相当于while循环体中的代码</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Account <span class="title">mapRow</span><span class="params">(ResultSet resultSet, <span class="keyword">int</span> i)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">                Account account = <span class="keyword">new</span> Account();</span><br><span class="line">                <span class="keyword">int</span> id = resultSet.getInt(<span class="string">&quot;xx&quot;</span>);</span><br><span class="line">                account.setId(id);</span><br><span class="line">                String name = resultSet.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                account.setName(name);</span><br><span class="line">                <span class="keyword">double</span> money = resultSet.getDouble(<span class="string">&quot;money&quot;</span>);</span><br><span class="line">                account.setMoney(money);</span><br><span class="line">                <span class="keyword">return</span> account;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十四-声明式事务"><a class="markdownIt-Anchor" href="#十四-声明式事务"></a> 十四、声明式事务</h1><p>JavaEE 体系进行分层开发，事务处理位于业务层，Spring 提供了分层设计业务层的事务处理解决方案。</p><p>Spring 框架提供了一组事务控制的接口。这组接口在 spring-tx-5.0.2.RELEASE.jar 中。</p><p>Spring 的事务控制都是基于 AOP 的，它既可以使用编程的方式实现，也可以使用配置的方式实现。</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120956.webp" /><p>编程式事务管理：在业务层写了事务技术代码</p><p>声明式事务管理：在配置文件声明事务对象，管理事务，业务层中没有任何事务代码</p><h2 id="1spring-中事务控制的-api-介绍"><a class="markdownIt-Anchor" href="#1spring-中事务控制的-api-介绍"></a> 1：Spring 中事务控制的 API 介绍</h2><h3 id="11platformtransactionmanager"><a class="markdownIt-Anchor" href="#11platformtransactionmanager"></a> 1.1：PlatformTransactionManager</h3><p><code>org.springframework.transaction.PlatformTransactionManager</code> 是 spring 的事务管理器，它里面提供了常用的操作事务的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PlatformTransactionManager</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取事务的状态信息</span></span><br><span class="line">    <span class="function">TransactionStatus <span class="title">getTransaction</span><span class="params">(<span class="meta">@Nullable</span> TransactionDefinition definition)</span> </span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> TransactionException</span>;</span><br><span class="line">    <span class="comment">// 提交事务</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">commit</span><span class="params">(TransactionStatus status)</span> <span class="keyword">throws</span> TransactionException</span>;</span><br><span class="line">    <span class="comment">// 回滚事务</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rollback</span><span class="params">(TransactionStatus status)</span> <span class="keyword">throws</span> TransactionException</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在开发中都是使用它的实现类，真正管理事务的对象：</p><ul><li><code>org.springframework.jdbc.datasource.DataSourceTransactionManager</code>：使用 Spring JDBC 或 MyBatis 进行持久化数据时使用</li><li><code>org.springframework.orm.hibernate5.HibernateTransactionManager</code>：使用 Hibernate 进行持久化数据时使用</li></ul><h3 id="12transactiondefinition"><a class="markdownIt-Anchor" href="#12transactiondefinition"></a> 1.2：TransactionDefinition</h3><p>它是事务的定义信息对象</p><blockquote><p>如果是查询，则为只读的事务  readOnly = true</p><p>如果是增删改，则为非只读的事务，readOnly = false</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TransactionDefinition</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> PROPAGATION_REQUIRED = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> PROPAGATION_SUPPORTS = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> PROPAGATION_MANDATORY = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> PROPAGATION_REQUIRES_NEW = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> PROPAGATION_NOT_SUPPORTED = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> PROPAGATION_NEVER = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> PROPAGATION_NESTED = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">int</span> ISOLATION_DEFAULT = -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ISOLATION_READ_UNCOMMITTED = Connection.TRANSACTION_READ_UNCOMMITTED;</span><br><span class="line"><span class="keyword">int</span> ISOLATION_READ_COMMITTED = Connection.TRANSACTION_READ_COMMITTED;</span><br><span class="line"><span class="keyword">int</span> ISOLATION_REPEATABLE_READ = Connection.TRANSACTION_REPEATABLE_READ;</span><br><span class="line"><span class="keyword">int</span> ISOLATION_SERIALIZABLE = Connection.TRANSACTION_SERIALIZABLE;</span><br><span class="line"><span class="keyword">int</span> TIMEOUT_DEFAULT = -<span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 获取事务传播行为</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getPropagationBehavior</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 获取事务隔离级别</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getIsolationLevel</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 获取事务超时时间</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getTimeout</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 获取事务是否只读</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isReadOnly</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 获取事务对象名称</span></span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13transactionstatus"><a class="markdownIt-Anchor" href="#13transactionstatus"></a> 1.3：TransactionStatus</h3><p>此接口提供的是事务具体的运行状态</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TransactionStatus</span> <span class="keyword">extends</span> <span class="title">SavepointManager</span>, <span class="title">Flushable</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取事务是否是新的事务</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isNewTransaction</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 获取是否存在存储点</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">hasSavepoint</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 设置事务回滚</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setRollbackOnly</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 获取事务是否回滚</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isRollbackOnly</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 刷新事务</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 获取事务是否完成</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isCompleted</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2回顾事务的特性"><a class="markdownIt-Anchor" href="#2回顾事务的特性"></a> 2：回顾事务的特性</h2><p>事务的四个特性：</p><ul><li>原子性：不可再分割</li><li>隔离性：事务之间的隔离级别</li><li>一致性：要么全部完成，要么全部不完成</li><li>持久性：一旦提交持久化到数据中</li></ul><p>隔离级别：</p><ul><li><p>读未提交：read uncommited</p><p>产生的问题：脏读，幻读，不可重复读</p></li><li><p>读已提交：read commited</p><p>产生的问题：幻读，不可重复读</p><p>解决的问题：脏读</p></li><li><p>重复读：  repeatable read</p><p>产生的问题：幻读</p><p>解决的问题：脏读，不可重复读</p></li><li><p>串行化（序列化）： serializable</p><p>产生的问题：null<br />解决的问题： 所有的问题<br />隔离级别最高，效率最低</p></li></ul><p>数据库的支持的隔离级别 → 一般情况下选择都是默认的隔离级别</p><ul><li><p>mysql：支持：read uncommited  read commited  repeatable read  serializable  支持三个隔离级别</p><p>默认的隔离级别：repeatable read</p></li><li><p>Oracle支持：read commited   serializable   read only (只读)</p><p>默认的隔离级别：read commited</p></li></ul><h2 id="3事务的传播行为"><a class="markdownIt-Anchor" href="#3事务的传播行为"></a> 3：事务的传播行为</h2><p>传播：事务是否要向下传递</p><p>需要掌握的两个：</p><ul><li>REQUIRED - 必要的：如果没有事务，则新建一个事务；如果有事务，加入这个事务当中，Spring 指定为默认值。一般用于增删改</li><li>SUPPORTS - 支持的：如果没有事务，非事务执行；如果有事务，加入这个事务当中。一般用于查询</li></ul><p>了解的：</p><ul><li>MANDATORY：可以使用当前的事务，如果没有事务，抛出异常</li><li>REQUERS_NEW：新建一个事务，如果存在事务，则挂起事务</li><li>NOT_SUPPORTED：必须非事务执行，如果有事务，则挂起事务</li><li>NEVER：非事务执行，如果存在事务，抛出异常</li><li>NESTED：有事务，嵌套执行，没有事务，执行 REQUIRED</li></ul><h2 id="4xml-方式实现声明式事务"><a class="markdownIt-Anchor" href="#4xml-方式实现声明式事务"></a> 4：XML 方式实现声明式事务</h2><p>需要引入的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- SpringAOP必需的jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Spring事务管理所需要的jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span> <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描包创建bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.petrel1024&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 引入properties配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注入JdbcTemplate --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- set方式注入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;hikariDataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置数据源 选择时二选一即可--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HikariCP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hikariDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zaxxer.hikari.HikariDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverClassName&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Druid --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;druidDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverClassName&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 创建事务管理对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;txManager&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入数据源 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;hikariDataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 事务的增强(优化):指定哪些方法需要增强 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;txManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            指定需要拦截的方法</span></span><br><span class="line"><span class="comment">                isolation: 隔离级别, 一般选择默认的</span></span><br><span class="line"><span class="comment">                propagation: 传播的行为,</span></span><br><span class="line"><span class="comment">                read-only: 是否为只读的事务，</span></span><br><span class="line"><span class="comment">                    增删改: 非只读事务 read-only=false</span></span><br><span class="line"><span class="comment">                    查询: 只读的事务 read-only=true</span></span><br><span class="line"><span class="comment">                timeout: 指定超时时间。默认值为：-1。永不超时。</span></span><br><span class="line"><span class="comment">                rollback-for: </span></span><br><span class="line"><span class="comment">用于指定一个异常，当执行产生该异常时，事务回滚。</span></span><br><span class="line"><span class="comment">产生其他异常，事务不回滚。</span></span><br><span class="line"><span class="comment">没有默认值，任何异常都回滚</span></span><br><span class="line"><span class="comment">                no-rollback-for: </span></span><br><span class="line"><span class="comment">用于指定一个异常，当产生该异常时，事务不回滚。</span></span><br><span class="line"><span class="comment">产生其他异常时，事务回滚。</span></span><br><span class="line"><span class="comment">没有默认值，任何异常都回滚</span></span><br><span class="line"><span class="comment">                find*: 通配符配置，只要以 find开头即可</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;find*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;select*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;query*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--其他方法的配置方法--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- AOP配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        切面配置</span></span><br><span class="line"><span class="comment">            advice-ref: 通知关联</span></span><br><span class="line"><span class="comment">            pointcut: 切入点</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">pointcut</span>=<span class="string">&quot;execution(* com.petrel1024.service..*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时业务层不需要任何事务代码</p><h2 id="5注解实现声明式事务"><a class="markdownIt-Anchor" href="#5注解实现声明式事务"></a> 5：注解实现声明式事务</h2><p>还是半注解半 xml</p><h3 id="51开启事务管理的注解"><a class="markdownIt-Anchor" href="#51开启事务管理的注解"></a> 5.1：开启事务管理的注解</h3><p>如果要彻底删除 xml 配置文件需要在配置文件类上加 <code>@EnableTransactionManagement</code> 不要忘了加 DataSourceTransactionManager</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启事务管理的注解 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;txManager&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="52transactional"><a class="markdownIt-Anchor" href="#52transactional"></a> 5.2：@Transactional</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可以不指定属性的值，使用默认值，在方法上从新指定覆盖</span></span><br><span class="line"><span class="meta">@Transactional(isolation = Isolation.DEFAULT, propagation = Propagation.REQUIRED, readOnly = false,timeout = -1)</span></span><br></pre></td></tr></table></figure><p>该注解可以出现在接口上，类上和方法上。</p><ul><li>出现接口上，表示该接口的所有实现类都有事务支持</li><li>出现在类上，表示类中所有方法有事务支持</li><li>出现在方法上，表示方法有事务支持</li></ul><p>以上三个位置的优先级：方法 &gt; 类 &gt; 接口</p><h1 id="十五-spring5-的新特性-了解"><a class="markdownIt-Anchor" href="#十五-spring5-的新特性-了解"></a> 十五、Spring5 的新特性 – 了解</h1><h2 id="1与-jdk-相关的升级"><a class="markdownIt-Anchor" href="#1与-jdk-相关的升级"></a> 1：与 JDK 相关的升级</h2><h3 id="11jdk-版本要求"><a class="markdownIt-Anchor" href="#11jdk-版本要求"></a> 1.1：jdk 版本要求</h3><p>Spring5.0 在 2017 年 9 月发布了它的 GA（通用）版本。</p><p>该版本是基于 jdk8 编写的，所以 jdk8 以下版本将无法使用。</p><p>同时，可以兼容 jdk9 版本。 tomcat 版本要求 8.5 及以上。</p><p>注： 我们使用 jdk8 构建工程，可以降版编译。但是不能使用 jdk8 以下版本构建工程。</p><p>由于 jdk 和 tomca t版本的更新，我们的 IDE 也需要同时更新。</p><h3 id="12利用-jdk8-版本更新的内容"><a class="markdownIt-Anchor" href="#12利用-jdk8-版本更新的内容"></a> 1.2：利用 jdk8 版本更新的内容</h3><p>第一：基于 JDK8 的反射增强</p><p>请看下面的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123; </span><br><span class="line">    <span class="comment">// 循环次数定义：10亿次 </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> loopCnt = <span class="number">1000</span> * <span class="number">1000</span> * <span class="number">1000</span>; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123; </span><br><span class="line">        <span class="comment">// 输出jdk的版本 </span></span><br><span class="line">        System.out.println(<span class="string">&quot;java.version=&quot;</span> + System.getProperty(<span class="string">&quot;java.version&quot;</span>)); </span><br><span class="line">        t1(); </span><br><span class="line">        t2(); </span><br><span class="line">        t3(); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// 每次重新生成对象 </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">t1</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">long</span> s = System.currentTimeMillis(); </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopCnt; i++) &#123; </span><br><span class="line">            Person p = <span class="keyword">new</span> Person(); </span><br><span class="line">            p.setAge(<span class="number">31</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">long</span> e = System.currentTimeMillis(); </span><br><span class="line">        System.out.println(<span class="string">&quot;循环10亿次创建对象的时间：&quot;</span> + (e - s)); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// 同一个对象 </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">t2</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">long</span> s = System.currentTimeMillis(); </span><br><span class="line">        Person p = <span class="keyword">new</span> Person(); </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopCnt; i++) &#123; </span><br><span class="line">            p.setAge(<span class="number">32</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">long</span> e = System.currentTimeMillis(); </span><br><span class="line">        System.out.println(<span class="string">&quot;循环10亿次给同一对象赋值的时间： &quot;</span> + (e - s)); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 使用反射创建对象 </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">t3</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </span><br><span class="line">        <span class="keyword">long</span> s = System.currentTimeMillis(); </span><br><span class="line">        Class&lt;Person&gt; c = Person.class; </span><br><span class="line">        Person p = c.newInstance(); </span><br><span class="line">        Method m = c.getMethod(<span class="string">&quot;setAge&quot;</span>, Integer.class); </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopCnt; i++) &#123; </span><br><span class="line">            m.invoke(p, <span class="number">33</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">long</span> e = System.currentTimeMillis(); </span><br><span class="line">        System.out.println(<span class="string">&quot;循环10亿次反射创建对象的时间：&quot;</span> + (e - s)); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123; </span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> age = <span class="number">20</span>; </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123; </span><br><span class="line">            <span class="keyword">return</span> age; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123; </span><br><span class="line">            <span class="keyword">this</span>.age = age; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jdk1.8 版本（就是 JDK8）运行时间如下：</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120904.webp" /><p>当切换到 jdk1.7 版本之后，运行时间如下：</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Spring/01/image-20190911120906.webp" alt="反射创建对象-jdk1.7" /><p>由此我们可以看出，在反射创建对象上，jdk8 确实做了加强。</p><p>第二：@NonNull 注解和 @Nullable 注解的使用：用 @Nullable 和 @NotNull 注解来显示表明可为空的参数和以及返回值。这样就够在编译的时候处理空值而不是在运行时抛出 NullPointerExceptions。</p><p>第三：日志记录方面：Spring Framework 5.0 带来了 Commons Logging 桥接模块的封装, 它被叫做 spring-jcl 而不是标准的 Commons Logging。当然，无需任何额外的桥接，新版本也会对 Log4j 2.x, SLF4J, JUL ( java.util.logging) 进行自动检测。</p><h2 id="2核心容器的更新"><a class="markdownIt-Anchor" href="#2核心容器的更新"></a> 2：核心容器的更新</h2><p>Spring Framework 5.0 现在支持候选组件索引作为类路径扫描的替代方案。该功能已经在类路径扫描器中添加，以简化添加候选组件标识的步骤。</p><p>应用程序构建任务可以定义当前项目自己的 META-INF/spring.components 文件。在编译时，源模型是自包含的，JPA 实体和 Spring 组件是已被标记的。</p><p>从索引读取实体而不是扫描类路径对于小于 200 个类的小型项目是没有明显差异。但对大型项目影响较大。加载组件索引开销更低。因此，随着类数的增加，索引读取的启动时间将保持不变。</p><p>加载组件索引的耗费是廉价的。因此当类的数量不断增长，加上构建索引的启动时间仍然可以维持一个常数, 不过对于组件扫描而言，启动时间则会有明显的增长。</p><p>这个对于我们处于大型 Spring 项目的开发者所意味着的，是应用程序的启动时间将被大大缩减。虽然 20 或者 30 秒钟看似没什么，但如果每天要这样登上好几百次，加起来就够你受的了。使用了组件索引的话，就能帮助你每天过的更加高效。 你可以在 Spring 的 Jira上了解更多关于组件索引的相关信息。</p><h2 id="3jetbrains-kotlin-语言支持"><a class="markdownIt-Anchor" href="#3jetbrains-kotlin-语言支持"></a> 3：JetBrains Kotlin 语言支持</h2><p>Kolin 概述：是一种支持函数式编程编程风格的面向对象语言。Kotlin 运行在 JVM 之上，但运行环境并不限于 JVM。</p><p>Kolin 的示例代码：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    (<span class="string">&quot;/movie&quot;</span> and accept(TEXT_HTML)).nest &#123; </span><br><span class="line">        GET(<span class="string">&quot;/&quot;</span>, movieHandler::findAllView) </span><br><span class="line">        GET(<span class="string">&quot;/&#123;card&#125;&quot;</span>, movieHandler::findOneView) </span><br><span class="line">    &#125; </span><br><span class="line">    (<span class="string">&quot;/api/movie&quot;</span> and accept(APPLICATION_JSON)).nest &#123; </span><br><span class="line">        GET(<span class="string">&quot;/&quot;</span>, movieApiHandler::findAll) </span><br><span class="line">        GET(<span class="string">&quot;/&#123;id&#125;&quot;</span>, movieApiHandler::findOne) &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>Kolin 注册 bean 对象到 spring 容器：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> context = GenericApplicationContext &#123;</span><br><span class="line">    registerBean() registerBean &#123; Cinema(it.getBean()) &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4响应式编程风格"><a class="markdownIt-Anchor" href="#4响应式编程风格"></a> 4：响应式编程风格</h2><p>此次 Spring 发行版本的一个激动人心的特性就是新的响应式堆栈 WEB 框架。这个堆栈完全的响应式且非阻塞，适合于事件循环风格的处理，可以进行少量线程的扩展。</p><p>Reactive Streams 是来自于 Netflix, Pivotal, Typesafe, Red Hat, Oracle, Twitter 以及 <a href="http://Spray.io">Spray.io</a> 的工程师特地开发的一个 API。它为响应式编程实现的实现提供一个公共的 API，好实现 Hibernate 的 JPA。这里 JPA 就是这个 API, 而 Hibernate 就是实现。</p><p>Reactive Streams API 是 Java 9 的官方版本的一部分。在 Java 8 中, 你会需要专门引入依赖来使用 Reactive Streams API。</p><p>Spring Framework 5.0 对于流式处理的支持依赖于 Project Reactor 来构建, 其专门实现了 Reactive Streams API。</p><p>Spring Framework 5.0 拥有一个新的 spring-webflux 模块，支持响应式 HTTP 和 WebSocket 客户端。Spring Framework 5.0 还提供了对于运行于服务器之上，包含了 REST, HTML, 以及 WebSocket 风格交互的响应式网页应用程序的支持。</p><p>在 spring-webflux 中包含了两种独立的服务端编程模型：</p><p>基于注解：使用到了@Controller 以及 Spring MVC 的其它一些注解；</p><p>使用 Java 8 lambda 表达式的函数式风格的路由和处理。</p><p>有了 Spring Webflux, 你现在可以创建出 WebClient, 它是响应式且非阻塞的，可以作为 RestTemplate 的一个替代方案。</p><p>这里有一个使用 Spring 5.0 的 REST 端点的 WebClient 实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WebClient webClient = WebClient.create(); </span><br><span class="line">Mono person = webClient.get()</span><br><span class="line">    .uri(<span class="string">&quot;http://localhost:8080/movie/42&quot;</span>)</span><br><span class="line">    .accept(MediaType.APPLICATION_JSON)</span><br><span class="line">    .exchange()</span><br><span class="line">    .then(response -&gt; response.bodyToMono(Movie.class));</span><br></pre></td></tr></table></figure><h2 id="5junit5-支持"><a class="markdownIt-Anchor" href="#5junit5-支持"></a> 5：Junit5 支持</h2><p>完全支持 JUnit 5 Jupiter，所以可以使用 JUnit 5 来编写测试以及扩展。此外还提供了一个编程以及扩展模型，Jupiter 子项目提供了一个测试引擎来在 Spring 上运行基于 Jupiter 的测试。</p><p>另外，Spring Framework 5 还提供了在 Spring TestContext Framework 中进行并行测试的扩展。</p><p>针对响应式编程模型， spring-test 现在还引入了支持 Spring WebFlux 的 WebTestClient 集成测试的支持，类似于 MockMvc，并不需要一个运行着的服务端。使用一个模拟的请求或者响应， WebTestClient 就可以直接绑定到 WebFlux 服务端设施。</p><p>你可以在这里找到这个激动人心的 TestContext 框架所带来的增强功能的完整列表。 当然， Spring Framework 5.0 仍然支持我们的老朋友 JUnit! 在我写这篇文章的时候， JUnit 5 还只是发展到了 GA 版本。对于 JUnit4， Spring Framework 在未来还是要支持一段时间的。</p><h2 id="6依赖类库的更新"><a class="markdownIt-Anchor" href="#6依赖类库的更新"></a> 6：依赖类库的更新</h2><p>终止支持的类库：Portlet、Velocity、JasperReports、XMLBeans、JDO、Guava</p><p>支持的类库：Jackson 2.6+、EhCache 2.10+ / 3.0 GA、Hibernate 5.0+、JDBC 4.0+、XmlUnit 2.x+、OkHttp 3.x+、Netty 4.1+</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> Spring </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis 基础使用</title>
      <link href="/article/1bff3c65/"/>
      <url>/article/1bff3c65/</url>
      
        <content type="html"><![CDATA[<p><strong>前言：持久层技术解决方案</strong></p><ol><li><p>JDBC 技术：</p><ul><li>Connection</li><li>PreparedStatement</li><li>ResultSet</li></ul></li><li><p>Spring 的 JdbcTemplate：Spring 中对 JDBC的简单封装</p></li><li><p>Apache 的 DBUtils:它和 Spring 的 JDBCTemplate 很像，也是对 Jdbc 的简单封装</p></li></ol><p>以上这些都不是框架，JDBC 是规范，Spring 的 JDBCTemplate 和 Apache 的 DBUtils 都只是工具包</p><p>回想传统的 JDBC 代码，<strong>我们真正需要的是代码中的那条 sql 语句，其余代码都只是为了能使用 Java 去操作数据库执行这条 sql 语句</strong></p><h1 id="一-mybatis-框架概述"><a class="markdownIt-Anchor" href="#一-mybatis-框架概述"></a> 一、MyBatis 框架概述</h1><p><a href="http://www.mybatis.org/mybatis-3/zh/index.html">Mybatis</a> 是一个持久层框架，用 Java 编写的。它封装了 JDBC 操作中的很多细节，<strong>使开发者只需要关注 sql 语句本身</strong>， 而无需关注注册驱动，创建连接等繁杂过程</p><p><strong>原理：</strong> <u>mybatis 通过 XML 或注解的方式将要执行的各种 statement 配置起来，并通过 Java 对象和 statement 中 sql 的动态参数进行映射生成最终执行的 sql 语句，最后由 mybatis 框架执行 sql 并将结果映射为 Java 对象并返回。</u></p><p>它使用了 ORM 思想实现了结果集的封装。</p><blockquote><p><strong>ORM：</strong> Object Relational Mapping 对象关系映射</p></blockquote><p>简单的说：<strong>就是把数据库表和实体类及实体类的属性对应起来，让我们可以操作实体类就实现操作数据库表</strong></p><h1 id="二-原生-jdbc-回顾"><a class="markdownIt-Anchor" href="#二-原生-jdbc-回顾"></a> 二、原生 JDBC 回顾</h1><h2 id="1jdbc-代码"><a class="markdownIt-Anchor" href="#1jdbc-代码"></a> 1：JDBC 代码</h2><p><strong>数据库表：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;user&#96; (</span><br><span class="line">  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  &#96;username&#96; varchar(50) DEFAULT NULL,</span><br><span class="line">  &#96;password&#96; varchar(50) DEFAULT NULL,</span><br><span class="line">  &#96;sex&#96; varchar(2) DEFAULT NULL,</span><br><span class="line">  &#96;address&#96; varchar(50) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;5 DEFAULT CHARSET&#x3D;utf8;</span><br></pre></td></tr></table></figure><p><strong>实体类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    get&amp;set&amp;toString</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>JDBC 代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJDBC</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.注册驱动</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://192.168.159.129:3306/mybatis?useSSL=false&quot;</span>;</span><br><span class="line">        String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;Petrel12345&quot;</span>;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 2.获取连接</span></span><br><span class="line">            conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">            <span class="comment">// 3.SQL语句</span></span><br><span class="line">            String sql = <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line">            <span class="comment">// 4.创建statement对象: Statement , PreparedStatement</span></span><br><span class="line">            pst = conn.prepareStatement(sql);</span><br><span class="line">            <span class="comment">// 5.执行SQL语句，返回结果集</span></span><br><span class="line">            rs = pst.executeQuery();</span><br><span class="line">            <span class="comment">// 6.处理结果集</span></span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;<span class="comment">//判断是否有下一条记录，如果有，说明有一个User对象</span></span><br><span class="line">                User user = <span class="keyword">new</span> User();</span><br><span class="line">                <span class="comment">//获取ResultSet中的值，赋值给user对象</span></span><br><span class="line">                <span class="keyword">int</span> id = rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                user.setId(id);</span><br><span class="line">                user.setUsername(rs.getString(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">                user.setPassword(rs.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">                user.setSex(rs.getString(<span class="string">&quot;sex&quot;</span>));</span><br><span class="line">                user.setAddress(rs.getString(<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                <span class="comment">//添加到集合中</span></span><br><span class="line">                userList.add(user);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//7. 释放资源: 先开后关</span></span><br><span class="line">            <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    rs.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (pst != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    pst.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印结果</span></span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2存在的问题"><a class="markdownIt-Anchor" href="#2存在的问题"></a> 2：存在的问题</h2><ol><li>频繁创建和释放数据库的连接对象，造成资源的浪费。使用数据库连接池可以解决（c3p0、durid 等）</li><li>sql 语句硬编码(写死)，如果数据库发生改变，需要重新编译代码，再运行。可以把 sql 语句写到配置文件中</li><li>传参数硬编码，必须按照特定的顺序传参</li><li>处理结果集硬编码，如果改变了数据库，结果集的映射必须重新写，需要重新编译代码，再运行</li><li>连接的配置信息硬编码</li></ol><h1 id="三-自定义框架"><a class="markdownIt-Anchor" href="#三-自定义框架"></a> 三、自定义框架</h1><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120901.webp"/><h2 id="1环境准备"><a class="markdownIt-Anchor" href="#1环境准备"></a> 1：环境准备</h2><p>导入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- dom4j ==&gt; document for java --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- idea中使用dom4j必须引入此jar包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引入配置文件：配置文件只是为了方便查看，自定义框架时其实可以不用引入</p><ul><li><p>resources/SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://ip地址:3306/mybatisdb?characterEncoding=utf8&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 关联映射文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/petrel/mapper/UserMapper.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>resources/com/petrel/mapper/UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2配置文件类-configuration-mapper"><a class="markdownIt-Anchor" href="#2配置文件类-configuration-mapper"></a> 2：配置文件类 - Configuration + Mapper</h2><p>com.frame.domain.Configuration</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Configuration</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String driverClass;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 第一个泛型：String：唯一标识 mapperid</span></span><br><span class="line"><span class="comment">     * 第二个泛型：Mapper：存储 sql + resultType</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Mapper&gt; xmlMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    get&amp;set</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>com.frame.domain.Mapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mapper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String sql;</span><br><span class="line">    <span class="keyword">private</span> String resultType;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3框架入口接口-sqlsession-实现类-impl"><a class="markdownIt-Anchor" href="#3框架入口接口-sqlsession-实现类-impl"></a> 3：框架入口接口 - SqlSession + 实现类 impl</h2><p>com.frame.dao.SqlSession</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 框架入口，提供增删改查方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SqlSession</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行查询的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mapperId 唯一id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回对象的集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List <span class="title">selectList</span><span class="params">(String mapperId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>com.frame.dao.impl.SqlSessionImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment"> * SqlSession实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlSessionImpl</span> <span class="keyword">implements</span> <span class="title">SqlSession</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Configuration configuration;</span><br><span class="line">    <span class="keyword">private</span> Executor executor;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//外部传入Configuration对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SqlSessionImpl</span><span class="params">(Configuration configuration)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.configuration = configuration;</span><br><span class="line">        <span class="comment">//保证多个方法使用一个执行器</span></span><br><span class="line">        executor = <span class="keyword">new</span> Executor(configuration);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">selectList</span><span class="params">(String mapperId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//根据mapperId获取sql和resultType</span></span><br><span class="line">        Mapper mapper = configuration.getXmlMap().get(mapperId);</span><br><span class="line">        String sql = mapper.getSql();</span><br><span class="line">        String resultType = mapper.getResultType();</span><br><span class="line">        <span class="keyword">return</span> executor.executorQuery(sql,resultType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        executor.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4执行器-executor"><a class="markdownIt-Anchor" href="#4执行器-executor"></a> 4：执行器 - Executor</h2><p>com.frame.util.Executor</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Executor</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Configuration configuration;</span><br><span class="line">    <span class="keyword">private</span> Connection connection = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Executor</span><span class="params">(Configuration configuration)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.configuration = configuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * url driverClass username password</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">executorQuery</span><span class="params">(String sql, String resultType)</span> </span>&#123;</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="comment">// 1.加载驱动类</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(configuration.getDriverClass());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 2.获取连接</span></span><br><span class="line">            connection = DriverManager.getConnection(configuration.getUrl(), configuration.getUsername(),</span><br><span class="line">                    configuration.getPassword());</span><br><span class="line">            <span class="comment">// 3.创建statement对象</span></span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">// 4.执行sql，返回结果集</span></span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">// 5.处理结果集</span></span><br><span class="line">            <span class="comment">// 5.1.通过结果集获取所有列名</span></span><br><span class="line">            List&lt;String&gt; columnNames = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="comment">// 获取结果集的元数据：修饰代码的代码--元注解，修饰结果集的代码--元数据</span></span><br><span class="line">            ResultSetMetaData metaData = resultSet.getMetaData();</span><br><span class="line">            <span class="comment">// 获取列的个数</span></span><br><span class="line">            <span class="keyword">int</span> columnCount = metaData.getColumnCount();</span><br><span class="line">            <span class="comment">// 根据列的索引得到列名 metaData.getColumnName()，列的索引从1开始</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= columnCount; i++) &#123;</span><br><span class="line">                String columnName = metaData.getColumnName(i);</span><br><span class="line">                columnNames.add(columnName);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 通过全限定类名创建对象：获取字节码文件--反射创建对象</span></span><br><span class="line">            Class aClass = Class.forName(resultType);</span><br><span class="line">            <span class="comment">// resultSet.next() 判断是否有下一个元素，如果有就应该创建一个新的对象</span></span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="comment">// 创建一个对象</span></span><br><span class="line">                Object o = aClass.newInstance();</span><br><span class="line">                <span class="comment">// 给对象赋值</span></span><br><span class="line">                <span class="comment">// 获取某列对应的set方法，执行set方法进行赋值</span></span><br><span class="line">                Method[] methods = aClass.getMethods();</span><br><span class="line">                <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (String columnName : columnNames) &#123;</span><br><span class="line">                        <span class="comment">// 每一个列名与每一个方法进行比较，找到某列对象的set方法</span></span><br><span class="line">                        <span class="keyword">if</span> ((<span class="string">&quot;set&quot;</span> + columnName).equalsIgnoreCase(method.getName())) &#123;</span><br><span class="line">                            <span class="comment">// 这样method就是需要的set方法</span></span><br><span class="line">                            <span class="comment">// 属性对应的值</span></span><br><span class="line">                            Object columnValue = resultSet.getObject(columnName);</span><br><span class="line">                            <span class="comment">// 执行set方法 invoke(要执行的对象，方法的参数)</span></span><br><span class="line">                            method.invoke(o, columnValue);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 添加到集合中</span></span><br><span class="line">                list.add(o);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (preparedStatement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                preparedStatement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5工厂类-sqlsessionfactory-构建者-builder"><a class="markdownIt-Anchor" href="#5工厂类-sqlsessionfactory-构建者-builder"></a> 5：工厂类 - SqlSessionFactory + 构建者 - Builder</h2><p>com.frame.factory.SqlSessionFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlSessionFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 配置文件输入流</span></span><br><span class="line">    <span class="keyword">private</span> InputStream inputStream;</span><br><span class="line">    <span class="keyword">private</span> Configuration configuration;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">SqlSessionFactory</span><span class="params">(InputStream inputStream)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.inputStream=inputStream;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSession <span class="title">openSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        configuration = <span class="keyword">new</span> Configuration();</span><br><span class="line">        <span class="comment">// 给configuration赋值</span></span><br><span class="line">        loadConfiguration();</span><br><span class="line">        SqlSession sqlSession = <span class="keyword">new</span> SqlSessionImpl(configuration);</span><br><span class="line">        <span class="keyword">return</span> sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadConfiguration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// dom4j解析时，可以直接解析inputStream</span></span><br><span class="line">        <span class="comment">// 1.创建解析对象</span></span><br><span class="line">        SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        Document document = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 2.获取文档对象：根据字节输入流获取文档对象</span></span><br><span class="line">            document = saxReader.read(inputStream);</span><br><span class="line">            <span class="comment">// 3.获取根节点</span></span><br><span class="line">            Element rootElement = document.getRootElement();</span><br><span class="line">            <span class="comment">// 4.获取 property 节点</span></span><br><span class="line">            <span class="comment">// selectNodes(&quot;//property&quot;)，能获取文档中所有的property，但必须加&#x27;//&#x27;，不加只能获取到根节点下的子节点property</span></span><br><span class="line">            List&lt;Element&gt; list = rootElement.selectNodes(<span class="string">&quot;//property&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (Element element : list) &#123;</span><br><span class="line">                <span class="comment">// attributeValue：获取指定属性的属性值</span></span><br><span class="line">                String name = element.attributeValue(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                String value = element.attributeValue(<span class="string">&quot;value&quot;</span>);</span><br><span class="line">                <span class="comment">// 判断是哪一个属性</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;driver&quot;</span>.equals(name)) &#123;</span><br><span class="line">                    configuration.setDriverClass(value);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;url&quot;</span>.equals(name)) &#123;</span><br><span class="line">                    configuration.setUrl(value);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;username&quot;</span>.equals(name)) &#123;</span><br><span class="line">                    configuration.setUsername(value);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;password&quot;</span>.equals(name)) &#123;</span><br><span class="line">                    configuration.setPassword(value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DocumentException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 5.加载映射文件</span></span><br><span class="line">        <span class="comment">// 获取根节点对象</span></span><br><span class="line">        Element rootElement = document.getRootElement();</span><br><span class="line">        <span class="comment">// 得到 mapper 节点，</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            element(name):得到根节点下第一个叫name的节点</span></span><br><span class="line"><span class="comment">            elements(name):得到根节点下所有叫name的节点</span></span><br><span class="line"><span class="comment">            elements():得到根节点下所有节点</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Element mappers = rootElement.element(<span class="string">&quot;mappers&quot;</span>);</span><br><span class="line">        List&lt;Element&gt; mapperList = mappers.elements(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Element element : mapperList) &#123;</span><br><span class="line">            String path = element.attributeValue(<span class="string">&quot;resource&quot;</span>);</span><br><span class="line">            loadXmlConfiguration(path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取映射文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadXmlConfiguration</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 根据资源路径获取输入流对象</span></span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(path);</span><br><span class="line">        <span class="comment">// 创建解析对象</span></span><br><span class="line">        SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取文档对象</span></span><br><span class="line">            Document document = saxReader.read(inputStream);</span><br><span class="line">            <span class="comment">// 获取根节点</span></span><br><span class="line">            Element rootElement = document.getRootElement();</span><br><span class="line">            <span class="comment">// 获取根节点的 namespace 属性值</span></span><br><span class="line">            String namespace = rootElement.attributeValue(<span class="string">&quot;namespace&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取根节点中的所有子节点</span></span><br><span class="line">            List&lt;Element&gt; elements = rootElement.elements();</span><br><span class="line">            <span class="comment">// 遍历每一个节点，获取 id、resultType、sql 语句</span></span><br><span class="line">            <span class="keyword">for</span> (Element element : elements) &#123;</span><br><span class="line">                String id = element.attributeValue(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                String resultType = element.attributeValue(<span class="string">&quot;resultType&quot;</span>);</span><br><span class="line">                String sql = element.getTextTrim();</span><br><span class="line">                <span class="comment">// key: namespace + id</span></span><br><span class="line">                <span class="comment">// value: mapper = sql + resultType</span></span><br><span class="line">                String key = namespace + <span class="string">&quot;.&quot;</span> + id;</span><br><span class="line">                Mapper value = <span class="keyword">new</span> Mapper();</span><br><span class="line">                value.setSql(sql);</span><br><span class="line">                value.setResultType(resultType);</span><br><span class="line">                configuration.getXmlMap().put(key,value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DocumentException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>com.frame.factory.SqlSessionFactoryBuilder</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构建者模式：更关注创建细节</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlSessionFactoryBuilder</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过配置文件输入流创建 SqlSessionFactory 对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputStream</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">build</span><span class="params">(InputStream inputStream)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SqlSessionFactory(inputStream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过配置文件路径创建 SqlSessionFactory 对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">build</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(path);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SqlSessionFactory(inputStream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 没有参数创建 SqlSessionFactory 对象</span></span><br><span class="line"><span class="comment">     * 假设某位置有 sqlMapConfig</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String path = <span class="string">&quot;SqlMapConfig.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(path);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SqlSessionFactory(inputStream);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6测试"><a class="markdownIt-Anchor" href="#6测试"></a> 6：测试</h2><p>将自定义的项目打一个 jar 包，创建一个新的测试项目，引入</p><p>将两个配置文件引入</p><p>resources/SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://ip地址:3306/mybatisdb?characterEncoding=utf8&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 关联映射文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/petrel/mapper/UserMapper.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>resources/com/petrel/mapper/UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实体类 User 同回顾 JDBC</p><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCustom</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取配置文件输入流对象</span></span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建 SqlSessionFactoryBuilder 对象</span></span><br><span class="line">        SqlSessionFactoryBuilder sqlSessionFactoryBuilder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        <span class="comment">// 创建 SqlSessionFactory 对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = sqlSessionFactoryBuilder.build(inputStream);</span><br><span class="line">        <span class="comment">// 创建 SqlSession 对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">// 执行 sql</span></span><br><span class="line">        List list = sqlSession.selectList(<span class="string">&quot;com.petrel.dao.UserDao.findAll&quot;</span>);</span><br><span class="line">        <span class="comment">// 遍历结果集</span></span><br><span class="line">        <span class="keyword">for</span> (Object o : list) &#123;</span><br><span class="line">            System.out.println(o);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-mybatis-入门"><a class="markdownIt-Anchor" href="#四-mybatis-入门"></a> 四、Mybatis 入门</h1><h2 id="1入门程序"><a class="markdownIt-Anchor" href="#1入门程序"></a> 1：入门程序</h2><p>在<a href="http://www.mybatis.org/mybatis-3/zh/index.htm">官网</a>中给我们提供了实用的文档，包括入门程序等。入门程序其实和上边自己写的差不多</p><p>1：导入 jar 包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2：配置文件</p><ul><li><p>SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置环境：可以配置多个环境，default：配置某一个环境的唯一标识，表示默认使用哪个环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 配置连接信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://ip地址:3306/mybatis?characterEncoding=utf8&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;用户名&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;密码&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 映射配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/petrel/mapper/UserMapper.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 目前来看:namespace与id可以随便写,因为它的主要作用是用来确定相应的sql,但是后边使用代理dao的方式进行开发就不能乱写了,详见dao开发--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>3：实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    get&amp;set&amp;toString</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4：测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取配置文件输入流对象</span></span><br><span class="line">InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line"><span class="comment">// 创建 SqlSessionFactoryBuilder 对象</span></span><br><span class="line">SqlSessionFactoryBuilder sqlSessionFactoryBuilder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line"><span class="comment">// 创建 SqlSessionFactory 对象</span></span><br><span class="line">SqlSessionFactory sqlSessionFactory = sqlSessionFactoryBuilder.build(inputStream);</span><br><span class="line"><span class="comment">// 创建 SqlSession 对象</span></span><br><span class="line">SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line"><span class="comment">// 执行 sql</span></span><br><span class="line">List list = sqlSession.selectList(<span class="string">&quot;com.petrel.dao.UserDao.findAll&quot;</span>);</span><br><span class="line"><span class="comment">// 遍历结果集</span></span><br><span class="line"><span class="keyword">for</span> (Object o : list) &#123;</span><br><span class="line">    System.out.println(o);</span><br><span class="line">&#125;</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><h2 id="2mybatis-的核心"><a class="markdownIt-Anchor" href="#2mybatis-的核心"></a> 2：Mybatis 的核心</h2><ol><li><p><strong>mybatis 配置文件</strong>，包括 Mybatis <strong>全局配置</strong> 文件和 Mybatis <strong>映射配置</strong> 文件</p><ul><li>全局配置文件配置了数据源、事务等信息</li><li>映射文件配置了 SQL 执行相关的信息</li></ul></li><li><p>mybatis 通过读取配置文件信息(全局配置文件和映射文件)，构造出 <strong>SqlSessionFactory</strong>，即会话工厂</p></li><li><p>通过 SqlSessionFactory，可以创建 <strong>SqlSession</strong> 即会话。 Mybatis 是通过 SqlSession 来操作数据库的。</p></li><li><p>SqlSession 本身不能直接操作数据库，它是通过底层的 <strong>Executor</strong> 执行器接口来操作数据库的。Executor 接口有两个实现类，一个是普通执行器，一个是<strong>缓存执行器（默认）</strong></p></li><li><p>Executor 执行器要处理的 SQL 信息是封装到一个底层对象 <strong>MappedStatement</strong> 中。该对象包括：SQL 语句、输入参数映射信息、输出结果集映射信息。</p><p>其中输入参数和输出结果的映射类型包括：<strong>HashMap 集合对象、POJO 对象类型</strong>。</p></li></ol><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120912.webp"/><p><strong>梳理MyBatis的设计思路</strong></p><ul><li><p>创建SqlSessionFactory实例</p></li><li><p>实例化过程中，加载配置文件创建configuration对象</p></li><li><p>通过factory创建SqlSession</p></li><li><p>通过SqlSession获取mapper接口动态代理</p></li><li><p>动态代理回调sqlsession中某查询方法</p></li><li><p>SqlSession将查询方法转发给Executor</p></li><li><p>Executor基于JDBC访问数据库获取数据</p></li><li><p>Executor通过反射将数据转换成POJO并返回；给SqlSession</p></li><li><p>将数据返回给调用者</p></li></ul><p><strong>MyBatis三大核心阶段</strong></p><p><strong>初始化阶段</strong>：读取XML配置文件和注解中的配置信息，创建解析对象，并完成各个模块的初始化工作。就是把我们的配置文件加载到内存里面去。在sqlSession初始化的时候加载到内存中去的。</p><p>**代理阶段：**封装iBatis的编程模型，使用mapper接口开发的初始化工作；</p><p>**数据读写阶段：**通过SqlSession完成SQL的解析，参数的映射，SQL的执行，结果的反射解析过程</p><h2 id="3mybatis-实现-crud"><a class="markdownIt-Anchor" href="#3mybatis-实现-crud"></a> 3：Mybatis 实现 CRUD</h2><h3 id="31根据-id-查询"><a class="markdownIt-Anchor" href="#31根据-id-查询"></a> 3.1：根据 id 查询</h3><p>映射配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    根据 id 查询</span></span><br><span class="line"><span class="comment">    parameterType：参数类型</span></span><br><span class="line"><span class="comment">    #&#123;&#125;：引用参数</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">SqlSession sqlSession = factory.openSession();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * selectList：返回一个 List 集合</span></span><br><span class="line"><span class="comment"> * selectOne：返回一个对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">User user = sqlSession.selectOne(<span class="string">&quot;com.petrel.dao.UserDao.findById&quot;</span>,<span class="number">1</span>);</span><br><span class="line">System.out.println(user);</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><h3 id="32增加"><a class="markdownIt-Anchor" href="#32增加"></a> 3.2：增加</h3><p>映射配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 增加 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;save&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">    insert into user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">SqlSession sqlSession = factory.openSession();</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">user.setAddress(<span class="string">&quot;南阳&quot;</span>);</span><br><span class="line">sqlSession.insert(<span class="string">&quot;com.petrel.dao.UserDao.save&quot;</span>, user);</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><p>执行以上代码后，查看数据库发现，数据并没有新增成功。</p><p>为了便于查看这一过程，引入 log4j 日志：pom.xml 中新添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Log4j 日志：记录程序的执行过程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 resources 目录下新建 <code>log4j.properties</code> 内容如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set root category priority to INFO and its only appender to CONSOLE.</span></span><br><span class="line"><span class="comment">#log4j.rootCategory=INFO, CONSOLE  debug   info   warn error fatal</span></span><br><span class="line"><span class="meta">log4j.rootCategory</span>=<span class="string">debug, CONSOLE, LOGFILE, info</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the enterprise logger category to FATAL and its only appender to CONSOLE.</span></span><br><span class="line"><span class="meta">log4j.logger.org.apache.axis.enterprise</span>=<span class="string">FATAL, CONSOLE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CONSOLE is set to be a ConsoleAppender using a PatternLayout.</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE.layout.ConversionPattern</span>=<span class="string">%d&#123;ISO8601&#125; %-6r [%15.15t] %-5p %30.30c %x - %m\n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LOGFILE is set to be a File appender using a PatternLayout.</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.File</span>=<span class="string">d://develop//Log4j//log4j.log</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.layout.ConversionPattern</span>=<span class="string">%d&#123;ISO8601&#125; %-6r [%15.15t] %-5p %30.30c %x - %m\n</span></span><br></pre></td></tr></table></figure><p>此时再运行测试程序发现日志中有这样一句话：关闭自动提交</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Setting autocommit to false on JDBC Connection&quot;</span><br></pre></td></tr></table></figure><p>运行结果：回滚事务，所以数据并没有添加到数据库中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Rolling back JDBC Connection&quot;</span><br></pre></td></tr></table></figure><p>问题找到了，如何解决？在添加完成后手动提交事务即可，所以测试代码应为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">SqlSession sqlSession = factory.openSession();</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">user.setAddress(<span class="string">&quot;南阳&quot;</span>);</span><br><span class="line">sqlSession.insert(<span class="string">&quot;com.petrel.dao.UserDao.save&quot;</span>, user);</span><br><span class="line"><span class="comment">// 提交事务：只要修改了数据库，就要提交事务</span></span><br><span class="line">sqlSession.commit();</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><p>此时日志中结果记录为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 提交事务</span><br><span class="line">&quot;Committing JDBC Connection&quot;</span><br><span class="line"># 还原状态</span><br><span class="line">&quot;Resetting autocommit to true&quot;</span><br></pre></td></tr></table></figure><p>刷线数据库发现数据添加成功</p><h3 id="33更新"><a class="markdownIt-Anchor" href="#33更新"></a> 3.3：更新</h3><p>映射配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 修改 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">    update user set username=#&#123;username&#125;,password=#&#123;password&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125;</span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">SqlSession sqlSession = factory.openSession();</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setId(<span class="number">6</span>);</span><br><span class="line">user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">user.setAddress(<span class="string">&quot;南阳市&quot;</span>);</span><br><span class="line">sqlSession.update(<span class="string">&quot;com.petrel.dao.UserDao.update&quot;</span>, user);</span><br><span class="line">sqlSession.commit();</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><h3 id="34删除"><a class="markdownIt-Anchor" href="#34删除"></a> 3.4：删除</h3><p>映射配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 删除 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class="line">    delete from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">SqlSession sqlSession = factory.openSession();</span><br><span class="line">sqlSession.delete(<span class="string">&quot;com.petrel.dao.UserDao.delete&quot;</span>, <span class="number">13</span>);</span><br><span class="line">sqlSession.commit();</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><h3 id="35模糊查询"><a class="markdownIt-Anchor" href="#35模糊查询"></a> 3.5：模糊查询</h3><p>查询名字中第二个字为 “楠” 的数据</p><p>映射配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 模糊查询 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByUserName&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line">    select * from user where username like #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">SqlSession sqlSession = factory.openSession();</span><br><span class="line">List&lt;User&gt; users=sqlSession.selectList(<span class="string">&quot;com.petrel.dao.UserDao.findByUserName&quot;</span>, <span class="string">&quot;_楠%&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><p>但是这种方式不便于传递参数，为什么呢？因为这个查询方法肯定是要给别人调用的，别人如何知道方法的参数需要加 “_”、&quot;%&quot; 这样的占位符。所以我们需要在 SQL 中自己手动配置：</p><p>映射配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 模糊查询 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByUserName&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line">    select * from user where username like &quot;_&quot;#&#123;username&#125;&quot;%&quot;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; users=sqlSession.selectList(<span class="string">&quot;com.petrel.dao.UserDao.findByUserName&quot;</span>, <span class="string">&quot;楠&quot;</span>);</span><br></pre></td></tr></table></figure><p>但是这样 SQL 又变得不好看，所以可是使用 <code>$&#123;&#125;</code> 这种方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByUserName&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line">    select * from user where username like &quot;_$&#123;value&#125;%&quot;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-与-的区别"><a class="markdownIt-Anchor" href="#4-与-的区别"></a> 4：<code>#&#123;&#125;</code> 与 <code>$&#123;&#125;</code> 的区别</h2><p>因为引入 log4j，从日志打印中我们可以看到所执行的 SQL，对比发现：</p><ul><li><strong><code>#&#123;&#125;</code>：</strong> 使用的是预编译 SQL，参数使用 ? 占位符代替，可以防止 SQL 注入。它还可以进行自动类型转换</li><li><strong><code>$&#123;&#125;</code>：</strong> 使用的字符串拼接，直接将参数拼接到 SQL 中，不可以防止 SQL 注入。不能进行自动类型转换</li></ul><p>一句话：<code>#&#123;&#125;</code> 是占位符，<code>$&#123;&#125;</code> 是拼接符</p><p><strong>参数类型与 {} 内的值的关系：</strong></p><ul><li>简单类型 (基本数据类型与 String)：<code>#&#123;&#125;</code> 可以随便写、<code>$&#123;&#125;</code> 只能写 value</li><li>pojo 类型：都是根据属性名引用</li></ul><h1 id="五-dao-开发"><a class="markdownIt-Anchor" href="#五-dao-开发"></a> 五、Dao 开发</h1><p>开发时一般使用三层架构进行开发，接下来就使用 Mybatis 进行 Dao 的开发，通常有传统 Dao 开发 (自己写 dao接口实现类) 和 Mapper 动态代理开发两种方式。</p><h2 id="1sqlsession-的使用分析"><a class="markdownIt-Anchor" href="#1sqlsession-的使用分析"></a> 1：SqlSession 的使用分析</h2><p>在进行 Dao 开发之前，先分析一下，SqlSession 的使用范围：</p><ul><li><p>SqlSessionFactoryBuilder： 用于创建 SqlSessionFacoty。SqlSessionFacoty 一旦创建完成就不需要 SqlSessionFactoryBuilder 了，所以可以将SqlSessionFactoryBuilder 当成一个工具类使用。最佳使用范围是方法范围即方法体内局部变量。</p></li><li><p>SqlSessionFactory：是一个接口，接口中定义了 openSession 的不同重载方法。SqlSessionFactory 的最佳使用范围是整个应用运行期间，一旦创建后可以重复使用，通常以单例模式管理 SqlSessionFactory。</p></li><li><p>SqlSession：是一个面向用户的接口， sqlSession 中定义了数据库操作方法。每个线程都应该有它自己的SqlSession实例。SqlSession 的实例不能共享使用，它也是线程不安全的（因为SqlSession底层对应的是Connection连接）。因此最佳的范围是请求或方法范围。</p></li></ul><h2 id="2传统-dao-开发"><a class="markdownIt-Anchor" href="#2传统-dao-开发"></a> 2：传统 Dao 开发</h2><p>主配置文件：resources/SqlMapConfig.xml、log4j 同原来的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置环境：可以配置多个环境，default：配置某一个环境的唯一标识，表示默认使用哪个环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 配置连接信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://192.168.159.131:3306/mybatis?characterEncoding=utf8&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Petrel12345&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 映射配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/petrel/mapper/UserMapper.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>映射配置文件：resources/com/petrel/mapper/UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此时mapper的namespace和增删改标签的id属性值可以随便写，因为他们的作用是作为map的key找到相应的sql语句--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;userMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 查询全部 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 保存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;save&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        insert into user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 修改 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        update user set username = #&#123;username&#125;, password = #&#123;password&#125;, sex = #&#123;sex&#125;, address = #&#123;address&#125;</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 删除 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实体类：com.petrel.domain.User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">get&amp;set&amp;toString</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dao 接口：com.petrel.dao.UserDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dao 接口实现类：com.petrel.dao.impl.UserDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 所有方法公用的 factory 对象，属于应用级别</span></span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserDaoImpl</span><span class="params">(SqlSessionFactory sqlSessionFactory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sqlSessionFactory = sqlSessionFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        List&lt;User&gt; users = sqlSession.selectList(<span class="string">&quot;userMapper.findAll&quot;</span>);</span><br><span class="line">        sqlSession.close();</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        sqlSession.insert(<span class="string">&quot;userMapper.save&quot;</span>, user);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        sqlSession.update(<span class="string">&quot;userMapper.update&quot;</span>,user);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        sqlSession.delete(<span class="string">&quot;userMapper.delete&quot;</span>,id);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDao</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;MybatisConfig.xml&quot;</span>);</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        UserDao userDao = <span class="keyword">new</span> UserDaoImpl(sqlSessionFactory);</span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span></span>&#123;</span><br><span class="line">        UserDao userDao = <span class="keyword">new</span> UserDaoImpl(sqlSessionFactory);</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">        user.setAddress(<span class="string">&quot;南阳&quot;</span>);</span><br><span class="line">        userDao.save(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        UserDao userDao = <span class="keyword">new</span> UserDaoImpl(sqlSessionFactory);</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">9</span>);</span><br><span class="line">        user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">        user.setAddress(<span class="string">&quot;南阳市&quot;</span>);</span><br><span class="line">        userDao.update(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        UserDao userDao = <span class="keyword">new</span> UserDaoImpl(sqlSessionFactory);</span><br><span class="line">        userDao.delete(<span class="number">9</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3动态代理-dao-开发"><a class="markdownIt-Anchor" href="#3动态代理-dao-开发"></a> 3：动态代理 Dao 开发</h2><p>Mapper 动态代理开发，只需写 Mapper 接口（相当于Dao接口），Mybatis 框架会根据接口创建接口的动态代理对象，代理对象的方法同 Dao 接口实现类中的方法。</p><p>Mapper 接口开发需要遵循以下 4 个规范 ：</p><ul><li>Mapper 映射文件中的 namespace 与 mapper 接口的类路径相同</li><li>Mapper 接口方法名和 Mapper 映射文件中定义的每个 Sql 的 id 相同</li><li>Mapper 接口方法的输入参数类型和 Mapper 映射文件中定义的每个 Sql 的 ParameterType 的类型相同</li><li>Mapper 接口方法的输出参数类型和 Mapper 映射文件中定义的每个 Sql 的 resultType 的类型相同</li></ul><p>主配置文件、log4j 配置文件、Mapper 接口、实体类和传统 dao 的相同，映射配置文件，和测试时代码不同。</p><p>映射配置文件：UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    此时就不能随便写了</span></span><br><span class="line"><span class="comment">    namespace：必须是对应接口的全限定类名</span></span><br><span class="line"><span class="comment">    select、insert、update、delete四个标签id：必须对应接口的方法名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;save&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        insert into user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span>&gt;</span></span><br><span class="line">        update user set username = #&#123;username&#125;, password = #&#123;password&#125;, sex = #&#123;sex&#125;, address = #&#123;address&#125;</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMyBatisProxy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;MybatisConfig.xml&quot;</span>);</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">// 获取 dao 接口的动态代理对象</span></span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">        user.setAddress(<span class="string">&quot;南阳&quot;</span>);</span><br><span class="line">        userDao.save(user);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">10</span>);</span><br><span class="line">        user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">        user.setAddress(<span class="string">&quot;南阳市&quot;</span>);</span><br><span class="line">        userDao.update(user);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        userDao.delete(<span class="number">10</span>);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六-核心配置文件详解"><a class="markdownIt-Anchor" href="#六-核心配置文件详解"></a> 六、核心配置文件详解</h1><p>打开核心配置文件的 dtd 约束文件，发现标签和顺序如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configuration (properties?, settings?, typeAliases?, typeHandlers?, objectFactory?, objectWrapperFactory?, reflectorFactory?, plugins?, environments?, databaseIdProvider?, mappers?)</span><br></pre></td></tr></table></figure><p>dtd 约束的标点符号由以下作用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">? : 一个或者零个</span><br><span class="line">| : 任选其一</span><br><span class="line">+ : 最少一个</span><br><span class="line">* : 零个或多个</span><br><span class="line">, : 必须按照此顺序编写</span><br></pre></td></tr></table></figure><p>标签作用如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">properties</span>: <span class="string">配置属性(学习)</span></span><br><span class="line"><span class="attr">settings</span>: <span class="string">全局配置：缓存，延迟加载</span></span><br><span class="line"><span class="attr">typeAliases</span>: <span class="string">类型别名(学习)</span></span><br><span class="line"><span class="attr">typeHandlers</span>: <span class="string">类型转换(操作)(了解)</span></span><br><span class="line"><span class="attr">objectFactory</span>: <span class="string">objectWrapperFactory?,  reflectorFactory?, </span></span><br><span class="line"><span class="attr">plugins</span>: <span class="string">插件,如分页插件</span></span><br><span class="line"><span class="attr">environments</span>: <span class="string">环境配置（数据源）</span></span><br><span class="line"><span class="attr">databaseIdProvider</span></span><br><span class="line"><span class="attr">mappers</span>: <span class="string">引入映射配置文件(学习)</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入外部资源文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- settings:全局配置(均为可选选项) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开启全局的延迟加载,默认false --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开启二级缓存的支持 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 别名,如果是注解可以不配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置环境：可以配置多个环境，default：配置某一个环境的唯一标识，表示默认使用哪个环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 配置连接信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverClass&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 映射配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">xml:&lt;mapper resource=&quot;UserMapper.xml&quot;/&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注解:扫描包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1properties-引外部属性文件"><a class="markdownIt-Anchor" href="#1properties-引外部属性文件"></a> 1：properties - 引外部属性文件</h2><p>可以直接写 properties 标签内，也可以引入外部资源文件</p><ul><li><p>直接写在 properties 标签内</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://ip:端口/数据库?characterEncoding=utf8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;用户名&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;密码&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            事务管理器:</span></span><br><span class="line"><span class="comment">            JDBC: 事务管理基于底层连接 sqlSession提供 commint rolleback</span></span><br><span class="line"><span class="comment">                MANAGED: 管理者 管理器  准备托管了给别人  比如spring框架</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置连接信息 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>引入外部资源文件</p><p>resources 目录下新建 jdbc.properties 文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://ip:端口/数据库?characterEncoding=utf8</span></span><br><span class="line"><span class="meta">jdbc.user</span>=<span class="string">用户名</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">密码</span></span><br></pre></td></tr></table></figure><p>核心配置文件中引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置连接信息 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverClass&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2typealiases-类型别名"><a class="markdownIt-Anchor" href="#2typealiases-类型别名"></a> 2：typeAliases - 类型别名</h2><p>主配置文件中配置了别名，映射配置文件中的 resultType 等就不用写全限定类名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 类型别名映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 单个别名映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.petrel.domain.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是如果有很多类就不好搞了，要写很多</p><p>所以可以写包，这样包里的类都会起别名 (自动配置的类型别名不区分大小写)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.petrel.domain&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Mybatis 对 Java 中的基本类型及一些如 String、Map、Date 等已经起了别名，用的时候直接写就可以 (不用写全限定类名，大小写无所谓)，具体可参考 <code>org.apache.ibatis.type.TypeAliasRegistry</code> 的源码</p><h2 id="3environments-数据库环境"><a class="markdownIt-Anchor" href="#3environments-数据库环境"></a> 3：environments - 数据库环境</h2><p>Mybatis 中将数据源 dataSource 分为以下几类：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120922.webp" alt="" /></p><ul><li>JNDI 使用JNDI实现的数据源</li><li>POOLED 使用连接池的数据源</li><li>UNPOOLED 不使用连接池的数据源</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置环境：可以配置多个环境，default：配置某一个环境的唯一标识，表示默认使用哪个环境 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- id: 环境唯一的标志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 事务管理：jdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            dataSource: 数据源（数据库连接池）配置</span></span><br><span class="line"><span class="comment">            type=&quot;POOLED&quot;：数据源的类型配置</span></span><br><span class="line"><span class="comment">                  POOLED：使用mybatis的自带数据源配置</span></span><br><span class="line"><span class="comment">                  UNPOOLED：不使用数据源配置，使用Connection操作数据库</span></span><br><span class="line"><span class="comment">                  JNDI：JNDI服务 数据源配置</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://ip:3306/数据库&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;用户名&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;密码&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4mappers-引入映射配置文件"><a class="markdownIt-Anchor" href="#4mappers-引入映射配置文件"></a> 4：Mappers - 引入映射配置文件</h2><p>引入映射配置文件有下列几种方式：</p><ul><li><p>通过相对路径引入配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 方式一：通过相对路径引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/petrel/mapper/UserMapper.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过绝对路径引入配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 方式二：通过绝对路径引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;file:///D:develop/mybatis_demo/com/petrel/mapper/UserMapper.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过 Dao 接口引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 方式三：通过dao接口引入</span></span><br><span class="line"><span class="comment">     前提：必须在同一个包中(指的是编译后)</span></span><br><span class="line"><span class="comment">          文件名称必须一致</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.petrel.dao.UserDao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过包引入 - <strong>常用</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 方式四：引入一个包中的所有dao接口</span></span><br><span class="line"><span class="comment"> 前提：必须在同一个包中(指的是编译后)</span></span><br><span class="line"><span class="comment">          文件名称必须一致</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.petrel.dao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="七-输入输出参数类型深入"><a class="markdownIt-Anchor" href="#七-输入输出参数类型深入"></a> 七、输入输出参数类型深入</h1><h2 id="1输入类型-parametertype"><a class="markdownIt-Anchor" href="#1输入类型-parametertype"></a> 1：输入类型 - parameterType</h2><p>输入参数：</p><ul><li><p><strong>简单类型 (基本数据类型 + String 类型) ：</strong> <code>#&#123;&#125;</code>：名称随便、<code>$&#123;&#125;</code>：<code>$&#123;value&#125;</code></p></li><li><p><strong>pojo 类型：</strong> <code>#&#123;&#125;</code>、<code>$&#123;&#125;</code>：属性名引用</p></li><li><p><strong>包装对象类型 (Pojo 类中的一个属性是另外一个 Pojo) ：</strong> <code>#&#123;属性.属性名&#125;</code></p><blockquote><p>为什么使用包装对象？</p><p>在平时的开发中，不一定就是单纯的对一个实体进行增删改查，例如完成用户信息的综合查询，有时需要传入查询条件很复杂，可能包括用户信息、关联表的其它信息等。针对这种需求，在 Mybatis 中可以使用自定义的包装类型的 Pojo，在包装类型的 Pojo 中将复杂的查询条件包装进去。</p></blockquote></li><li><p><strong>Map 集合：</strong> <code>#&#123;key&#125;</code></p></li><li><p><strong>多个参数：</strong> <code>#&#123;param1&#125;</code>、<code>#&#123;param2&#125;</code> … <code>#&#123;paramN&#125;</code></p></li></ul><h2 id="2输出结果类型-resulttype-resultmap"><a class="markdownIt-Anchor" href="#2输出结果类型-resulttype-resultmap"></a> 2：输出结果类型 - resultType - resultMap</h2><p>输出参数：</p><ul><li><strong>简单类型：</strong> 直接写类型</li><li><strong>pojo 类型：</strong> 没有配置过别名写全限定类名，配置过就写别名</li><li><strong>pojo 列表：</strong> 集合内存储数据的类型，不是 list</li></ul><p>resultType 可以指定将查询结果映射为 Pojo，但需要 Pojo 的属性名和 Sql 查询的列名一致方可映射成功。</p><p>如果 Sql 查询字段名和 Pojo 的属性名不一致，可以通过 resultMap 将字段名和属性名作一个对应关系 。</p><p>resultMap 实质上还需要将查询结果映射到 Pojo 对象中。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        id标签：一般写主键的映射</span></span><br><span class="line"><span class="comment">        result标签：写其他映射</span></span><br><span class="line"><span class="comment">        property：实体类属性名</span></span><br><span class="line"><span class="comment">        column：数据库表列名</span></span><br><span class="line"><span class="comment">        属性名与列名相同的可以不配，不同一定要配</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 记得这里写resultMap别再写resultType了！！！ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="八-mybatis-中的事务"><a class="markdownIt-Anchor" href="#八-mybatis-中的事务"></a> 八、Mybatis 中的事务</h1><h2 id="1jdbc-事务控制回顾"><a class="markdownIt-Anchor" href="#1jdbc-事务控制回顾"></a> 1：JDBC 事务控制回顾</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://ip:3306/数据库&quot;</span>;</span><br><span class="line">String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">String password = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    conn = DriverManager.getConnection(url, username ,password);</span><br><span class="line">    <span class="comment">//事务1 ：设置事务手动提交（不能自动提交）</span></span><br><span class="line">    conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">    String sql1 = <span class="string">&quot;insert into ......&quot;</span>;</span><br><span class="line">    String sql2 = <span class="string">&quot;insert into ......&quot;</span>;</span><br><span class="line">    pst = conn.prepareStatement(sql1);</span><br><span class="line">    pst.executeUpdate();</span><br><span class="line">    pst = conn.prepareStatement(sql2);</span><br><span class="line">    pst.executeUpdate();</span><br><span class="line">    <span class="comment">//事务2：提交事务</span></span><br><span class="line">    conn.commit();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">    <span class="comment">//事务3：出现异常，回滚</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        conn.rollback();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">        e1.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">//事务4： 还原状态，设置事务为自动提交</span></span><br><span class="line">    <span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(rs != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            rs.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pst != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pst.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2mybatis-中事务控制"><a class="markdownIt-Anchor" href="#2mybatis-中事务控制"></a> 2：Mybatis 中事务控制</h2><p>Mybatis 中是通过 sqlsession 对象的 commit 方法和 rollback 方法实现事务的提交和回滚</p><p>其实 SqlSessionFactory 中的 openSession() 有许多重载的方式，可以使用 <code>SqlSession openSession(boolean autoCommit);</code> 时传入 true 即可开启自动提交</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(<span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>));</span><br><span class="line"><span class="comment">// 开启自动提交</span></span><br><span class="line">sqlSession = sqlSessionFactory.openSession(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure><p>一般情况下，增删改都是需要手动管理事务的，所以 openSession 的参数默认为 fasle，而后的学习中事务操作一般交给 Spring 来进行管理</p><h1 id="九-mybatis-动态-sql-多条件查询"><a class="markdownIt-Anchor" href="#九-mybatis-动态-sql-多条件查询"></a> 九、Mybatis 动态 sql - 多条件查询</h1><p>前面在 Mybatis 的映射文件中，使用的 SQL 都是比较简单的，但当业务逻辑复杂时，SQL 是动态变化的，此时在前面的 SQL 就不能满足要求</p><h2 id="1if-标签"><a class="markdownIt-Anchor" href="#1if-标签"></a> 1：if 标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在查询时，输入了多个查询条件，在不知道其输入了几个条件的情况下，如何进行查询？</span><br><span class="line">可以在写 SQL 时使用 if 标签，判断他是否输入了条件</span><br></pre></td></tr></table></figure><p>模糊查询，名字中有 “老” ，且性别为女的</p><p>UserDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;User&gt; <span class="title">findUserByCondition</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><p>映射配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--根据条件查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUserByCondition&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from user where 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userName != null&quot;</span>&gt;</span> </span><br><span class="line">        and username like &quot;%&quot;#&#123;userName&#125;&quot;%&quot;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userSex != null&quot;</span>&gt;</span></span><br><span class="line">        and sex = #&#123;userSex&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindUserByCondition</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUserName(<span class="string">&quot;楠&quot;</span>);</span><br><span class="line">    user.setUserSex(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">    List&lt;User&gt; users = userDao.findUserByCondition(user);</span><br><span class="line">    <span class="keyword">for</span> (User u : users) &#123;</span><br><span class="line">        System.out.println(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2where-标签"><a class="markdownIt-Anchor" href="#2where-标签"></a> 2：where 标签</h2><p>为了简化 where 1=1 的条件拼装，可以采用 where 标签来简化。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUserByCondition&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">    <span class="comment">&lt;!-- where 只能帮助处理一个 and 所以多条件都加上 and 即可--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userName != null&quot;</span>&gt;</span></span><br><span class="line">            and username like #&#123;userName&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userSex != null&quot;</span>&gt;</span></span><br><span class="line">            and sex = #&#123;userSex&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3foreach-标签"><a class="markdownIt-Anchor" href="#3foreach-标签"></a> 3：foreach 标签</h2><p>批量删除用户如何操作？根据多个用户 id 进行删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from user where id in (x,x,x)</span><br></pre></td></tr></table></figure><p>具体删除哪些不知道，可以存放在集合中，执行 sql 时再循环取出</p><p>Dao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据数组删除多个用户</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteByArray</span><span class="params">(Integer[] ids)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据集合删除多个用户</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteByList</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br></pre></td></tr></table></figure><p>映射配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByArray&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer[]&quot;</span>&gt;</span></span><br><span class="line">    delete from user where</span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">foreach 循环标签</span></span><br><span class="line"><span class="comment">collection: 参数的类型，如果是集合写 list、如果是数组写 array</span></span><br><span class="line"><span class="comment">open: 前缀</span></span><br><span class="line"><span class="comment">close: 后缀</span></span><br><span class="line"><span class="comment">separator: 分隔符</span></span><br><span class="line"><span class="comment">item: 循环中的每一个对象</span></span><br><span class="line"><span class="comment">index: 循环中的索引（ 一般不用）</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;array&quot;</span> <span class="attr">open</span>=<span class="string">&quot;id in (&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByList&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    delete from user where</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span> <span class="attr">open</span>=<span class="string">&quot;uid in (&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4sql-片段"><a class="markdownIt-Anchor" href="#4sql-片段"></a> 4：SQL 片段</h2><p>把重复的 sql 语句提取出来,需要使用时引用即可</p><p>抽取 <code>sql</code> 标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--id=&quot;&quot;: 唯一标志、文本：sql语句--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;select_user&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--不要写分号，不然在拼接时可能出问题--&gt;</span></span><br><span class="line">select * from user</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引入使用 <code>include</code> 标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">include :包含</span></span><br><span class="line"><span class="comment">refid: 关联的sql片段的id</span></span><br><span class="line"><span class="comment">ref ：references </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;select_user&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="十-mybatis-中的多表查询"><a class="markdownIt-Anchor" href="#十-mybatis-中的多表查询"></a> 十、Mybatis 中的多表查询</h1><p>表之间的关系：</p><ul><li><p>一对一</p><p>如：一个账户对应一个用户</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120932.webp"/></li><li><p>一对多：一对多之间暗含多对一，看主从关系</p><p>如：一个用户有多个账户</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120936.webp" /></li><li><p>多对多</p><p>如：一个用户可以是多个角色，一个角色也可以包含多个用户</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120938.webp" /></li></ul><p>创建一个 account 表及实体类、dao 等 - 自己写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE account (</span><br><span class="line">    id int primary key auto_increment,</span><br><span class="line">    name varchar(50) unique,</span><br><span class="line">    money double(5,2),</span><br><span class="line">    uid int not null,</span><br><span class="line">    foreign key(uid) references user(id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="1一对一-association"><a class="markdownIt-Anchor" href="#1一对一-association"></a> 1：一对一 - association</h2><p>一对一：参考图片，一个账户只能有一个用户</p><p>需求：查询所有账户时同时包含所有的用户信息</p><p>分析 sql ：账户必定是用户创建出来的，有账户必定有用户，所以 <strong>使用内连接，查询两表交集部分即可</strong></p><p>显式内连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user inner join account on user.id &#x3D; account.uid</span><br></pre></td></tr></table></figure><p>隐式内连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from account, user where account.uid &#x3D; user.id</span><br></pre></td></tr></table></figure><p>Account 中不具有 User 的属性，无法进行封装 (result 没办法写)</p><p>解决方案：</p><ul><li><p>方式一：让 Account 继承 User，打印时加上 user 的信息</p><blockquote><p><strong>但是</strong>，这种方式是坚决不建议的，这让两个本不相干实体类都有耦合了，从设计上来说，即使要这样也应该新建一个实体类，同时具有 Account 和 User 的属性，但是这要同时继承两个类，语法上都不允许</p><p>那继承一个，再加上另外一个的所有属性？这样代码岂不是冗余度太高？</p></blockquote></li><li><p>方式二：前边说了，要体现出来多对一/一对一的关系：<strong>从表实体应该包含主表实体的一个对象引用</strong></p><p>在 Account 中添加一个 User 的属性，并添加 get/set 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从表实体应该包含主表实体的一个对象引用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    get()&amp;set()&amp;toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时还是原来的问题，<strong>Account 不包含 User 的属性如何封装结果？</strong></p><p>在映射配置文件中，使用 resultMap 配置如何封装</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.AccountDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;accountMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Account&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;money&quot;</span> <span class="attr">property</span>=<span class="string">&quot;money&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;uid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            关联user中的属性</span></span><br><span class="line"><span class="comment">                property: 对应的属性名</span></span><br><span class="line"><span class="comment">                javaType: 关联的属性的所属类</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;user&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;address&quot;</span> <span class="attr">property</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 查询所有账户并查询相应的用户 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;accountMap&quot;</span>&gt;</span></span><br><span class="line">        select * from account,user where account.uid = user.id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类，依旧使用查询所有的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">        .getResourceAsStream(<span class="string">&quot;MybatisConfig.xml&quot;</span>);</span><br><span class="line">    sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        inputStream.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">    AccountDao accountDao = sqlSession.getMapper(AccountDao.class);</span><br><span class="line">    List&lt;Account&gt; accounts = accountDao.findAll();</span><br><span class="line">    <span class="keyword">for</span> (Account account : accounts) &#123;</span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2一对多-collection"><a class="markdownIt-Anchor" href="#2一对多-collection"></a> 2：一对多 - collection</h2><p>一对多：参考图片，一个用户有多个账户</p><p>需求：查询所有用户并包含用户对应的账户信息</p><p>还是先分析 sql ：<strong>内连接</strong> 会消除所有不符合条件的无关数据，不符合需求(需求中要求保留User表中的数据) 使用 <strong>外连接</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user left outer join account on user.id &#x3D; account.uid</span><br></pre></td></tr></table></figure><p>sql 解决完成，就需要解决结果的封装，User 实体类中不包含 Account 的属性如何解决？</p><p>既然是一对多，那么一个用户可以有多个账户，所以需要在实体类的属性中添加账户的集合引用</p><p>一对多的关系映射：<strong>主表实体类，应该包含从表实体类的集合引用</strong></p><blockquote><p>注意在探究一对多时，把 account 实体类中的 User 属性给删除了</p></blockquote><p>所以 User 应为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Account&gt; accounts;</span><br><span class="line">    get()&amp;set()toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDao.xml 映射配置文件中配置封装方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;address&quot;</span> <span class="attr">property</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        connection: 映射集合属性</span></span><br><span class="line"><span class="comment">        property: 对应的属性名</span></span><br><span class="line"><span class="comment">            ofType: 集合中的pojo类型</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;accounts&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;money&quot;</span> <span class="attr">property</span>=<span class="string">&quot;money&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;uid&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    select * from user left outer join account on user.id = account.uid</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">        .getResourceAsStream(<span class="string">&quot;MybatisConfig.xml&quot;</span>);</span><br><span class="line">    sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        inputStream.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">    List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3此处填坑"><a class="markdownIt-Anchor" href="#3此处填坑"></a> 3：此处填坑</h2><p>上边测试中发现，一个用户有多的账户，但是查询出来的记录却只有一条，且没有账户的用户也查了出来为空的账户，如下图所示：</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120944.webp" /><p>但是在工具中执行 sql 发现没有错：</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120946.webp" /><p>那就是框架的问题了：</p><blockquote><p>原来 MyBatis 为了降低内存开销，采用 ResultHandler 逐行读取的 JDBC ResultSet 结果集的，这就会造成 MyBatis 在结果行返回的时候。无法判断以后的是否还会有这个 id 的行返回，所以它采用了一个方法来判断当前 id 的结果行是否已经读取完成，从而将其加入结果集 List。</p><p>可参考：<a href="https://www.cnblogs.com/dquery/p/6169432.html">https://www.cnblogs.com/dquery/p/6169432.html</a></p></blockquote><p>说白了就是两个表中的主键名是一样 (都叫 id) 所以出现了数据覆盖呗，那让主键名不一样呗</p><ul><li><p>方式一：修改数据库表中的主键（学习的话改着比较轻松，但是公司中的话就不行了）</p></li><li><p>方式二：给查询结果中的其中一个 id 列起个别名呗：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;address&quot;</span> <span class="attr">property</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;accounts&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注意这里！！！ column写的值要和下边sql起的别名一致 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;aid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;money&quot;</span> <span class="attr">property</span>=<span class="string">&quot;money&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;uid&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">select</span><br><span class="line">    u.*,</span><br><span class="line">        a.id aid,</span><br><span class="line">        a.name,</span><br><span class="line">        a.money,</span><br><span class="line">        a.uid </span><br><span class="line">    from</span><br><span class="line">        user u</span><br><span class="line">        left outer join account a on u.id = a.uid</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>此时再测试结果就出来了</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120950.webp" /><h2 id="4多对多"><a class="markdownIt-Anchor" href="#4多对多"></a> 4：多对多</h2><table><thead><tr><th></th><th>多对一</th><th>一对多</th></tr></thead><tbody><tr><td>sql</td><td>内连接</td><td>外连接</td></tr><tr><td>实体类</td><td>从表实体，应该包含主表实体的一个对象引用</td><td>主表实体，应该包含从表实体的集合引用</td></tr></tbody></table><p><strong>推理：多对多关系映射中，两个实体类应相互包含另外一个实体类的集合引用</strong></p><p>创建数据库表：角色表和中间表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 创建角色表</span><br><span class="line">create table role(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">roleName varchar(20),</span><br><span class="line">roleDesc varchar(20)</span><br><span class="line">)</span><br><span class="line"># 创建中间表</span><br><span class="line">create table user_role(</span><br><span class="line">uid int,</span><br><span class="line">rid int,</span><br><span class="line">    # 联合主键: 唯一:两条数据不能同时相同(如:uid&#x3D;1,rid&#x3D;2;此时就不能再出现uid&#x3D;1,和rid&#x3D;2)</span><br><span class="line">    primary key(uid,rid),</span><br><span class="line">foreign key(uid) references user(id),</span><br><span class="line">foreign key(rid) references role(id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>需求：</strong></p><ul><li><p>查询用户时显示出用户所属的角色</p><p><strong>分析 SQL：</strong> 先根据用户 ID 与 中间表 UID 查询出左表（用户表）及左表与中间表交集部分，再将查询结果与角色表左外连接查询出 查询结果与角色的交集部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">select </span><br><span class="line">    user.*,</span><br><span class="line">    role.id rid,</span><br><span class="line">    role.rolename,</span><br><span class="line">    role.roledesc</span><br><span class="line">from </span><br><span class="line">    user </span><br><span class="line">    left outer join user_role on user.id &#x3D; user_role.uid</span><br><span class="line">    left outer join role on user_role.rid &#x3D; role.id</span><br></pre></td></tr></table></figure></li><li><p>查询角色时显示角色的所有用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">    user.*,</span><br><span class="line">    role.id rid,</span><br><span class="line">    role.rolename,</span><br><span class="line">    role.roledesc</span><br><span class="line">from</span><br><span class="line">    role </span><br><span class="line">    left outer join user_role on role.rid &#x3D; user_role.rid</span><br><span class="line">    left outer join user on user.id &#x3D; user_role.uid</span><br></pre></td></tr></table></figure></li></ul><p>实体类： User 及 Role</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Role&gt; roles;</span><br><span class="line">    get()&amp;set();</span><br><span class="line">    toString()中不打印 roles</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line">    <span class="keyword">private</span> String roleDesc;</span><br><span class="line">    <span class="keyword">private</span> List&lt;User&gt; users;</span><br><span class="line">    get()&amp;set();</span><br><span class="line">    toString()中不打印 users</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么不打印集合呢？如果两个都写了打印集合，这样就会互相调用 toString 方法，陷入无限递归。所以要么只写其中一个，要么都不写</p><p>UserDao 的映射配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;address&quot;</span> <span class="attr">column</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;roles&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;role&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;rid&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;roleName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;roleName&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;roleDesc&quot;</span> <span class="attr">column</span>=<span class="string">&quot;roleDesc&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">        select</span><br><span class="line">            user.*,</span><br><span class="line">            role.id rid,</span><br><span class="line">            role.rolename,</span><br><span class="line">            role.roledesc</span><br><span class="line">        from</span><br><span class="line">            user left outer join user_role on user.id = user_role.uid</span><br><span class="line">            left outer join role on user_role.rid = role.id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>RoleDao 的映射配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.RoleDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;roleMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;role&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;rid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;roleName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;roleName&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;roleDesc&quot;</span> <span class="attr">column</span>=<span class="string">&quot;roleDesc&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;users&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;address&quot;</span> <span class="attr">column</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;roleMap&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select</span><br><span class="line">            user.*,</span><br><span class="line">            role.id rid,</span><br><span class="line">            role.rolename,</span><br><span class="line">            role.roledesc</span><br><span class="line">        from</span><br><span class="line">            role</span><br><span class="line">            left outer join user_role on role.id = user_role.rid</span><br><span class="line">            left outer join user on user.id = user_role.uid</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类：UserTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestUser</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;MybatisConfig.xml&quot;</span>);</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">            user.getRoles().forEach(role -&gt; System.out.println(role));</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：RoleTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRole</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;MybatisConfig.xml&quot;</span>);</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        RoleDao roleDao = sqlSession.getMapper(RoleDao.class);</span><br><span class="line">        List&lt;Role&gt; roles = roleDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Role role : roles) &#123;</span><br><span class="line">            System.out.println(role);</span><br><span class="line">            role.getUsers().forEach(user-&gt; System.out.println(user));</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十一-mybatis-延迟加载策略"><a class="markdownIt-Anchor" href="#十一-mybatis-延迟加载策略"></a> 十一、Mybatis 延迟加载策略</h1><pre><code>问题：在一对多中，当我们有一个用户，它有100个账户。      在查询用户的时候，要不要把关联的账户查出来？      在查询账户的时候，要不要把关联的用户查出来？      在查询用户时，用户下的账户信息应该是，什么时候使用，什么时候查询的。      在查询账户时，账户的所属用户信息应该是随着账户查询时一起查询出来。什么是延迟加载在真正使用数据时才发起查询，不用的时候不查询。按需加载（懒加载）什么是立即加载不管用不用，只要一调用方法，马上发起查询。在对应的四种表关系中：一对多，多对一，一对一，多对多一对多，多对多：通常情况下我们都是采用延迟加载。多对一，一对一：通常情况下我们都是采用立即加载。</code></pre><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120900.webp" /><h2 id="1一对一延迟加载"><a class="markdownIt-Anchor" href="#1一对一延迟加载"></a> 1：一对一延迟加载</h2><p>一对一 / 多对一：查询账户时查询用户</p><p>开启懒加载，在association中，配置 <code>fetchType=&quot;lazy&quot;</code></p><ul><li><strong>lazy：</strong> 延迟加载</li><li><strong>eager：</strong> 立即加载</li></ul><p>实体类：和一对一原来一样</p><p>Dao 接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 账户的list集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Id查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 传入id值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 查询出来的user对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>映射配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--AccountDao.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.AccountDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;accountMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;money&quot;</span> <span class="attr">column</span>=<span class="string">&quot;money&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">column：通过Account表那一列查询用户,并将列中的数据作为参数传递到select调用的方法</span></span><br><span class="line"><span class="comment">select：映射要执行的方法(mapperId=namespace.id)</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;user&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">javaType</span>=<span class="string">&quot;user&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">select</span>=<span class="string">&quot;com.petrel1024.dao.UserDao.findById&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;accountMap&quot;</span>&gt;</span></span><br><span class="line">        select * from account</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--UserDao.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAccount</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;MybatisConfig.xml&quot;</span>);</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        AccountDao accountDao = sqlSession.getMapper(AccountDao.class);</span><br><span class="line">        List&lt;Account&gt; accounts = accountDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Account account : accounts) &#123;</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时发现控制台输出结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">petrel1024.dao.AccountDao.findAll  - &#x3D;&#x3D;&gt;  Preparing: select * from account </span><br><span class="line">petrel1024.dao.AccountDao.findAll  - &#x3D;&#x3D;&gt; Parameters: </span><br><span class="line">petrel1024.dao.UserDao.findById    - &#x3D;&#x3D;&#x3D;&#x3D;&gt;  Preparing: select * from user where id &#x3D; ? </span><br><span class="line">petrel1024.dao.UserDao.findById    - &#x3D;&#x3D;&#x3D;&#x3D;&gt; Parameters: 1(Integer)</span><br><span class="line">petrel1024.dao.UserDao.findById    - &lt;&#x3D;&#x3D;&#x3D;&#x3D;      Total: 1</span><br><span class="line">petrel1024.dao.UserDao.findById    - &#x3D;&#x3D;&#x3D;&#x3D;&gt;  Preparing: select * from user where id &#x3D; ? </span><br><span class="line">petrel1024.dao.UserDao.findById    - &#x3D;&#x3D;&#x3D;&#x3D;&gt; Parameters: 2(Integer)</span><br><span class="line">petrel1024.dao.UserDao.findById    - &lt;&#x3D;&#x3D;&#x3D;&#x3D;      Total: 1</span><br><span class="line">petrel1024.dao.AccountDao.findAll  - &lt;&#x3D;&#x3D;      Total: 3</span><br></pre></td></tr></table></figure><p>是立即加载，下边开启懒加载，在 AccountDao.xml 的 association 中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.AccountDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;accountMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;money&quot;</span> <span class="attr">column</span>=<span class="string">&quot;money&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        column：通过Account表那一列查询用户,并将列中的数据作为参数传递到select调用的方法</span></span><br><span class="line"><span class="comment">select：映射要执行的方法(mapperId=namespace.id)</span></span><br><span class="line"><span class="comment">        fetchType=&quot;lazy&quot;：开启懒加载  lazy:延迟加载, eager:立即加载</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;user&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">javaType</span>=<span class="string">&quot;user&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span> </span></span><br><span class="line"><span class="tag">                     <span class="attr">select</span>=<span class="string">&quot;com.petrel1024.dao.UserDao.findById&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">fetchType</span>=<span class="string">&quot;lazy&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;accountMap&quot;</span>&gt;</span></span><br><span class="line">        select * from account</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时测试发现，依旧没有懒加载，因为在测试类中，打印 account 是调用的其 toString 方法，默认认为这种操作会访问其所有属性（Account 类的属性中有 User 对象的引用），所以测试类中不要直接打印</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Account&gt; accounts = iAccountDao.findAll();</span><br><span class="line"><span class="keyword">for</span> (Account account : accounts) &#123;</span><br><span class="line">    System.out.println(account.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时控制台就变为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">petrel1024.dao.AccountDao.findAll  - &#x3D;&#x3D;&gt;  Preparing: select * from account </span><br><span class="line">petrel1024.dao.AccountDao.findAll  - &#x3D;&#x3D;&gt; Parameters: </span><br><span class="line">petrel1024.dao.AccountDao.findAll  - &lt;&#x3D;&#x3D;      Total: 3</span><br></pre></td></tr></table></figure><p>并没有去查询用户，也没有执行 findById 方法，懒加载成功</p><p>前边说了，<strong>一对一(多对一)应该采用立即加载，但是即使不采用懒加载，使用 association 的 select 属性直接去调用 UserDao 的 findById() 也是有好处的，能增加代码的复用</strong></p><h2 id="2一对多延迟加载"><a class="markdownIt-Anchor" href="#2一对多延迟加载"></a> 2：一对多延迟加载</h2><p>一对多：根据用户查询账户</p><p>实体类、UserDao 与一对多相同</p><p>在账户持久层接口 AccountDao 中添加根据用户 id 查询账户的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="function">Account <span class="title">findtByUid</span><span class="params">(Integer uid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AccountDao.xml 配置根据用户 Id 查询账户的 sql</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.AccountDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByUid&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;account&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        select * from account where uid = #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在用户配置文件中，配置查询所有，及 collection 中的 select 属性，及开启懒加载</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMapAccount&quot;</span> <span class="attr">type</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;address&quot;</span> <span class="attr">property</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;accounts&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">ofType</span>=<span class="string">&quot;account&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">column</span>=<span class="string">&quot;id&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">select</span>=<span class="string">&quot;com.petrel1024.dao.AccountDao.findByUid&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">fetchType</span>=<span class="string">&quot;lazy&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMapAccount&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3全局延迟加载"><a class="markdownIt-Anchor" href="#3全局延迟加载"></a> 3：全局延迟加载</h2><p>参考 Mybatis 官方文档</p><table><thead><tr><th style="text-align:left">设置名</th><th style="text-align:left">描述</th><th style="text-align:left">有效值</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">lazyLoadingEnabled</td><td style="text-align:left">延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置 <code>fetchType</code> 属性来覆盖该项的开关状态。</td><td style="text-align:left">true/false</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">aggressiveLazyLoading</td><td style="text-align:left">当开启时，任何方法的调用都会加载该对象的所有属性。 否则，每个属性会按需加载</td><td style="text-align:left">true/false</td><td style="text-align:left">false(true in&lt;=3.4.1)</td></tr></tbody></table><p>主配置文件中配置全局延迟加载</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置properties--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbcConfig.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--核心配置文件的全局的设置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--开启全局的延迟加载--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.petrel1024.domain&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.petrel1024.dao&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时不配置 <code>fetchType=&quot;lazy&quot;</code> 也可以使用延迟加载</p><h1 id="十二-mybatis-缓存"><a class="markdownIt-Anchor" href="#十二-mybatis-缓存"></a> 十二、Mybatis 缓存</h1><pre><code>什么是缓存存在于内存中的临时数据。为什么使用缓存减少和数据库的交互次数，提高执行效率。什么样的数据能使用缓存，什么样的数据不能使用适用于缓存：经常查询并且不经常改变的。数据的正确与否对最终结果影响不大的。不适用于缓存：经常改变的数据数据的正确与否对最终结果影响很大的。例如：商品的库存，银行的汇率，股市的牌价。</code></pre><p>像大多数的持久化框架一样，Mybatis 也提供了缓存策略，通过缓存策略来减少数据库的查询次数，从而提高性能。 Mybatis中缓存分为一级缓存，二级缓存。</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120906.webp" /><h2 id="1mybatis-中的一级缓存"><a class="markdownIt-Anchor" href="#1mybatis-中的一级缓存"></a> 1：Mybatis 中的一级缓存</h2><p>它指的是 Mybatis 中 SqlSession 对象的缓存。</p><p>当我们查询之后，查询的结果会同时存入到 SqlSession 提供一块区域中。该区域的结构是一个 Map，sql 语句为 key ，数据为 value</p><p>当再次查询同样的数据，mybatis 会先去 sqlsession 中查询是否有，有的话直接拿出来用。</p><p>当 SqlSession 对象消失时，mybatis 的一级缓存也就消失了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一级缓存</span></span><br><span class="line"><span class="comment"> *  1,在同一sqlSession对象范围下，两次执行同一个sql语句，第二层没有执行sql语句，说明缓存的存在</span></span><br><span class="line"><span class="comment"> *  2.如果执行了增删改,提交操作，会清空缓存</span></span><br><span class="line"><span class="comment"> *  3.sqlSession.clearCache();清空缓存</span></span><br><span class="line"><span class="comment"> *  4.一级缓存是SqlSession级别的, 必须是在一个sqlsession对象范围下才可以的得到一级缓存</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 一级缓存运行流程</span></span><br><span class="line"><span class="comment"> * 第一次执行sql语句，查询到数据，会在一级缓存中存储sql语句和数据，以sql语句为key值, 以数据为value值</span></span><br><span class="line"><span class="comment"> *  在第二次执行sql语句时，会先从缓存中查询 ，以sql为key查询，得到数据，直接返回，如果没有相应的sql语</span></span><br><span class="line"><span class="comment"> *  句，则查询数据库</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMybatisOTMLazy</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span></span><br><span class="line">            .getClass()</span><br><span class="line">            .getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder()</span><br><span class="line">            .build(inputStream);</span><br><span class="line"></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao1 = sqlSession.getMapper(UserDao.class);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; userList1 = userDao1.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList1) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();<span class="comment">//会清空缓存,说明一级缓存是SqlSession级别的</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//删除操作</span></span><br><span class="line"><span class="comment">//UserDao  userDao2 = sqlSession.getMapper(UserDao.class);</span></span><br><span class="line"><span class="comment">//userDao2.del(14);</span></span><br><span class="line"><span class="comment">//sqlSession.commit();</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//清空缓存</span></span><br><span class="line"><span class="comment">//sqlSession.clearCache();</span></span><br><span class="line"></span><br><span class="line">        SqlSession sqlSession2 = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao  userDao3 = sqlSession2.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; userList2 = userDao3.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList2) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession2.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，commit()，close() 等方法时，就会清空一级缓存（避免脏读）</p><h2 id="2mybatis-中的二级缓存"><a class="markdownIt-Anchor" href="#2mybatis-中的二级缓存"></a> 2：Mybatis 中的二级缓存</h2><p>二级缓存是 mapper 映射级别的缓存，多个 SqlSession 去操作同一个 Mapper 映射的 sql 语句，多个 SqlSession 可以共用二级缓存，二级缓存是跨 SqlSession 的。</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Mybatis/01/image-20190911120910.webp" /><p>二级缓存的使用步骤：</p><ol><li><p>让 Mybatis 框架支持二级缓存（在 SqlMapConfig.xml 中配置）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 开启二级缓存的支持 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>因为 cacheEnabled 的取值默认就为 true，所以这一步可以省略不配置。</p></li><li><p>让当前的映射文件支持二级缓存（在 UserDao.xml 中配置）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">  <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.petrel1024.dao.UserDao&quot;</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 通知该配置文件的查询可以使用二级缓存 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;cache&gt;</code>：标签表示当前这个 mapper 映射将使用二级缓存，区分的标准就看 mapper 的 namespace 值。</p></li><li><p>让当前的操作支持二级缓存（在 select 标签中配置）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 根据id查询 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">useCache</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;uid&#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span><br><span class="line">将UserDao.xml映射文件中的<span class="tag">&lt;<span class="name">select</span>&gt;</span>标签中设置useCache=”true”,代表当前这个statement要使用二级缓存，如果不使用二级缓存可以设置为false。 </span><br></pre></td></tr></table></figure><p>注意：针对每次查询都需要最新的数据 sql，要设置成 useCache=false，禁用二级缓存。</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二级缓存</span></span><br><span class="line"><span class="comment"> *   1.是mapper映射级别的缓存, 可以在多个SqlSession对象共享缓存数据</span></span><br><span class="line"><span class="comment"> *   2.默认的是开启的</span></span><br><span class="line"><span class="comment"> *      &lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt;</span></span><br><span class="line"><span class="comment"> *   3.在需要使用二级缓存的配置映射文件中开启</span></span><br><span class="line"><span class="comment"> *      &lt;cache/&gt;</span></span><br><span class="line"><span class="comment"> *   4.需要在二级缓存中保存的pojo对象必须实现序列化接口</span></span><br><span class="line"><span class="comment"> *       User  implements Serializable</span></span><br><span class="line"><span class="comment"> *   5.注意坑：在同一namespace范围下，执行提交操作，会清空该namespace的缓存</span></span><br><span class="line"><span class="comment">  例如：在多表查询一对一中AccountDao是一个名称空间,UserDao是一个名称空间，</span></span><br><span class="line"><span class="comment">  通过AccountDao查询时</span></span><br><span class="line"><span class="comment">  AccountDao会产生一次缓存(Account+sql:value)</span></span><br><span class="line"><span class="comment">  UserDao也会产生一次缓存(user+sql:value)</span></span><br><span class="line"><span class="comment">  当UserDao执行增删改操作时</span></span><br><span class="line"><span class="comment">  UserDao的缓存被清除,但是AccountDao缓存未清除</span></span><br><span class="line"><span class="comment">  再次通过AccountDao进行查询,会从AccountDao(Account+sql:value)中取出缓存(Vaule)</span></span><br><span class="line"><span class="comment">  但是UserDaao的数据已经改变，所以取出缓存的数据不是最新的</span></span><br><span class="line"><span class="comment">  这也有上百年的第三步提示注意：针对每次查询都需要最新的数据sql，要设置成useCache=false，禁用二级缓存。</span></span><br><span class="line"><span class="comment"> *   </span></span><br><span class="line"><span class="comment"> * 二级缓存的工作流程</span></span><br><span class="line"><span class="comment"> *     1.在任意一个sqlSession对象中执行了sql查询语句，当关闭sqlSession对象时,在二级缓存中保存数据</span></span><br><span class="line"><span class="comment"> *     以namespace.sql语句为key值，以对象为value存储</span></span><br><span class="line"><span class="comment"> *     2.当其他sqlSession对象执行时，需要根据namespace.sql查询是否存在缓存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMybatis</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span></span><br><span class="line">            .getClass()</span><br><span class="line">            .getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder()</span><br><span class="line">            .build(inputStream);</span><br><span class="line"></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao1 = sqlSession.getMapper(UserDao.class);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; userList1 = userDao1.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList1) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">        SqlSession sqlSession2 = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao  userDao2 = sqlSession2.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; userList2 = userDao2.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList2) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession2.close();</span><br><span class="line"></span><br><span class="line">        SqlSession sqlSession3 = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao  userDao3 = sqlSession3.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; userList3 = userDao3.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList3) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession3.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十三-mybatis-注解开发"><a class="markdownIt-Anchor" href="#十三-mybatis-注解开发"></a> 十三、Mybatis 注解开发</h1><p>Mybatis 最大的特点是使用 XML 存储 SQL 语句，但是 Mybatis 也可以使用注解开发方式，好处是不用编写 Mapper 映射文件，坏处是 SQL 语句又耦合在 Java 代码中了。</p><p><strong>常用注解：</strong></p><ul><li><strong>@Insert(sql)：</strong> 新增</li><li><strong>@Update(sql)：</strong> 更新</li><li><strong>@Delete(sql)：</strong> 删除</li><li><strong>@Select(sql)：</strong> 查询</li><li><strong>@Results(String id,Result[] value)：</strong> 映射结果集，可以与 <code>@Result</code> 一起使用，</li><li><strong>@Result()：</strong> 映射列名与属性名不一致的列</li><li><strong>@ResultMap(String[] value)：</strong> 通过 id 引用已有的 <code>@Results</code></li><li><strong>@One：</strong> 实现一对一结果集封装</li><li><strong>@Many：</strong> 实现一对多结果集封装</li><li><strong>@SelectProvider：</strong> 实现动态 SQL 映射</li></ul><h2 id="1单表操作"><a class="markdownIt-Anchor" href="#1单表操作"></a> 1：单表操作</h2><p>使用注解开发 UserDao，不需要映射配置文件 (主配置文件还是要的)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据姓名模糊查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where username like \&quot;_\&quot;#&#123;username&#125;\&quot;%\&quot; &quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;sex&#125;,#&#123;address&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Update(&quot;update user set username=#&#123;username&#125;,password=#&#123;password&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from user where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在模糊查询中有一点需要注意的是：&quot;_&quot;#{}&quot;%&quot;，此处的双引号 “”，不要写成了单引号 ‘’。xml 中无论哪一种都可以，但是注解中一定要写双引号</p><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestUser</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">            .getResourceAsStream(<span class="string">&quot;MybatisConfig.xml&quot;</span>);</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        System.out.println(userDao.findById(<span class="number">1</span>));</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        System.out.println(userDao.findByName(<span class="string">&quot;楠&quot;</span>));</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestSave</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">        user.setAddress(<span class="string">&quot;南阳&quot;</span>);</span><br><span class="line">        userDao.save(user);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestUpdate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">6</span>);</span><br><span class="line">        user.setUsername(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;浩洁&quot;</span>);</span><br><span class="line">        user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">        user.setAddress(<span class="string">&quot;南阳市&quot;</span>);</span><br><span class="line">        userDao.update(user);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByDelete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        userDao.delete(<span class="number">6</span>);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2结果集映射"><a class="markdownIt-Anchor" href="#2结果集映射"></a> 2：结果集映射</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Results:映射结果集</span></span><br><span class="line"><span class="comment"> *id:唯一标识</span></span><br><span class="line"><span class="comment"> *value:@Result[]</span></span><br><span class="line"><span class="comment"> * @Result:映射列名与属性名不一样的</span></span><br><span class="line"><span class="comment"> *    id:默认值是false, 即默认为非主键, id=true 指定该列为主键</span></span><br><span class="line"><span class="comment"> *    注解中: 只需要写列名与属性名不一样的，一样的可以不写</span></span><br><span class="line"><span class="comment"> *    特殊情况: 如果某列数据使用了两次或者两次以上，则两次映射都需要写出来</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Results(</span></span><br><span class="line"><span class="meta">    id = &quot;userMap&quot;, </span></span><br><span class="line"><span class="meta">    value = &#123;</span></span><br><span class="line"><span class="meta">    @Result(id = true, property = &quot;id&quot;, column = &quot;uid&quot;),</span></span><br><span class="line"><span class="meta">    @Result(property = &quot;username&quot;, column = &quot;uname&quot;)</span></span><br><span class="line"><span class="meta">&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 下边可使用@ResultMap通过id引用上边的@Results</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Select(&quot;select * from user where username like \&quot;_\&quot;#&#123;username&#125;\&quot;%\&quot; &quot;)</span></span><br><span class="line"><span class="meta">@ResultMap(&quot;userMap&quot;)</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="3主键回显"><a class="markdownIt-Anchor" href="#3主键回显"></a> 3：主键回显</h2><p>添加用户时，主键由数据库自动生成，那能不能让主键回显呢，是可以的 (mysql 一般用不到)</p><p>注解方式配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* @SelectKey: 保存并获取主键(主键回显), 在oracle中会使用</span></span><br><span class="line"><span class="comment"> * keyProperty: 主键的属性名</span></span><br><span class="line"><span class="comment"> * keyColumn: 主键列名</span></span><br><span class="line"><span class="comment"> * resultType: 主键的类型</span></span><br><span class="line"><span class="comment"> *before=false: 添加之后查询 mysql</span></span><br><span class="line"><span class="comment"> *before=true: 在添加之前查询 oracle</span></span><br><span class="line"><span class="comment"> *statement: 需要执行的sql语句</span></span><br><span class="line"><span class="comment"> *select last_insert_id() :最后一次执行添加生成的主键</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@SelectKey(</span></span><br><span class="line"><span class="meta">        keyProperty = &quot;id&quot;,</span></span><br><span class="line"><span class="meta">        keyColumn = &quot;id&quot;,</span></span><br><span class="line"><span class="meta">        resultType = Integer.class,</span></span><br><span class="line"><span class="meta">        before = false,</span></span><br><span class="line"><span class="meta">        statement = &quot;select last_insert_id()&quot;</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;sex&#125;,#&#123;address&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><p>xml 方式配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyColumn</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">order</span>=<span class="string">&quot;AFTER&quot;</span>&gt;</span></span><br><span class="line">    select last_insert_id()</span><br><span class="line"><span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4多表操作"><a class="markdownIt-Anchor" href="#4多表操作"></a> 4：多表操作</h2><h3 id="41一对一"><a class="markdownIt-Anchor" href="#41一对一"></a> 4.1：一对一</h3><p>UserDao：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where uid = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AccountDao：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * one = @One(select = &quot;&quot; , fetchType=&quot;&quot;):对应一个对象</span></span><br><span class="line"><span class="comment">     * select 属性：mapperId = namespace.id</span></span><br><span class="line"><span class="comment">     * fetchType = FetchType.LAZY:提取方式为延迟加载,默认是立即加载</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from account&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">        // 此处要写 uid 的映射</span></span><br><span class="line"><span class="meta">        @Result(id = true,column = &quot;uid&quot; ,property = &quot;uid&quot;)</span></span><br><span class="line"><span class="meta">        @Result(</span></span><br><span class="line"><span class="meta">            property = &quot;user&quot;, </span></span><br><span class="line"><span class="meta">            column = &quot;uid&quot;,</span></span><br><span class="line"><span class="meta">            javaType = User.class,</span></span><br><span class="line"><span class="meta">            one = @One(</span></span><br><span class="line"><span class="meta">                select = &quot;com.petrel1024.dao.UserDao.findById&quot;, </span></span><br><span class="line"><span class="meta">                fetchType = FetchType.LAZY)</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处为什么 uid 的映射一定要配呢？</p><p>因为：根据 uid 去查询 user，用了一次，结果集封装又要用一次，所以一定要写映射</p><h3 id="42一对多"><a class="markdownIt-Anchor" href="#42一对多"></a> 4.2：一对多</h3><p>AccountDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from account where uid = #&#123;userId&#125;&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findByUserId</span><span class="params">(Integer userId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDao：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * many = <span class="doctag">@Many</span>(select = &quot;&quot;,fetchType = ))</span></span><br><span class="line"><span class="comment">     * javaType = List.class其实也可以直接省略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select( &quot;select * from user&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">        @Result(id=true, column = &quot;id&quot; ,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(</span></span><br><span class="line"><span class="meta">            property = &quot;accounts&quot;, </span></span><br><span class="line"><span class="meta">            column = &quot;id&quot;, </span></span><br><span class="line"><span class="meta">            javaType = List.class,</span></span><br><span class="line"><span class="meta">            many = @Many(</span></span><br><span class="line"><span class="meta">                select = &quot;com.petrel1024.dao.AccountDao.findByUserId&quot;,</span></span><br><span class="line"><span class="meta">                fetchType = FetchType.LAZY))</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是：</p><ol><li>javaType 在注解中写的是 List，在 xml 中写的是集合中的泛型</li><li>和一对一中的一样，一定要写 id 列的映射</li></ol><h2 id="5动态-sql"><a class="markdownIt-Anchor" href="#5动态-sql"></a> 5：动态 SQL</h2><p>动态 SQL，主要用于查询时需要多个条件，但是不知道调用者究竟传了几个条件的情况下</p><p>例如：根据姓名模糊查询、性别等于查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Provider: 提供者</span></span><br><span class="line"><span class="comment">     * @SelectProvider: sql语句提供者</span></span><br><span class="line"><span class="comment">     * Type: sql语句提供者的类的字节码</span></span><br><span class="line"><span class="comment">     * method: 提供者类中的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SelectProvider(type = UserSqlProvider.class ,method = &quot;findAll&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findByCondition</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserSqlProvider：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user sql 语句的提供者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserSqlProvider</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">findAll</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="string">&quot;select * from user where 1 = 1 &quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(user.getSex() != <span class="keyword">null</span>)&#123;</span><br><span class="line">            sb.append(<span class="string">&quot; and sex = #&#123;sex&#125; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(user.getUsername() != <span class="keyword">null</span>)&#123;</span><br><span class="line">            sb.append(<span class="string">&quot; and uname like \&quot;%\&quot;#&#123;username&#125;\&quot;%\&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 常用框架 </category>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ORM 框架 </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven 基础使用</title>
      <link href="/article/7273cdc/"/>
      <url>/article/7273cdc/</url>
      
        <content type="html"><![CDATA[<h1 id="一-maven-简介"><a class="markdownIt-Anchor" href="#一-maven-简介"></a> 一、Maven 简介</h1><p><strong>官方文档：</strong> <a href="https://maven.apache.org/guides/getting-started/index.html">https://maven.apache.org/guides/getting-started/index.html</a></p><h2 id="1为什么需要-maven"><a class="markdownIt-Anchor" href="#1为什么需要-maven"></a> 1：为什么需要 Maven</h2><p>为什么需要 Maven 或者说是类似于 Maven 的项目构建工具呢？主要是在 JavaEE 的日常开发中，经常遇到以下问题</p><ol><li><p><strong>添加第三方 jar 包的问题：</strong></p><p>在今天的 JavaEE 开发领域，有大量的第三方框架和工具可以供我们使用。要使用这些 jar 包最简单的方法就是复制粘贴到 WEB-INF 目录下的 lib 目录下。但是这会导致每次创建一个新的工程就需要将 jar 包重复复制到 lib 目录下，从而造成工作区中存在大量重复的文件。</p></li><li><p><strong>寻找 jar 包的问题：</strong></p><p>JavaEE 开发中需要使用到的 jar 包种类繁多，几乎每个 jar 包在其本身的官网上的获取方式都不尽相同。为了查找一个 jar 包找遍互联网，身心俱疲，没有经历过的人或许体会不到这种折磨。</p><p>不仅如此，费劲心血找的 jar 包里有的时候并没有你需要的那个类，又或者又同名的类没有你要的方法——以不规范的方式获取的 jar 包也往往是不规范的。</p></li><li><p><strong>jar 包之间的依赖管理问题：</strong></p><p>jar 包往往不是孤立存在的，很多 jar 包都需要在其他 jar 包的支持下才能够正常工作，我们称之为 jar 包之间的依赖关系。</p><p>例子：<code>commons-fileupload-1.3.jar</code> 依赖于 <code>commons-io-2.0.1.jar</code>，如果没有 IO 包，FileUpload 包就不能正常工作。</p><p>那么问题来了，你知道你所使用的所有 jar 包的依赖关系吗？当你拿到一个新的从未使用过的 jar 包，你如何得知他需要哪些 jar 包的支持呢？如果不了解这个情况，导入的 jar 包不够，那么现有的程序将不能正常工作。再进一步，当你的项目中需要用到上百个 jar 包时，你还会人为的，手工的逐一确认它们依赖的其他 jar 包吗？这简直是不可想象的。</p></li><li><p><strong>jar 包冲突问题：</strong></p><p>上一点说的是 jar 包不足项目无法正常工作，但其实有的时候 jar 包多了项目仍然无法正常工作，这就是 jar 包之间的冲突。</p><p>例子：现在有三个工程 MakeFriend、HelloFriend、和 Hello。MakeFriend 依赖 HelloFriend，HelloFriend 依赖 Hello。而 Hello 依赖 <code>log4j.1.2.17.jar</code>，HelloFriend 依赖 <code>log4j.1.2.14.jar</code>。如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910100948.png" alt="image-20200910100948" /></p><p>那么 MakeFriend 工程的运行时环境中该导入 <code>log4j.1.2.14.jar</code> 呢还是 <code>log4j.1.2.17.jar</code> 呢？</p><p>这样的问题一个两个还可以手工解决，但如果系统中存在几十上百的 jar 包，他们之间的依赖关系会非常复杂，几乎不可能手工实现依赖关系的梳理。</p></li><li><p><strong>项目拆分问题：</strong></p><p>随着 JavaEE 项目的规模越来越庞大，开发团队的规模也与日俱增。一个项目上千人的团队持续开发很多年对于 JavaEE 项目来说再正常不过。那么我们想象一下：几百上千的人开发的项目是同一个 Web 工程。那么架构师、项目经理该如何划分项目的模块、如何分工呢？这么大的项目已经不可能通过 package 结构来划分模块，必须将项目拆分成多个工程协同开发。多个模块工程中有的是 Java 工程，有的是 Web 工程。</p><p>那么工程拆分后又如何进行互相调用和访问呢？</p></li><li><p><strong>分布式部署问题：</strong></p><p>在实际生产环境中，项目规模增加到一定程度后，可能每个模块都需要运行在独立的服务器上，我们称之为分布式部署，那该如何部署呢？</p></li></ol><p><strong>Maven 作用：</strong> Maven 的作用肯定是需要解决上边几个问题</p><ol><li><strong>解决 1、2、3：</strong> 通过 maven 定义 jar 包的坐标，自动从 maven 仓库中去下载到工程中，并且会自动下载该包所依赖的包。</li><li><strong>解决 4：</strong> Maven 为了解决 jar 冲突，内置了两条依赖原则：最短路径者优先和先声明者优先</li><li><strong>解决 5、6：</strong> maven 支持对工程分模块构建。同时还提供一套对项目生命周期管理的标准：编译、测试、打包、部署、运行</li></ol><h2 id="2maven-是什么"><a class="markdownIt-Anchor" href="#2maven-是什么"></a> 2：Maven 是什么</h2><blockquote><p>Maven 这个单词的本意是：专家，内行。读音是['meɪv(ə)n]或['mevn]，“美纹”。</p></blockquote><p>Maven 是一款自动化的项目构建工具，专注服务于 Java 平台的项目构建和依赖管理。</p><p>Maven 包含了：</p><ul><li>一个项目对象模型 (Project Object Model)</li><li>一组标准集合</li><li>一个项目生命周期 (Project Lifecycle)</li><li>一个依赖管理系统 (Dependency Management System)</li><li>和用来运行定义在生命周期阶段 (phase) 中插件 (plugin) 目标 (goal) 的逻辑。</li></ul><p>在 JavaEE 开发的历史上构建工具的发展也经历了一系列的演化和变迁：</p><p>Make → Ant → Maven → Gradle → ……</p><h2 id="3maven-的核心功能"><a class="markdownIt-Anchor" href="#3maven-的核心功能"></a> 3：Maven 的核心功能</h2><p>从上边的内容中可以 Maven 有两大核心功能：<strong>依赖管理</strong> 和 <strong>项目构建</strong></p><p><strong>依赖管理：</strong> 对 jar 包进行统一管理</p><p>Maven 提供了一个 Maven 的中央仓库，当我们在项目中添加完依赖之后，Maven 会自动去中央仓库下载相关的依赖，并且解决依赖的依赖问题</p><p><strong>一键构建：</strong> 整个构建过程，使用 maven 一个命令可以轻松完成整个工作。构建流程如下：</p><ol><li>清理：删除以前的编译结果，为重新编译做好准备。</li><li>编译：将Java源程序编译为字节码文件。</li><li>测试：针对项目中的关键点进行测试，确保项目在迭代开发过程中关键点的正确性。</li><li>报告：在每一次测试后以标准的格式记录和展示测试结果。</li><li>打包：将一个包含诸多文件的工程封装为一个压缩文件用于安装或部署。Java 工程对应 jar 包，Web 工程对应 war 包。</li><li>安装：在 Maven 环境下特指将打包的结果 (jar 包或 war 包) 安装到本地仓库中。</li><li>部署：将打包的结果部署到远程仓库或将 war 包部署到服务器上运行。</li></ol><h1 id="二-下载和安装"><a class="markdownIt-Anchor" href="#二-下载和安装"></a> 二、下载和安装</h1><div class="note danger"><p><strong>注意：</strong> 在安装 Maven 之前必须先安装 JDK，Maven3.0 + 的版本必须要 Jdk1.7+</p></div><p><strong>下载和安装：</strong></p><ul><li><p>下载：<a href="http://mirror.bit.edu.cn/apache/maven/maven-3/">http://mirror.bit.edu.cn/apache/maven/maven-3/</a></p></li><li><p>安装：解压即可</p></li></ul><p><strong>目录结构：</strong> 解压后的 Maven 目录如下</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190710090705.png" alt="image-20190710090705" /></p><ul><li><p><strong>bin：</strong> 存放了 maven 的命令，比如 mvn</p></li><li><p><strong>boot：</strong> 存放了一些 maven 本身的引导程序，如类加载器等</p></li><li><p><strong>conf：</strong> 存放了 maven 的一些配置文件，如 <strong><code>setting.xml</code></strong> 文件</p></li><li><p><strong>lib：</strong> 存放了 maven 本身运行所需的一些 jar 包</p></li></ul><p><strong>添加至环境变量</strong></p><p>与安装 jdk 类似，要想在任意地方使用 maven 命令，就需要将 bin 目录放到环境变量中</p><p>系统变量添加键值对，变量名：<code>MAVEN_HOME</code> 变量值：<code>你的 maven 安装目录</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190710090704.png" alt="image-20190710090704" /></p><p>Path 添加：<code>%MAVEN_HOME%\bin</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190710090728.png" alt="image-20190710090728" /></p><p><strong>校验：</strong></p><p>打开命令行输入：<code>mvn -v</code> 检验是否设置成功</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190710090734.png" alt="image-20190710090734" /></p><h1 id="三-maven-仓库"><a class="markdownIt-Anchor" href="#三-maven-仓库"></a> 三、Maven 仓库</h1><h2 id="1仓库的分类"><a class="markdownIt-Anchor" href="#1仓库的分类"></a> 1：仓库的分类</h2><p><strong>仓库：</strong> 用来放 Jar 包和插件的库</p><ul><li><p>本地仓库：为当前本机电脑上的所有 Maven 工程服务。</p></li><li><p>远程仓库</p><ul><li>私服：架设在当前局域网环境下，为当前局域网范围内的所有 Maven 工程服务。</li><li>中央仓库：架设在 Internet 上，为全世界所有 Maven 工程服务。</li><li>中央仓库的镜像：架设在各个大洲，为中央仓库分担流量。减轻中央仓库的压力，同时更快的响应用户请求。</li></ul></li></ul><p><strong>Maven 项目自动找 jar 包：</strong></p><p>先从本地仓库找 jar 包，若本地仓库没有，默认去中央仓库下载；若配置私服，就去私服下载，若私服去中央仓库找，下载完毕私服自己留一份，返回一份给本地仓库</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200909170930.png" alt="image-20200909170930" /></p><h2 id="2配置本地仓库"><a class="markdownIt-Anchor" href="#2配置本地仓库"></a> 2：配置本地仓库</h2><p>本地仓库默认在 <code>C:\User\xxx\.m2\ repository</code> 目录下，可能随着项目的越来越大，依赖的 Jar 也越来越多，占用空间比较多，所以可以修改本地仓库的位置节省 C 盘空间</p><p>没有配置私服的话，会直接去中央仓库下载，但是中央仓库的服务器在国外，传输速度比较慢，在公司没有自己搭建私服 (远程仓库) 的情况下可以使用阿里云的公共代理库</p><p>在 Maven 安装目录下有个 conf 目录，该目录下的 Settings 文件记录了 Maven 的相关配置，可以在其中配置本地仓库和远程仓库的位置</p><ul><li><p>配置本地仓库</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository 默认仓库位置</span></span><br><span class="line"><span class="comment">配置方式</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:/develop/mvn_repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置中央仓库的镜像 <a href="https://help.aliyun.com/document_detail/102512.html?spm=a2c40.aliyun_maven_repo.0.0.30be3054PliW5B">阿里云帮助文档</a> <a href="https://maven.aliyun.com/mvn/search">阿里云仓库服务</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--写在这个标签下边，别写错了--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="四-maven-工程的目录结构"><a class="markdownIt-Anchor" href="#四-maven-工程的目录结构"></a> 四、Maven 工程的目录结构</h1><p>开发完成的项目可以分为：</p><ol><li>核心代码 (打 jar 包)</li><li>配置文件部分 (为了不频繁打 Jar 包)</li><li>测试代码 (测试核心代码)</li><li>测试配置文件部分</li></ol><p>传统项目只有一个 src 目录和一个配置文件目录，Maven 就对工程目录的标准进行统一</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910100918.png" alt="image-20200910100918" /></p><blockquote><p>Maven 项目还有一个独特的配置：<code>pom.xml</code>，它是当前 Maven 工程的核心配置</p></blockquote><h1 id="五-idea-创建-maven-工程"><a class="markdownIt-Anchor" href="#五-idea-创建-maven-工程"></a> 五、IDEA 创建 Maven 工程</h1><h2 id="1idea-集成-maven"><a class="markdownIt-Anchor" href="#1idea-集成-maven"></a> 1：IDEA 集成 Maven</h2><p>默认使用的是 IDEA 的 maven 插件，可以手动修改位自己下载的 Maven</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200909180954.png" alt="image-20200909180954" /></p><p>设置自动导包及是否下载源码及文档</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910080928.png" alt="image-20200910080928" /></p><p>使用骨架不联网的情况下也能创建项目</p><p>添加参数：<code>-DarchetypeCatalog=local</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190720000736.png" alt="image-20190720000736" /></p><h2 id="2javase-工程创建"><a class="markdownIt-Anchor" href="#2javase-工程创建"></a> 2：JavaSE 工程创建</h2><p>创建工程时，选择 Maven</p><blockquote><p>如要选骨架，可选 <code>org.maven.archetypes:maven-archetype-quickstart</code></p><p>一般情况下不建议使用提供好的骨架 (模板) 来创建工程。使用骨架创建出来工程，文件夹补全、pom 文件乱糟糟的。</p><p>当然你完全可以自定义一个好用的骨架，参考链接：<a href="https://blog.csdn.net/qq_42986107/article/details/83421811">https://blog.csdn.net/qq_42986107/article/details/83421811</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910120445615.png" alt="image-20200910120445615" /></p><p>填写项目信息</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910121226.png" alt="image-20200910121455056" /></p><p>按照标准的 Maven 项目结构，test 文件夹下少了一个 resources。不过用处不大，加不加都行，添加方式如下：</p><div class="tabs" id="添加resources目录"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#添加resources目录-1">2018 版本</button></li><li class="tab"><button type="button" data-href="#添加resources目录-2">2020 版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="添加resources目录-1"><ol><li><p>test 目录上 → 右键 → new → 创建一个名为 <code>resources</code> 文件夹</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910123415657.png" alt="image-20200910123415657" /></p></li><li><p>新创建的 <code>resources</code> 文件夹上 → 右键 → Mark Directory as → Test Resources Root</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910123549397.png" alt="image-20200910123549397" /></p></li></ol><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="添加resources目录-2"><p>test 目录上 → 右键 → new → Directory，在给文件夹起名字时，IDEA 会自动提示缺失的目录</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910123415657.png" alt="image-20200910123415657" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910124205998.png" alt="image-20200910124205998" /></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="3javaweb-工程创建"><a class="markdownIt-Anchor" href="#3javaweb-工程创建"></a> 3：JavaWeb 工程创建</h2><h3 id="31使用骨架创建"><a class="markdownIt-Anchor" href="#31使用骨架创建"></a> 3.1：使用骨架创建</h3><p>1：勾选骨架</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190720120722.png" alt="image-20190720120722" /></p><p>2：填写信息</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910124702979.png" alt="image-20200910124702979" /></p><p>3：就是一些本地仓库的信息，没有啥要改的，直接 finish 就行了</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910124855075.png" alt="image-20200910124855075" /></p><p><strong>目录补全：</strong></p><p>创建完成之后，缺少的目录如下：</p><ol><li><code>src/main/java</code></li><li><code>src/main/resources</code></li><li><code>src/test/java</code></li><li><code>src/test/resources</code></li></ol><p>请参考 <code>Java SE 工程创建</code> 中的目录补全，补全上边几个目录。最终的目录结构如下：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910125949508.png" alt="image-20200910125949508" /></p><p><strong>修改 JavaWeb 约束：</strong> 默认使用的是 javaweb 2.3 的约束，不支持注解</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改为 3.1：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>添加 Servlet 和 JSP 依赖：</strong></p><p>发现右键中没有新建 Servlet / JSP 是因为没有导入他们所依赖的 Jar 包，修改 pom.xml 如下，坐标如何写后边说</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">&lt;!-- 项目的相关信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mvn_javaweb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 打包方式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>mvn_javaweb Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 项目配置：可以配置jdk版本、编码、版本锁定等 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 项目的默认编译环境，默认1.7，已手动改为1.8 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 编译后的class文件使用jdk1.8 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 源文件使用jdk1.8进行编译 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用UTF-8进行编码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 项目所依赖的jar包 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 默认自动田间junit4.11的jar包，我已手动修改为4.12 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Servlet --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- JSP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 打包之后的项目名字 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>mvn_javaweb<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 默认会添加clean compiler等相关Maven命令的插件并指定版本 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再添加到 Tomcat 中运行即可</p><h3 id="32改造-javase-工程"><a class="markdownIt-Anchor" href="#32改造-javase-工程"></a> 3.2：改造 JavaSE 工程</h3><p>参考 <code>JavaSE 工程创建</code>，创建出一个 SE 工程之后，然后对其进行改造</p><ol><li><p>修改项目打包方式为 <code>war</code> 包</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910141134175.png" alt="image-20200910141134175" /></p></li><li><p>添加 webapp 目录：打开项目配置 (<code>ctrl+alt+shift+s</code>) → Modules → web</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910142139742.png" alt="image-20200910142139742" /></p></li><li><p>添加 web.xml</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200910145452904.png" alt="image-20200910145452904" /></p></li></ol><p>配置完成之后就变成 JavaWeb 工程啦 (还需要加 servlet 和 jsp 的依赖才可以正常使用)</p><h1 id="六-maven-命令与生命周期"><a class="markdownIt-Anchor" href="#六-maven-命令与生命周期"></a> 六 、Maven 命令与生命周期</h1><h2 id="1常用命令"><a class="markdownIt-Anchor" href="#1常用命令"></a> 1：常用命令</h2><p>可以在命令行中通过一系列的 maven 命令，来对 maven 工程进行编译、测试、运行、打包、安装、部署</p><table><thead><tr><th>命令</th><th>中文释义</th><th>说明</th></tr></thead><tbody><tr><td><code>mvn clean</code></td><td>清理</td><td>清除编译产生的 target 文件夹内容，如 <code>mvn clean package</code>，<code>mvn clean test</code></td></tr><tr><td><code>mvn compile</code></td><td>编译</td><td>将 <code>src/main/java</code> 下的文件编译为 class 文件输出到 target 目录下</td></tr><tr><td><code>mvn test</code></td><td>测试</td><td>项目测试，会执行 <code>src/test/java</code> 下的单元测试类</td></tr><tr><td><code>mvn package</code></td><td>打包</td><td>根据配置，将项目打成 <code>jar/war</code> 包。可以在 target 目录下找到</td></tr><tr><td><code>mvn install</code></td><td>安装</td><td>将 maven 打成 <code>jar/war</code> 包发布到本地仓库。</td></tr><tr><td><code>mvn deploy</code></td><td>部署</td><td>将maven 打成 <code>jar/war</code> 包发布到私服。</td></tr><tr><td><code>mvn site</code></td><td>站点</td><td>生成项目相关信息的网站，会在 target 目录下生成一个 <code>site</code> 的文件夹</td></tr></tbody></table><h2 id="2生命周期"><a class="markdownIt-Anchor" href="#2生命周期"></a> 2：生命周期</h2><p><code>Lifecycle</code>：Maven 生命周期定义了各个构建环节的执行顺序，有了这个清单，Maven 就可以自动化的执行构建命令了。</p><p>maven 对项目构建过程分为三套<strong>相互独立</strong>的生命周期：</p><ol><li><strong>清理</strong>生命周期：<strong>在进行真正的构建之前进行一些清理工作</strong></li><li><strong>默认</strong>生命周期：<strong>构建的核心部分，编译，测试，打包，部署等等</strong></li><li><strong>站点</strong>生命周期：生成项目报告，站点，发布站点</li></ol><p>再次强调一下它们是相互独立的，你可以仅仅调用 clean 来清理工作目录，仅仅调用 site 来生成站点。</p><p>当然你也可以直接运行 <strong><code>mvn clean install site</code></strong> 运行所有这三套生命周期。</p><p>每套生命周期都由一组阶段 (Phase) 组成，我们平时在命令行输入的命令总会对应于一个特定的阶段。</p><p>比如，运行 <code>mvn clean</code>，这个 <code>clean</code> 是 <strong>Clean 生命周期</strong>的一个阶段。有 <strong>Clean 生命周期</strong>，也有 <code>clean 阶段</code>。<strong>详解如下：</strong></p><p><strong>Clean 生命周期：</strong> 一共包含了三个阶段</p><ol><li>pre-clean：执行一些需要在 clean 之前完成的工作</li><li>clean：移除所有上一次构建生成的文件</li><li>post-clean：执行一些需要在 clean 之后立刻完成的工作</li></ol><p><strong>Default 生命周期：</strong> Maven 生命周期中最重要的一个，绝大部分工作都发生在这个生命周期中</p><p>官方文档参考链接：<a href="http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html">http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html</a></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>validate</td><td>验证项目结构是否正常，必要的配置文件是否存在</td></tr><tr><td>initialize</td><td>做构建前的初始化操作，比如初始化参数、创建必要的目录等</td></tr><tr><td>generate-sources</td><td>产生在编译过程中需要的源代码</td></tr><tr><td>process-sources</td><td>处理源代码，比如过滤值</td></tr><tr><td>generate-resources</td><td>产生主代码中的资源在 classpath 中的包</td></tr><tr><td>process-resources</td><td>将资源文件复制到 classpath 的对应包中</td></tr><tr><td><strong>compile</strong></td><td>编译项目中的源代码</td></tr><tr><td>process-classes</td><td>产生编译过程中生成的文件</td></tr><tr><td>generate-test-sources</td><td>产生编译过程中测试相关的代码</td></tr><tr><td>process-test-sources</td><td>处理测试代码</td></tr><tr><td>generate-test-resources</td><td>产生测试中资源在 classpath 中的包</td></tr><tr><td>process-test-resources</td><td>将测试资源复制到 classpath 中</td></tr><tr><td><strong>test-compile</strong></td><td>编译测试代码</td></tr><tr><td>process-test-classes</td><td>产生编译测试代码过程的文件</td></tr><tr><td><strong>test</strong></td><td>运行测试案例</td></tr><tr><td>prepare-package</td><td>处理打包前需要初始化的准备工作</td></tr><tr><td>package</td><td>将编译后的 class 和资源打包成压缩文件，比如 rar</td></tr><tr><td>pre-integration-test</td><td>做好集成测试前的准备工作，比如集成环境的参数设置</td></tr><tr><td>integration-test</td><td>集成测试</td></tr><tr><td>post-integration-test</td><td>完成集成测试后的收尾工作，比如清理集成环境的值</td></tr><tr><td>verify</td><td>检测测试后的包是否完好</td></tr><tr><td><strong>install</strong></td><td>将打包的组件以构件的形式，安装到本地依赖仓库中，以便共享给本地的其他项目</td></tr><tr><td><strong>deploy</strong></td><td>运行集成和发布环境，将测试后的最终包以构件的方式发布到远程仓库中，方便所有程序员共享</td></tr></tbody></table><p><strong>Site 生命周期：</strong></p><ol><li>pre-site：执行一些需要在生成站点文档之前完成的工作</li><li>site：生成项目的站点文档</li><li>post-site：执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</li><li>site-deploy：将生成的站点文档部署到特定的服务器上</li></ol><p>这里经常用到的是 site 阶段和 site-deploy 阶段，用以生成和发布 Maven 站点 (包含依赖树啊、版本信息啊等一些东西)</p><h2 id="3生命周期与自动化构建"><a class="markdownIt-Anchor" href="#3生命周期与自动化构建"></a> 3：生命周期与自动化构建</h2><p><strong>运行任何一个阶段的时候，它前面的所有阶段都会被运行</strong>，例如我们运行 mvn install 的时候，代码会被编译，测试，打包。</p><p>这就是 Maven 为什么能够自动执行构建过程的各个环节的原因。</p><p>此外，Maven 的插件机制是完全依赖 Maven 的生命周期的，因此理解生命周期至关重要</p><h2 id="4插件和目标"><a class="markdownIt-Anchor" href="#4插件和目标"></a> 4：插件和目标</h2><p>Maven 的核心仅仅定义了抽象的生命周期，具体的任务都是交由插件完成的。</p><p>每个插件都能实现多个功能，每个功能就是一个插件目标。</p><p>Maven 的生命周期与插件目标相互绑定，以完成某个具体的构建任务。</p><p><strong>例如：</strong> compile 就是插件 maven-compiler-plugin 的一个功能；pre-clean 是插件 maven-clean-plugin 的一个目标。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200913112057531.png" alt="image-20200913112057531" /></p><h1 id="七-依赖管理"><a class="markdownIt-Anchor" href="#七-依赖管理"></a> 七、依赖管理</h1><h2 id="1pom-文件"><a class="markdownIt-Anchor" href="#1pom-文件"></a> 1：pom 文件</h2><p>通过上边创建的项目中可以看出，每一个项目根目录下都包含了一个 <code>pom.xml</code> 那它是个什么东西呢？</p><p><strong>POM：</strong> Project Object Model，项目对象模型。将 Java 工程的相关信息，封装为对象作为便于操作和管理的模型。是 Maven 工程的核心配置。可以说学习 Maven 就是学习 pom.xml 文件中的配置。</p><p>参考：<a href="https://www.jianshu.com/p/06f73e8cbf78">https://www.jianshu.com/p/06f73e8cbf78</a></p><h2 id="2maven-坐标"><a class="markdownIt-Anchor" href="#2maven-坐标"></a> 2：Maven 坐标</h2><p><strong>几何坐标：</strong></p><ul><li>在一个平面中使用 x、y 两个向量可以唯一的确定平面中的一个点。</li><li>在空间中使用 x、y、z 三个向量可以唯一的确定空间中的一个点。</li></ul><p><strong>Maven 坐标：</strong> 根据 groupId、artifactId、version 在 Maven 的仓库中的确定唯一的一个 Maven 工程</p><ol><li><code>groupId</code>：公司或组织的域名反写</li><li><code>artifactId</code>：在一个组织中项目的唯一标识</li><li><code>version</code>：项目的版本。一个项目的话，可能会有多个版本。如果是正在开发的项目，可以给版本号加上一个 SNAPSHOT，表示这是一个快照版（新建项目的默认版本号就是快照版）</li></ol><p><strong>例如：</strong> 一个 <code>dependency</code> 标签表示一个坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>导入依赖 (jar 包)：</strong> 只需要在 <code>&lt;dependencies&gt;</code> 标签中填写 Maven 坐标即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>如何找 jar 包 (Maven 坐标)：</strong></p><ol><li><a href="https://mvnrepository.com/">https://mvnrepository.com/</a></li><li><a href="https://search.maven.org/">https://search.maven.org/</a></li><li><a href="https://package-search.jetbrains.com/">https://package-search.jetbrains.com/</a></li></ol><h2 id="3依赖范围"><a class="markdownIt-Anchor" href="#3依赖范围"></a> 3：依赖范围</h2><p>在导入 junit 的 jar 时，发现他的坐标是这么写的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个 <code>&lt;scope&gt;</code> 是个什么东西呢？<strong>scope</strong> 用来控制依赖和编译，测试，运行的 classpath 的关系。</p><p>当一个 Maven 工程添加了对某个 jar 包的依赖后，这个被依赖的 jar 包可以对应下面几个可选的范围：</p><ol><li><p><strong>compile</strong>，默认依赖范围</p><p>main 目录下的 Java 代码<strong>可以</strong>访问这个范围的依赖</p><p>test 目录下的 Java 代码<strong>可以</strong>访问这个范围的依赖</p><p>部署到 Tomcat 服务器上运行时<strong>要</strong>放在 WEB-INF 的 lib 目录下</p></li><li><p><strong>test</strong></p><p>main 目录下的 Java 代码<strong>不能</strong>访问这个范围的依赖</p><p>test 目录下的 Java 代码<strong>可以</strong>访问这个范围的依赖</p><p>部署到 Tomcat 服务器上运行时<strong>不会</strong>放在 WEB-INF 的 lib 目录下</p><p>例如：对 junit 的依赖。仅仅是测试程序部分需要。</p></li><li><p><strong>provided</strong></p><p>main 目录下的 Java 代码<strong>可以</strong>访问这个范围的依赖</p><p>tes t目录下的 Java 代码<strong>可以</strong>访问这个范围的依赖</p><p>部署到 Tomcat 服务器上运行时<strong>不会</strong>放在 WEB-INF 的 lib 目录下</p><p>例如：servlet-api 在服务器上运行时，Servlet 容器会提供相关 API，所以部署的时候不需要。</p></li><li><p><strong>runtime[了解]</strong></p><p>main 目录下的 Java 代码<strong>不能</strong>访问这个范围的依赖</p><p>test 目录下的 Java 代码<strong>可以</strong>访问这个范围的依赖</p><p>部署到 Tomcat 服务器上运行时<strong>会</strong>放在 WEB-INF 的 lib 目录下</p><p>例如：JDBC 驱动。只有在测试运行和在服务器运行的时候才决定使用什么样的数据库连接。</p></li><li><p><strong>其他：</strong> import、system 等。</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200305210334.png" alt="image-20200305210334" /></p><h2 id="4依赖的传递性"><a class="markdownIt-Anchor" href="#4依赖的传递性"></a> 4：依赖的传递性</h2><p>当存在间接依赖的情况时，主工程对间接依赖的 jar 可以访问吗？</p><p>这要看间接依赖的 jar 包引入时的依赖范围——只有依赖范围为 compile 时可以访问。例如：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190710090714.png" alt="2019091311565121" /></p><h2 id="5依赖冲突及解决"><a class="markdownIt-Anchor" href="#5依赖冲突及解决"></a> 5：依赖冲突及解决</h2><p>因为有了依赖传递，就可能发生依赖冲突，例如：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190710090715.png" alt="" /></p><p>这样就造成了依赖冲突，有下列三种解决方案。</p><h3 id="51maven-自带的调优原则"><a class="markdownIt-Anchor" href="#51maven-自带的调优原则"></a> 5.1：maven 自带的调优原则</h3><ol><li><p><strong>路径近者优先</strong></p><p>所以上图会选择 <code>C-4.11.jar</code></p></li><li><p><strong>第一个声明者优先</strong></p><p>那如果再稍微复杂一点，路径相同呢？</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190710090716.png" alt="" /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mvn-project-A 的 pom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mvn-projext-B<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mvn-projext-X<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里 “声明” 的先后顺序，指的就是 dependency 标签配置的先后顺序。</p><p><code>mvn-projext-B</code> 先声明，所以选择 <code>C-4.12.jar</code></p></li></ol><h3 id="52排除依赖"><a class="markdownIt-Anchor" href="#52排除依赖"></a> 5.2：排除依赖</h3><p>在 <code>dependencies</code> 标签中使用 <code>exclusions</code> 可以来排除依赖，</p><p><strong>例如：</strong> 在 <code>maven 自带的调优原则 - 第一声明者优先中</code> ，我非想要使用 <code>X 工程</code> 中的 4.11 版本怎么办？把 <code>B 工程</code> 的中的 <code>C</code> 排除掉</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mvn-project-A 的 pom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mvn-projext-B<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 排除依赖，exclusions 中可以继续加 exclusion 排除更多的依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>C<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mvn-projext-X<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="53锁定版本"><a class="markdownIt-Anchor" href="#53锁定版本"></a> 5.3：锁定版本</h3><p>可以使用 <code>&lt;dependencyManagement&gt;</code> 来锁定版本号，来指定要使用的版本</p><blockquote><p>只配置 <code>dependencyManagement</code> 是不会引入依赖的，只有在 <code>dependencies</code> 中添加依赖坐标才会真正引入</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 版本锁定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>C<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 真正引入，同时不用在写版本号了，已经锁定了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>C<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同时也可以把版本号提取出来，方便升级的时候修改</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 提取版本号 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">C-version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">C-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 版本锁定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>C<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用提取的版本号 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;C-version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 真正引入，同时不用在写版本号了，已经锁定了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>C<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6maven-插件"><a class="markdownIt-Anchor" href="#6maven-插件"></a> 6：Maven 插件</h2><p>Maven 是一个核心引擎，提供了基本的项目处理能力和建设过程的管理，以及一系列的插件是用来执行实际建设任务。</p><p>maven 插件可以完成一些特定的功能，例如：</p><ul><li>集成 jdk 插件可以方便的修改项目的编译环境；</li><li>集成 tomcat 插件后，无需安装 tomcat 服务器就可以运行 tomcat 进行项目的发布与测试</li><li>等等</li></ul><p>在 pom.xml 中通过 <code>&lt;plugin&gt;</code> 标签引入 maven 的功能插件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 编译插件，等效于project标签中的:</span></span><br><span class="line"><span class="comment">       &lt;properties&gt;</span></span><br><span class="line"><span class="comment">          &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span></span><br><span class="line"><span class="comment">          &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span></span><br><span class="line"><span class="comment">          &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span></span><br><span class="line"><span class="comment">        &lt;/properties&gt;</span></span><br><span class="line"><span class="comment">    可参考:https://maven.apache.org/guides/introduction/introduction-to-the-pom.html</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">showWarnings</span>&gt;</span>true<span class="tag">&lt;/<span class="name">showWarnings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- tomcat7插件</span></span><br><span class="line"><span class="comment">       一般也不用，都用自己本地的，</span></span><br><span class="line"><span class="comment">      使用不同的tomcat版本要注意servlet、jsp、el及jdk与tomcat版本的对应关系</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">server</span>&gt;</span>tomcat7<span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下边是官方给出的 servlet、jsp、el 及 jdk 与 tomcat 版本的对应关系</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190725180734.png" alt="image-20190725180734" /></p><p><strong>使用 Tomcat 7 插件跑项目：</strong></p><ol><li><p>tomcat 官网查看插件坐标：<a href="http://tomcat.apache.org/maven-plugin-2.2/">http://tomcat.apache.org/maven-plugin-2.2/</a> 并引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Servlet --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- JSP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">server</span>&gt;</span>tomcat7<span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong> 因为 tomcat 内置有 serlet 和 jsp 的包，所以要把这两个引入的 jar 包的依赖范围，限制在编译与测试时期生效<code>&lt;scope&gt;provided&lt;/scope&gt;</code></p></li><li><p>运行时输入 Maven 命令 <code>tomcat7:run</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200305210332.png" alt="image-20200305210332" /></p><p>或者在插件处双击也行</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200913131510773.png" alt="image-20200913131510773" /></p><p>也可以直接像添加 tomcat 一样</p><ol><li><p>点击菜单栏 Run 选择 EditConfig…</p></li><li><p>点击窗口左上角 + 号，选择 Maven</p></li><li><p>如图配置：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190725180754.png" alt="image-20190725180754" /></p></li><li><p>然后工具栏就会出来这个和本地 tomcat 一样的东西</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20190725180722.png" alt="image-20190725180722" /></p></li></ol></li></ol><h1 id="八-继承与聚合"><a class="markdownIt-Anchor" href="#八-继承与聚合"></a> 八、继承与聚合</h1><h2 id="1继承"><a class="markdownIt-Anchor" href="#1继承"></a> 1：继承</h2><p><strong>为什么需要继承机制：</strong> 由于非 compile 范围的依赖信息是不能在 “依赖链” 中传递的，所以有需要的工程只能单独配置。</p><p>例如：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-2019091317411821.png" alt="2019091317411821" /></p><p>此时如果项目需要将各个模块的 junit 版本统一为 4.12，那么到各个工程中手动修改无疑是非常不可取的。</p><p>使用继承机制就可以将这样的依赖信息统一提取到父工程模块中进行统一管理。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-2019091318183531.png" alt="2019091318183531" /></p><p><strong>创建父工程：</strong> 创建父工程和创建一般的 Java 工程操作一致，唯一需要注意的是：打包方式处要设置为 pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mvn-project-parent 的 pom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.petrel1024<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mvn-project-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 打包方式为pom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在子工程中引用父工程：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mvn-project-A 的 pom --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 继承父工程(父工程的信息) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定从当前子工程的pom.xml文件出发，查找父工程的pom.xml的路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mvn-project-A 的 信息 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此时如果子工程的 groupId 和 version 如果和父工程重复则可以删除。 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;groupId&gt;com.petrel1024&lt;/groupId&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mvn-project-A<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; --&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在父工程中管理依赖：</strong> 将 parent 项目中的 dependencies 标签，用 dependencyManagement 标签括起来</p><blockquote><p>父工程只做版本管理，当子工程添加依赖坐标才会真正引入</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在子版本引入依赖：</strong> 在子项目中重新指定需要的依赖，可删除范围和版本号</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2聚合"><a class="markdownIt-Anchor" href="#2聚合"></a> 2：聚合</h2><p><strong>为什么要使用聚合：</strong> 将多个工程拆分为模块后，需要手动逐个安装到仓库后依赖才能够生效。修改源码后也需要逐个手动进行 clean 操作。而使用了聚合之后就可以批量进行 Maven 工程的安装、清理工作。</p><p><strong>如何配置聚合：</strong></p><p>在总的聚合工程中使用 <code>modules/module</code> 标签组合，指定模块工程的相对路径即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>A<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>B<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>C<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>总结：</strong> 继承是用来做版本管理、聚合是用来方便构建，二者并不冲突，可以同时使用</p><ul><li><strong>Maven 的聚合特性：</strong> 可以把项目的多个模块聚合在一起，使用一条命令进行构建，即一条命令实现构建多个项目；聚合模块知道它聚合了哪些模块，但是被聚合的模块不知道聚合模块的存在；即：子模块可以不把聚合工程作为 parent，但聚合工程必须写 modules</li><li><strong>Maven 的继承特性：</strong> 可以将各个模块相同的依赖和插件配置提取出来，在简化 POM 的同时还可以促进各个模块配置的一致性。父模块不知道子模块的存在，但是子模块都必须知道自己的父模块是谁。即：父工程可以不用写 modules，但是子模块必须写 parent</li></ul><h1 id="九-私服的下载和搭建"><a class="markdownIt-Anchor" href="#九-私服的下载和搭建"></a> 九、私服的下载和搭建</h1><p>Maven 仓库管理也叫 Maven 私服或者代理仓库。使用 Maven 私服有两个目的：</p><ol><li>私服是一个介于开发者和远程仓库之间的代理，当私服上没有 jar 包会从互联网中央仓库自动下载</li><li>私服可以用来部署公司自己的 jar</li></ol><h2 id="1搭建私服"><a class="markdownIt-Anchor" href="#1搭建私服"></a> 1：搭建私服</h2><p><strong>下载地址：</strong> <a href="https://sonatype-download.global.ssl.fastly.net/repository/repositoryManager/3/nexus-3.21.1-01-win64.zip">windows</a> <a href="https://sonatype-download.global.ssl.fastly.net/repository/repositoryManager/3/nexus-3.21.1-01-unix.tar.gz">linux</a> <a href="https://sonatype-download.global.ssl.fastly.net/repository/repositoryManager/3/nexus-3.21.1-01-mac.tgz">mac</a></p><p><strong>安装：</strong></p><ol><li><p>解压</p><blockquote><p>nexus-x.x.x-x 目录为程序路径，里面有 bin 等目录</p><p>配置文件在：nexus-3.21.1-01\etc\nexus-default.properties</p><p>sonatype-work 目录为私服存储路径</p></blockquote></li><li><p>安装、启动、关闭、卸载</p><p>使用管理员运行 cmd，进入安装目录下的 bin 目录 (或者配置一个环境变量也可以)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装为一个windows服务</span></span><br><span class="line">nexus.exe /install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">nexus.exe /start</span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止</span></span><br><span class="line">nexus.exe /stop</span><br><span class="line"><span class="meta">#</span><span class="bash"> 从windows服务中卸载</span></span><br><span class="line">nexus.exe /uninstall </span><br></pre></td></tr></table></figure><p>浏览器输入：<code>localhost:8081</code> 即可进入</p><p>首次登录：</p><ul><li>用户名：admin；</li><li>2.x 密码为 admin123；</li><li>3.x 密码为 <code>你的安装目录</code>\sonatype-work\nexus3\admin.password，文本内容即为密码，进去之后提示修改密码及是否开启匿名访问</li></ul></li></ol><h2 id="2nexus-的仓库类型"><a class="markdownIt-Anchor" href="#2nexus-的仓库类型"></a> 2：Nexus 的仓库类型</h2><p>有三种类型的仓库：</p><ol><li>hosted：私库、宿主仓库、托管仓库，一般把自己开发的包上传到该仓库中。<ul><li>maven-releases：内部发行版本仓库</li><li>maven-snapshots：内部测试版本仓库</li><li>3rd Party：第三方库，如 Oracle 的 JDBC 驱动中央仓库就没有 (后来也加了)</li></ul></li><li>proxy：代理仓库，用于代理远程的公共仓库，如 maven 中央仓库，用户连接私服，私服自动去中央仓库下载 jar 包或者插件并返回。</li><li>group：仓库组，可以组合多个 hosted / proxy 仓库为一个地址提供服务</li></ol><p>简而言之，hosted 负责包上传，proxy 负责代理包，group 负责提供包。</p><p><strong>Maven 用到的 Repositories 说明：</strong></p><ul><li>maven-central：maven中央库，默认从 <a href="https://repo1.maven.org/maven2/">https://repo1.maven.org/maven2/</a> 拉取 jar</li><li>maven-releases：私库发行版 jar</li><li>maven-snapshots：私库快照（调试版本）jar</li><li>maven-public：仓库分组，把上面三个仓库组合在一起对外提供服务，在本地 maven 基础配置 settings.xml 中使用。</li></ul><h2 id="3添加仓库"><a class="markdownIt-Anchor" href="#3添加仓库"></a> 3：添加仓库</h2><p>以添加阿里云代理仓库为例：</p><p>1：点击创建仓库</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200306060336.png" alt="image-20200306060336" /></p><p>2：选择仓库类型，选择 maven2 代理仓 (可以看到 nexus 支持很多种类型的仓库)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200306060342.png" alt="image-20200306060342" /></p><p>3：将 仓库名 和 远程代理库地址两个填写完毕就可以直接创建了</p><blockquote><p>需要注意的是建立私库 (hosted类型)的时候，Hosted → Deployment policy 要选 Allow redeploy，否则无法部署jar</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Maven/01/image-20200306060356.png" alt="image-20200306060356" /></p><p>贴一下阿里云的代理库：</p><ul><li><p>public：</p><p>代理 Maven 中央仓库和 jcenter：<a href="https://repo1.maven.org/maven2/">https://repo1.maven.org/maven2/</a> <a href="http://jcenter.bintray.com/">http://jcenter.bintray.com/</a></p><p>阿里代理库地址：<a href="https://maven.aliyun.com/repository/public">https://maven.aliyun.com/repository/public</a></p></li><li><p>spring：</p><p>代理 spring 库：<a href="http://repo.spring.io/libs-milestone/">http://repo.spring.io/libs-milestone/</a></p><p>阿里代理库地址：<a href="https://maven.aliyun.com/repository/spring">https://maven.aliyun.com/repository/spring</a></p></li><li><p>spring-plugin：</p><p>代理 Spring 插件库：<a href="http://repo.spring.io/plugins-release/">http://repo.spring.io/plugins-release/</a></p><p>阿里代理库地址：<a href="https://maven.aliyun.com/repository/spring-plugin">https://maven.aliyun.com/repository/spring-plugin</a></p></li><li><p>google：</p><p>代理谷歌 maven仓库：<a href="https://maven.google.com/">https://maven.google.com/</a></p><p>阿里代理库地址：<a href="https://maven.aliyun.com/repository/google">https://maven.aliyun.com/repository/google</a></p></li></ul><h2 id="4上传-jar-包到私服"><a class="markdownIt-Anchor" href="#4上传-jar-包到私服"></a> 4：上传 jar 包到私服</h2><p>1：配置账号和密码 – 在 <code>maven/conf/settings.xml</code> 中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2：指定上传的位置 – 在要上传的项目的 pom 文件中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 上传的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/repository/maven-releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/repository/maven-snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3：项目执行 deploy</p><h2 id="5从私服下载-jar-包到本地仓库"><a class="markdownIt-Anchor" href="#5从私服下载-jar-包到本地仓库"></a> 5：从私服下载  jar 包到本地仓库</h2><p>在 maven/conf/settings.xml 中配置</p><p>1：配置下载路径</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 下载的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span>   </span><br><span class="line">    <span class="comment">&lt;!-- profile的id --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!-- 仓库id，repositories可以配置多个仓库，保证id不重复 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span>   </span><br><span class="line">            <span class="comment">&lt;!-- 仓库地址，即nexus仓库组的地址 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>   </span><br><span class="line">            <span class="comment">&lt;!-- 是否下载releases构件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span>   </span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span>   </span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>   </span><br><span class="line">            <span class="comment">&lt;!-- 是否下载snapshots构件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>   </span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span>   </span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 插件仓库，maven的运行依赖插件，也需要从私服下载插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!-- 插件仓库的id不允许重复，如果重复后边配置会覆盖前边 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Public Repositories<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span>  </span><br></pre></td></tr></table></figure><p>2：指定下载位置的模板</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 激活下载的地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6将第三方-jar-安装到私服"><a class="markdownIt-Anchor" href="#6将第三方-jar-安装到私服"></a> 6：将第三方 jar 安装到私服</h2><p>如何安装到本地：以 Oracle 的 jar 包进行测试，先 CMD 进入到 jar 包所在位置，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile= fastjson-1.1.37.jar -DgroupId=com.alibaba -DartifactId=fastjson -Dversion=1.1.37 -Dpackaging=jar</span><br></pre></td></tr></table></figure><p>如何上传到私服：</p><ol><li><p>下载 jar 包</p></li><li><p>maven 的 settings.xml 配置第三方库的server信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>thridparty<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>进入jar包所在目录运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn deploy:deploy-file -Dfile=fastjson-1.1.37.jar -DgroupId=com.alibaba -DartifactId=fastjson -Dversion=1.1.37 -Dpackaging=jar -Durl=http://localhost:8081/repository/maven-thirdparty/ -DrepositoryId=thirdparty</span><br></pre></td></tr></table></figure></li></ol><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>备份 setting.xml</span></div>    <div class="hide-content"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment">or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment">distributed with this work for additional information</span></span><br><span class="line"><span class="comment">regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment">to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment">&quot;License&quot;); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment">with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Unless required by applicable law or agreed to in writing,</span></span><br><span class="line"><span class="comment">software distributed under the License is distributed on an</span></span><br><span class="line"><span class="comment">&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span><br><span class="line"><span class="comment">KIND, either express or implied.  See the License for the</span></span><br><span class="line"><span class="comment">specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment">under the License.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> | This is the configuration file for Maven. It can be specified at two levels:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  1. User Level. This settings.xml file provides configuration for a single user,</span></span><br><span class="line"><span class="comment"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -s /path/to/user/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  2. Global Level. This settings.xml file provides configuration for all Maven</span></span><br><span class="line"><span class="comment"> |                 users on a machine (assuming they&#x27;re all using the same Maven</span></span><br><span class="line"><span class="comment"> |                 installation). It&#x27;s normally provided in</span></span><br><span class="line"><span class="comment"> |                 $&#123;maven.conf&#125;/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -gs /path/to/global/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | The sections in this sample file are intended to give you a running start at</span></span><br><span class="line"><span class="comment"> | getting the most out of your Maven installation. Where appropriate, the default</span></span><br><span class="line"><span class="comment"> | values (values used when the setting is not specified) are provided.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">     | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">    &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\develop\maven\maven_repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- interactiveMode</span></span><br><span class="line"><span class="comment">     | This will determine whether maven prompts you when it needs input. If set to false,</span></span><br><span class="line"><span class="comment">     | maven will use a sensible default value, perhaps based on some other setting, for</span></span><br><span class="line"><span class="comment">     | the parameter in question.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | Default: true</span></span><br><span class="line"><span class="comment">    &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- offline</span></span><br><span class="line"><span class="comment">     | Determines whether maven should attempt to connect to the network when executing a build.</span></span><br><span class="line"><span class="comment">     | This will have an effect on artifact downloads, artifact deployment, and others.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | Default: false</span></span><br><span class="line"><span class="comment">    &lt;offline&gt;false&lt;/offline&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- pluginGroups</span></span><br><span class="line"><span class="comment">     | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</span></span><br><span class="line"><span class="comment">     | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers</span></span><br><span class="line"><span class="comment">     | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list.</span></span><br><span class="line"><span class="comment">     |--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- pluginGroup</span></span><br><span class="line"><span class="comment">         | Specifies a further group identifier to use for plugin lookup.</span></span><br><span class="line"><span class="comment">        &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- proxies</span></span><br><span class="line"><span class="comment">     | This is a list of proxies which can be used on this machine to connect to the network.</span></span><br><span class="line"><span class="comment">     | Unless otherwise specified (by system property or command-line switch), the first proxy</span></span><br><span class="line"><span class="comment">     | specification in this list marked as active will be used.</span></span><br><span class="line"><span class="comment">     |--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- proxy</span></span><br><span class="line"><span class="comment">         | Specification for one proxy, to be used in connecting to the network.</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">        &lt;proxy&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;optional&lt;/id&gt;</span></span><br><span class="line"><span class="comment">          &lt;active&gt;true&lt;/active&gt;</span></span><br><span class="line"><span class="comment">          &lt;protocol&gt;http&lt;/protocol&gt;</span></span><br><span class="line"><span class="comment">          &lt;username&gt;proxyuser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">          &lt;password&gt;proxypass&lt;/password&gt;</span></span><br><span class="line"><span class="comment">          &lt;host&gt;proxy.host.net&lt;/host&gt;</span></span><br><span class="line"><span class="comment">          &lt;port&gt;80&lt;/port&gt;</span></span><br><span class="line"><span class="comment">          &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</span></span><br><span class="line"><span class="comment">        &lt;/proxy&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- servers</span></span><br><span class="line"><span class="comment">     | This is a list of authentication profiles, keyed by the server-id used within the system.</span></span><br><span class="line"><span class="comment">     | Authentication profiles can be used whenever maven must make a connection to a remote server.</span></span><br><span class="line"><span class="comment">     |--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- server</span></span><br><span class="line"><span class="comment">         | Specifies the authentication information to use when connecting to a particular server, identified by</span></span><br><span class="line"><span class="comment">         | a unique name within the system (referred to by the &#x27;id&#x27; attribute below).</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">         | <span class="doctag">NOTE:</span> You should either specify username/password OR privateKey/passphrase, since these pairings are</span></span><br><span class="line"><span class="comment">         |       used together.</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">        &lt;server&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;deploymentRepo&lt;/id&gt;</span></span><br><span class="line"><span class="comment">          &lt;username&gt;repouser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">          &lt;password&gt;repopwd&lt;/password&gt;</span></span><br><span class="line"><span class="comment">        &lt;/server&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Another sample, using keys to authenticate.</span></span><br><span class="line"><span class="comment">        &lt;server&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;siteServer&lt;/id&gt;</span></span><br><span class="line"><span class="comment">          &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;</span></span><br><span class="line"><span class="comment">          &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</span></span><br><span class="line"><span class="comment">        &lt;/server&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 上传私服时需要配置账号密码</span></span><br><span class="line"><span class="comment">        &lt;server&gt;</span></span><br><span class="line"><span class="comment">            &lt;id&gt;releases&lt;/id&gt;</span></span><br><span class="line"><span class="comment">            &lt;username&gt;admin&lt;/username&gt;</span></span><br><span class="line"><span class="comment">            &lt;password&gt;Petrel12345&lt;/password&gt;</span></span><br><span class="line"><span class="comment">        &lt;/server&gt;</span></span><br><span class="line"><span class="comment">        &lt;server&gt;</span></span><br><span class="line"><span class="comment">            &lt;id&gt;snapshots&lt;/id&gt;</span></span><br><span class="line"><span class="comment">            &lt;username&gt;admin&lt;/username&gt;</span></span><br><span class="line"><span class="comment">            &lt;password&gt;Petrel12345&lt;/password&gt;</span></span><br><span class="line"><span class="comment">        &lt;/server&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- mirrors</span></span><br><span class="line"><span class="comment">     | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | It works like this: a POM may declare a repository to use in resolving certain artifacts.</span></span><br><span class="line"><span class="comment">     | However, this repository may have problems with heavy traffic at times, so people have mirrored</span></span><br><span class="line"><span class="comment">     | it to several places.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | That repository definition will have a unique id, so we can create a mirror reference for that</span></span><br><span class="line"><span class="comment">     | repository, to be used as an alternate download site. The mirror site will be the preferred</span></span><br><span class="line"><span class="comment">     | server for that repository.</span></span><br><span class="line"><span class="comment">     |--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">         | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">         | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">         | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">        &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">          &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">        &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mirror的主要作用:定义远程仓库的镜像,缓解远程仓库的压力 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 那个仓库需要走镜像,值是repositoryId,*代表所有仓库,所以记得如果配置了私服时不要用* --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central,jcenter<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- profiles</span></span><br><span class="line"><span class="comment">     | This is a list of profiles which can be activated in a variety of ways, and which can modify</span></span><br><span class="line"><span class="comment">     | the build process. Profiles provided in the settings.xml are intended to provide local machine-</span></span><br><span class="line"><span class="comment">     | specific paths and repository locations which allow the build to work in the local environment.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | For example, if you have an integration testing plugin - like cactus - that needs to know where</span></span><br><span class="line"><span class="comment">     | your Tomcat instance is installed, you can provide a variable here such that the variable is</span></span><br><span class="line"><span class="comment">     | dereferenced during the build process to configure the cactus plugin.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</span></span><br><span class="line"><span class="comment">     | section of this document (settings.xml) - will be discussed later. Another way essentially</span></span><br><span class="line"><span class="comment">     | relies on the detection of a system property, either matching a particular value for the property,</span></span><br><span class="line"><span class="comment">     | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</span></span><br><span class="line"><span class="comment">     | value of &#x27;1.4&#x27; might activate a profile when the build is executed on a JDK version of &#x27;1.4.2_07&#x27;.</span></span><br><span class="line"><span class="comment">     | Finally, the list of active profiles can be specified directly from the command line.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> For profiles defined in the settings.xml, you are restricted to specifying only artifact</span></span><br><span class="line"><span class="comment">     |       repositories, plugin repositories, and free-form properties to be used as configuration</span></span><br><span class="line"><span class="comment">     |       variables for plugins in the POM.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     |--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- profile</span></span><br><span class="line"><span class="comment">         | Specifies a set of introductions to the build process, to be activated using one or more of the</span></span><br><span class="line"><span class="comment">         | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</span></span><br><span class="line"><span class="comment">         | or the command line, profiles have to have an ID that is unique.</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">         | An encouraged best practice for profile identification is to use a consistent naming convention</span></span><br><span class="line"><span class="comment">         | for profiles, such as &#x27;env-dev&#x27;, &#x27;env-test&#x27;, &#x27;env-production&#x27;, &#x27;user-jdcasey&#x27;, &#x27;user-brett&#x27;, etc.</span></span><br><span class="line"><span class="comment">         | This will make it more intuitive to understand what the set of introduced profiles is attempting</span></span><br><span class="line"><span class="comment">         | to accomplish, particularly when you only have a list of profile id&#x27;s for debug.</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">         | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</span></span><br><span class="line"><span class="comment">        &lt;profile&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;jdk-1.4&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          &lt;activation&gt;</span></span><br><span class="line"><span class="comment">            &lt;jdk&gt;1.4&lt;/jdk&gt;</span></span><br><span class="line"><span class="comment">          &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          &lt;repositories&gt;</span></span><br><span class="line"><span class="comment">            &lt;repository&gt;</span></span><br><span class="line"><span class="comment">              &lt;id&gt;jdk14&lt;/id&gt;</span></span><br><span class="line"><span class="comment">              &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt;</span></span><br><span class="line"><span class="comment">              &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt;</span></span><br><span class="line"><span class="comment">              &lt;layout&gt;default&lt;/layout&gt;</span></span><br><span class="line"><span class="comment">              &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;</span></span><br><span class="line"><span class="comment">            &lt;/repository&gt;</span></span><br><span class="line"><span class="comment">          &lt;/repositories&gt;</span></span><br><span class="line"><span class="comment">        &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 私服配置,若要取消注释使用IDEA快捷键即可正常显示 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &amp;lt;!&amp;ndash;下载的位置 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">        &lt;profile&gt;</span></span><br><span class="line"><span class="comment">            &amp;lt;!&amp;ndash; profile的id &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">            &lt;id&gt;dev&lt;/id&gt;</span></span><br><span class="line"><span class="comment">            &lt;repositories&gt;</span></span><br><span class="line"><span class="comment">                &lt;repository&gt;</span></span><br><span class="line"><span class="comment">                    &amp;lt;!&amp;ndash; 仓库id，repositories可以配置多个仓库，保证id不重复 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">                    &lt;id&gt;nexus&lt;/id&gt;</span></span><br><span class="line"><span class="comment">                    &amp;lt;!&amp;ndash; 仓库地址，即nexus仓库组的地址 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">                    &lt;url&gt;http://localhost:8081/repository/maven-public/&lt;/url&gt;</span></span><br><span class="line"><span class="comment">                    &amp;lt;!&amp;ndash; 是否下载releases构件 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">                    &lt;releases&gt;</span></span><br><span class="line"><span class="comment">                        &lt;enabled&gt;true&lt;/enabled&gt;</span></span><br><span class="line"><span class="comment">                    &lt;/releases&gt;</span></span><br><span class="line"><span class="comment">                    &amp;lt;!&amp;ndash; 是否下载snapshots构件 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">                    &lt;snapshots&gt;</span></span><br><span class="line"><span class="comment">                        &lt;enabled&gt;true&lt;/enabled&gt;</span></span><br><span class="line"><span class="comment">                    &lt;/snapshots&gt;</span></span><br><span class="line"><span class="comment">                &lt;/repository&gt;</span></span><br><span class="line"><span class="comment">            &lt;/repositories&gt;</span></span><br><span class="line"><span class="comment">            &lt;pluginRepositories&gt;</span></span><br><span class="line"><span class="comment">                &amp;lt;!&amp;ndash; 插件仓库，maven的运行依赖插件，也需要从私服下载插件 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">                &lt;pluginRepository&gt;</span></span><br><span class="line"><span class="comment">                    &amp;lt;!&amp;ndash; 插件仓库的id不允许重复，如果重复后边配置会覆盖前边 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">                    &lt;id&gt;public&lt;/id&gt;</span></span><br><span class="line"><span class="comment">                    &lt;name&gt;Public Repositories&lt;/name&gt;</span></span><br><span class="line"><span class="comment">                    &lt;url&gt;http://localhost:8081/repository/maven-public/&lt;/url&gt;</span></span><br><span class="line"><span class="comment">                &lt;/pluginRepository&gt;</span></span><br><span class="line"><span class="comment">            &lt;/pluginRepositories&gt;</span></span><br><span class="line"><span class="comment">        &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunProxy<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 走镜像 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo1.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 走镜像 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>jcenter<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://jcenter.bintray.com/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>google<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/google<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-plugin<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-plugin<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-plugin Repositories<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring-plugin<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">         | Here is another profile, activated by the system property &#x27;target-env&#x27; with a value of &#x27;dev&#x27;,</span></span><br><span class="line"><span class="comment">         | which provides a specific path to the Tomcat instance. To use this, your plugin configuration</span></span><br><span class="line"><span class="comment">         | might hypothetically look like:</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">         | ...</span></span><br><span class="line"><span class="comment">         | &lt;plugin&gt;</span></span><br><span class="line"><span class="comment">         |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">         |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">         |   &lt;configuration&gt;</span></span><br><span class="line"><span class="comment">         |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</span></span><br><span class="line"><span class="comment">         |   &lt;/configuration&gt;</span></span><br><span class="line"><span class="comment">         | &lt;/plugin&gt;</span></span><br><span class="line"><span class="comment">         | ...</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">         | <span class="doctag">NOTE:</span> If you just wanted to inject this configuration whenever someone set &#x27;target-env&#x27; to</span></span><br><span class="line"><span class="comment">         |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</span></span><br><span class="line"><span class="comment">         |</span></span><br><span class="line"><span class="comment">        &lt;profile&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;env-dev&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          &lt;activation&gt;</span></span><br><span class="line"><span class="comment">            &lt;property&gt;</span></span><br><span class="line"><span class="comment">              &lt;name&gt;target-env&lt;/name&gt;</span></span><br><span class="line"><span class="comment">              &lt;value&gt;dev&lt;/value&gt;</span></span><br><span class="line"><span class="comment">            &lt;/property&gt;</span></span><br><span class="line"><span class="comment">          &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          &lt;properties&gt;</span></span><br><span class="line"><span class="comment">            &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</span></span><br><span class="line"><span class="comment">          &lt;/properties&gt;</span></span><br><span class="line"><span class="comment">        &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- activeProfiles</span></span><br><span class="line"><span class="comment">     | List of profiles that are active for all builds.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;activeProfiles&gt;</span></span><br><span class="line"><span class="comment">      &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">      &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">    &lt;/activeProfiles&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 激活上边的私服配置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;activeProfiles&gt;</span></span><br><span class="line"><span class="comment">        &lt;activeProfile&gt;dev&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">    &lt;/activeProfiles&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>aliyunProxy<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>jdk1.8<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 项目构建工具 </category>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB 基础使用</title>
      <link href="/article/58e2ce68/"/>
      <url>/article/58e2ce68/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> 非关系型 </category>
          
          <category> MongoDB </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis 基础使用</title>
      <link href="/article/387fffe9/"/>
      <url>/article/387fffe9/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> 非关系型 </category>
          
          <category> Redis </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Oracle 基础使用</title>
      <link href="/article/f5bb2df6/"/>
      <url>/article/f5bb2df6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> 关系型 </category>
          
          <category> Oracle </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 基础使用</title>
      <link href="/article/9067d637/"/>
      <url>/article/9067d637/</url>
      
        <content type="html"><![CDATA[<h1 id="一-数据库介绍"><a class="markdownIt-Anchor" href="#一-数据库介绍"></a> 一、数据库介绍</h1><h2 id="1概述"><a class="markdownIt-Anchor" href="#1概述"></a> 1：概述</h2><p><strong>什么是数据库：</strong> 数据库 (DataBase，<strong>DB</strong>) 就是存储数据的仓库，其本质是一个文件系统，数据按照特定的格式将数据存储起来，用户可以对数据库中的数据进行增加，修改，删除及查询操作。</p><p><strong>什么是数据库管理系统：</strong> 数据库管理系统（DataBase Management System，<strong>DBMS</strong>）：指一种操作和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制，以保证数据库的安全性和完整性。用户通过数据库管理系统访问数据库中表内的数据。</p><p><strong>数据库与数据库管理系统的关系：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728150710.jpg" alt="image-20190728150710" /></p><h2 id="2数据库表"><a class="markdownIt-Anchor" href="#2数据库表"></a> 2：数据库表</h2><p>数据库中以表为组织单位存储数据。表类似 Java 类，每个字段都有对应的数据类型。</p><p>类 → 表<br />类中属性 → 表中字段<br />对象 → 记录</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728150730.jpg" alt="image-20190728150730" /></p><h2 id="3表数据"><a class="markdownIt-Anchor" href="#3表数据"></a> 3：表数据</h2><p>根据表字段所规定的数据类型，可以向其中填入一条条的数据，而表中的每条数据类似类的实例对象。表中的<br />一行一行的信息我们称之为记录。</p><p>表记录与 java 类对象的对应关系：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728150738.jpg" alt="image-20190728150738" /></p><h2 id="4常见数据库"><a class="markdownIt-Anchor" href="#4常见数据库"></a> 4：常见数据库</h2><p><strong>常见关系型数据库管理系统：</strong></p><ul><li><strong>MySQL：</strong> 开源免费的数据库，小型的数据库。已经被 Oracle 收购了，MySQL6.x 版本也开始收费。</li><li><strong>Oracle：</strong> 收费的大型数据库，Oracle 公司的产品。Oracle 收购 SUN 公司，收购 MySQL。</li><li><strong>DB2 ：</strong> IBM 公司的数据库产品,收费的。常应用在银行系统中。</li><li><strong>SQLServer：</strong> MicroSoft 公司收费的中型的数据库。C#、.net 等语言常使用。</li><li><strong>SyBase：</strong> 已经淡出历史舞台。提供了一个非常专业数据建模的工具 PowerDesigner。</li><li><strong>SQLite：</strong> 嵌入式的小型数据库，应用在手机端。</li></ul><p><strong>非关系型数据库：Redis，MongoDB</strong></p><h1 id="二-mysql-安装"><a class="markdownIt-Anchor" href="#二-mysql-安装"></a> 二、MySQL 安装</h1><p>参考：<a href="/article/e2f925a8">MySQL 安装指南</a></p><p><strong>连接 Mysql：</strong></p><ul><li><p>方式一：cmd 输入  <code>mysql -u用户名 -p密码</code></p></li><li><p>方式二：cmd 输入 <code>mysql --host=ip地址 --user=用户名 --password=密码</code> 简写：<code>Mysql -h127.0.0.1 -uroot -proot</code></p></li><li><p>方式三：使用图形化管理工具</p></li></ul><p><strong>退出：</strong> <code>\q</code>、<code>exit</code>、<code>quit</code></p><p><strong>Mysql 安装目录中的两个重要文件：</strong></p><ul><li><p>安装目录中有个 my.ini (重要：配置文件)</p></li><li><p>数据目录：my.ini 中 datadir 的值，一个数据库对应一个文件夹，一张表对应一个 frm 文件</p></li></ul><h1 id="三-sql-语句"><a class="markdownIt-Anchor" href="#三-sql-语句"></a> 三、SQL 语句</h1><p><strong>SQL：</strong> Structured Query Language：结构化查询语言，<strong>用于与数据库交互</strong></p><p>SQL是 <strong>关系型</strong> 数据库管理系统都需要遵循的规范。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728160752.png" alt="image-20190728160752" /></p><h2 id="1sql分类"><a class="markdownIt-Anchor" href="#1sql分类"></a> 1：SQL分类</h2><p><strong>DDL</strong> (Data Definition Language) <strong>数据定义</strong> 语言，用来定义数据库对象：数据库，表，列等。<strong>关键字：</strong> create、drop、alter 等</p><p><strong>DML</strong> (Data Manipulation Language) <strong>数据操作</strong> 语言，用来对数据库中表的数据进行增删改。<strong>关键字：</strong> insert、delete、update 等</p><p><strong>DQL</strong> (Data Query Language) <strong>数据查询</strong> 语言，用来查询数据库中表的记录(数据)。<strong>关键字：</strong> select、where 等</p><p><strong>DCL</strong> (Data Control Language) <strong>数据控制</strong> 语言(了解)，用来定义数据库的访问权限和安全级别，及创建用户。<strong>关键字：</strong> GRANT、REVOKE 等</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728160732.png" alt="image-20190728160732" /></p><h2 id="2sql通用语法"><a class="markdownIt-Anchor" href="#2sql通用语法"></a> 2：SQL通用语法</h2><p>SQL 语句可以单行或多行书写，以分号结尾。</p><p>可使用空格和缩进来增强语句的可读性。</p><p>MySQL 数据库的 SQL 语句不区分大小写，关键字建议使用大写。</p><p>3 种注释：</p><ul><li>单行注释: <code>-- 注释内容</code> 或 <code>#注释内容(mysql 特有)</code></li><li>多行注释: <code>/* 注释 */</code></li></ul><h2 id="3ddl操作数据库-表"><a class="markdownIt-Anchor" href="#3ddl操作数据库-表"></a> 3：DDL–操作数据库、表</h2><blockquote><p>Data Definition Language (数据定义语言)：用来定义数据库对象：数据库，表，列等。</p><p>关键字：create, drop,alter 等</p></blockquote><h3 id="31操作数据库"><a class="markdownIt-Anchor" href="#31操作数据库"></a> 3.1：操作数据库</h3><p><strong>创建：Create</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名称;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建数据库，判断不存在再创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> 名称;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建数据库，并指定字符集</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名称 <span class="built_in">character</span> <span class="keyword">set</span> 字符集名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 练习：创建db4数据库，判断是否存在，并指定字符集为gbk</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> db4 <span class="built_in">character</span> <span class="keyword">set</span> gbk;</span><br></pre></td></tr></table></figure><p><strong>查询：Retrieve</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有数据库的名称</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 查询某个数据库的字符集</span></span><br><span class="line"><span class="comment"> * 查询某个数据库的创建语句 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> 数据库名称;</span><br></pre></td></tr></table></figure><p><strong>修改：Update</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改数据库的字符集</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> 数据库名称 <span class="built_in">character</span> <span class="keyword">set</span> 字符集名称;</span><br></pre></td></tr></table></figure><p><strong>删除：Delete</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除数据库</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名称;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 判断数据库存在，存在再删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">exists</span> 数据库名称;</span><br></pre></td></tr></table></figure><p><strong>使用数据库</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询当前正在使用的数据库名称</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">database</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用数据库</span></span><br><span class="line"><span class="keyword">use</span> 数据库名称;</span><br></pre></td></tr></table></figure><h3 id="32常用数据类型"><a class="markdownIt-Anchor" href="#32常用数据类型"></a> 3.2：常用数据类型</h3><p>下边表操作中要用到数据类型，把 MySQL 中常用的几种数据类型说一下</p><table><thead><tr><th>类型名称</th><th>说明</th></tr></thead><tbody><tr><td>int</td><td>整数类型</td></tr><tr><td>double(m,n)</td><td>小数类型，指定整数位与小数位长度，存储值最大为 16 位</td></tr><tr><td>decimal(m,d)</td><td>小数类型，指定整数位与小数位长度，存储值最大为 38 位</td></tr><tr><td>date</td><td>日期类型，格式为：yyyy-MM-dd，包含年月日，不包含时分秒</td></tr><tr><td>datetime</td><td>日期类型，格式为：YYYY-MM-DD HH:MM:SS，包含年月日时分秒</td></tr><tr><td>timestamp</td><td>日期类型，时间戳</td></tr><tr><td>varchar(M)</td><td>文本类型， M为0~65535之间的整数</td></tr></tbody></table><p>注意事项：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 整型</span></span><br><span class="line">int <span class="comment"># 例: age int;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 小数类型</span></span><br><span class="line">double 例：score double(5,2); <span class="comment"># 一共5位，小数有两位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 时间</span></span><br><span class="line">date <span class="comment">-- 日期类型，只包含年月日，yyyy-MM-dd</span></span><br><span class="line">datetime <span class="comment">-- 日期，包含年月日时分秒  yyyy-MM-dd HH:mm:ss</span></span><br><span class="line">timestamp <span class="comment">-- 时间戳，包含年月日时分秒  yyyy-MM-dd HH:mm:ss 如果不给这个字段赋值，或赋值为null，则默认使用当前的系统时间，来自动赋值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符串</span></span><br><span class="line">varchar <span class="comment"># 例: name varchar(20); 姓名最大20个字符</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 张三  2个字符</span></span><br><span class="line"><span class="comment"> * zhangsan 8个字符  </span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h3 id="33操作表"><a class="markdownIt-Anchor" href="#33操作表"></a> 3.3：操作表</h3><p><strong>创建：Create</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">    列名<span class="number">1</span> 数据类型<span class="number">1</span>,</span><br><span class="line">    列名<span class="number">2</span> 数据类型<span class="number">2</span>,</span><br><span class="line">    ....</span><br><span class="line">    列名n 数据类型n <span class="comment">-- 注意：最后一列，不需要加逗号,</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 例子</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    age <span class="built_in">int</span> ,</span><br><span class="line">    score <span class="keyword">double</span>(<span class="number">4</span>,<span class="number">1</span>),</span><br><span class="line">    birthday <span class="built_in">date</span>,</span><br><span class="line">    insert_time <span class="built_in">timestamp</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 复制表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 <span class="keyword">like</span> 被复制的表名;</span><br></pre></td></tr></table></figure><p><strong>查询：Retrieve</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询某个数据库中所有的表名称</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表结构</span></span><br><span class="line">desc 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表的字符集</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span>表名；</span><br></pre></td></tr></table></figure><p><strong>修改：Update</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">rename</span> <span class="keyword">to</span> 新的表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改表的字符集</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="built_in">character</span> <span class="keyword">set</span> 字符集名称;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加一列多列需要多个add用逗号隔开</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改列名称、类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> 列名 新列名 新数据类型;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> 列名 新数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 列名;</span><br></pre></td></tr></table></figure><p><strong>删除：Delete</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 判断是否存在，存在就删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> 表名;</span><br></pre></td></tr></table></figure><h2 id="4dml增删改表中的数据"><a class="markdownIt-Anchor" href="#4dml增删改表中的数据"></a> 4：DML–增删改表中的数据</h2><blockquote><p>Data Manipulation Language (数据操作语言)：用来对数据库中表的数据进行增删改。</p><p>关键字：insert, delete, update 等</p></blockquote><h3 id="41添加数据"><a class="markdownIt-Anchor" href="#41添加数据"></a> 4.1：添加数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名( 列名<span class="number">1</span>, 列名<span class="number">2</span>,...列名n) <span class="keyword">values</span>(值<span class="number">1</span>, 值<span class="number">2</span>,...值n);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 注意：</span></span><br><span class="line"><span class="comment">  1. 列名和值要一一对应。</span></span><br><span class="line"><span class="comment">  2. 如果表名后，不定义列名，则默认给所有列添加值，如：insert into 表名 values(值1,值2,...值n);</span></span><br><span class="line"><span class="comment">  3. 除了数字类型，其他类型需要使用引号(单双都可以)引起来</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="42删除数据"><a class="markdownIt-Anchor" href="#42删除数据"></a> 4.2：删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 注意:</span></span><br><span class="line"><span class="comment">  1. 如果不加条件，则删除表中所有记录。</span></span><br><span class="line"><span class="comment">  2. 如果要删除所有记录</span></span><br><span class="line"><span class="comment">    1.delete from 表名; -- 不推荐使用。有多少条记录就会执行多少次删除操作</span></span><br><span class="line"><span class="comment">    2.truncate table 表名; -- 推荐使用，效率更高 先删除表，然后再创建一张一样的表。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="43修改数据"><a class="markdownIt-Anchor" href="#43修改数据"></a> 4.3：修改数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名<span class="number">1</span>=值<span class="number">1</span>, 列名<span class="number">2</span>=值<span class="number">2</span>,...  <span class="keyword">where</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意：如果不加任何条件，则会将表中所有记录全部修改。</span></span><br></pre></td></tr></table></figure><h2 id="5dql数据查询"><a class="markdownIt-Anchor" href="#5dql数据查询"></a> 5：DQL–数据查询</h2><blockquote><p>Data Query Language (数据查询语言)：用来查询数据库中表的记录(数据)。</p><p>关键字：select, where 等</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">select</span>   字段列表</span><br><span class="line"><span class="keyword">from</span>   表名列表</span><br><span class="line"><span class="keyword">where</span>   条件列表</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 分组字段</span><br><span class="line"><span class="keyword">having</span>   分组之后的条件</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 排序</span><br><span class="line"><span class="keyword">limit</span>    分页限定</span><br></pre></td></tr></table></figure><h3 id="51基础查询-select"><a class="markdownIt-Anchor" href="#51基础查询-select"></a> 5.1：基础查询 – select</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多个字段的查询</span></span><br><span class="line"><span class="keyword">select</span> 字段名<span class="number">1</span>，字段名<span class="number">2.</span>.. <span class="keyword">from</span> 表名；<span class="comment"># 如果查询所有字段，则可以使用 &quot;*&quot; 来替代字段列表。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 去除重复</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 字段名<span class="keyword">from</span> 表明;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 计算列</span></span><br><span class="line">可以使用四则运算计算一些列的值,一般只会进行数值型的计算</span><br><span class="line"><span class="comment"># null参与的运算，计算结果都为null</span></span><br><span class="line"></span><br><span class="line">解决方式：使用ifnull()</span><br><span class="line">格式：&quot;ifnull(表达式1,表达式2)&quot;</span><br><span class="line"><span class="comment"># 表达式1：哪个字段需要判断是否为null</span></span><br><span class="line"><span class="comment"># 如果该字段为null后的替换值。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 起别名：</span></span><br><span class="line">as：as 也可以省略</span><br><span class="line"><span class="comment">-- 例如：</span></span><br><span class="line">  <span class="keyword">select</span> </span><br><span class="line"><span class="keyword">name</span> 姓名</span><br><span class="line">math <span class="keyword">as</span> 数学</span><br><span class="line">english 英语</span><br><span class="line">math + infnull(english,<span class="number">0</span>) 总分</span><br><span class="line">  <span class="keyword">from</span></span><br><span class="line">    student;</span><br></pre></td></tr></table></figure><h3 id="52条件查询-where子句"><a class="markdownIt-Anchor" href="#52条件查询-where子句"></a> 5.2：条件查询 – where子句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用法</span></span><br><span class="line">where子句后跟条件</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 运算符</span></span><br><span class="line">&gt; 、&lt; 、&lt;= 、&gt;= 、= 、&lt;&gt;</span><br><span class="line"><span class="comment"># 例</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age&gt;=<span class="number">20</span>;<span class="comment">-- 查询年龄大于20的</span></span><br><span class="line"><span class="keyword">select</span> *  <span class="keyword">from</span> student <span class="keyword">where</span> age=<span class="number">20</span>;<span class="comment">-- 查询年龄等于20的</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age!=<span class="number">20</span>;<span class="comment">-- 查询年龄不等于20的</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age&lt;&gt;<span class="number">20</span>;<span class="comment">-- 查询年龄不等于20的</span></span><br><span class="line"></span><br><span class="line">and 或 &amp;&amp;、between...and</span><br><span class="line"><span class="comment"># 例：查找年龄大于等于20小于等于30</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">20</span> <span class="keyword">and</span> <span class="number">30</span>;<span class="comment">-- 推荐</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age&gt;=<span class="number">20</span>  <span class="keyword">and</span>  age&lt;=<span class="number">30</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age&gt;=<span class="number">20</span> &amp;&amp; age&lt;=<span class="number">30</span>;<span class="comment">-- 不推荐</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">or 或 || 、in(集合)</span><br><span class="line"><span class="comment"># 例：查找年龄为18，20，25的(满足任意条件就查出来)</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age <span class="keyword">in</span>(<span class="number">18</span>,<span class="number">20</span>,<span class="number">25</span>);<span class="comment">-- 推荐 查找没有英语成绩的</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age=<span class="number">18</span> <span class="keyword">or</span> age=<span class="number">20</span> <span class="keyword">or</span> age=<span class="number">25</span>;<span class="comment">-- 不推荐</span></span><br><span class="line"></span><br><span class="line">is null</span><br><span class="line"><span class="comment"># 例</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> english <span class="keyword">is</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> english = <span class="literal">null</span>;<span class="comment">-- 错误，nu11值不能使用=判断</span></span><br><span class="line"></span><br><span class="line">not  或 !</span><br><span class="line"><span class="comment"># 例：查找有英语成绩的</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> english <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> english != nu1l;<span class="comment">-- 错误，null值 不能使用!=判断</span></span><br></pre></td></tr></table></figure><h3 id="53模糊查询-like"><a class="markdownIt-Anchor" href="#53模糊查询-like"></a> 5.3：模糊查询 – like</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用法</span></span><br><span class="line">like：模糊查询</span><br><span class="line">  占位符：</span><br><span class="line">    _:单个任意字符</span><br><span class="line">    %：多个任意字符</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 例</span></span><br><span class="line"><span class="comment"># 查询姓马的人</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">&#x27;马%&#x27;</span>;</span><br><span class="line"><span class="comment"># 查询名字是两个字的人</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">&#x27;__&#x27;</span>;</span><br><span class="line"><span class="comment"># 查询名字中第二个字为德的人</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">&quot;_德%&quot;</span>;</span><br><span class="line"><span class="comment"># 查询名字中包含德的人</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">&quot;%德%&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="54排序查询-order-by-子句"><a class="markdownIt-Anchor" href="#54排序查询-order-by-子句"></a> 5.4：排序查询 – order by 子句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 格式</span></span><br><span class="line">order by 排序字段1 排序方式1 ，排序字段2 排序方式2...</span><br><span class="line">  <span class="comment"># 排序方式</span></span><br><span class="line">    ASC：升序，&#x27;默认的&#x27;</span><br><span class="line">    DESC：降序。</span><br><span class="line">  <span class="comment"># 如果有多个排序条件，则当前边的条件值一样时，才会判断第二条件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 例</span></span><br><span class="line"><span class="comment"># 数学成绩排序</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> math;<span class="comment">-- 默认按照升序排列</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> math <span class="keyword">asc</span>;<span class="comment">-- 升序排列</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> math <span class="keyword">desc</span>;<span class="comment">-- 降序排列</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果数学成绩一样按照英语成绩排序</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> math <span class="keyword">asc</span>, english <span class="keyword">asc</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> math <span class="keyword">asc</span>, english <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h3 id="55聚合函数-纵向计算"><a class="markdownIt-Anchor" href="#55聚合函数-纵向计算"></a> 5.5：聚合函数 – 纵向计算</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">聚合函数：将一列数据作为一个整体，进行纵向的计算。</span><br><span class="line"></span><br><span class="line">&quot;注意：聚合函数的计算，排除null值。&quot;</span><br><span class="line">解决方案：</span><br><span class="line">  1. 选择不包含非空的列进行计算</span><br><span class="line">  2. IFNULL函数</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 函数</span></span><br><span class="line">1. count：计算个数</span><br><span class="line">  1. 一般选择非空的列：主键</span><br><span class="line">  2. count(*)：一行数据只要一个不为null就算是一条数据</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 例</span></span><br><span class="line">  <span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">id</span>) <span class="keyword">as</span> 总人数 <span class="keyword">from</span> student;</span><br><span class="line">  <span class="comment"># 聚合函数的计算排除nul1值</span></span><br><span class="line">  <span class="keyword">select</span> <span class="keyword">count</span> (<span class="keyword">ifNUll</span>(english,<span class="number">0</span>)) <span class="string">&#x27;参考人数&#x27;</span> <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line">2. max：计算最大值</span><br><span class="line">  <span class="comment"># 例</span></span><br><span class="line">  <span class="keyword">select</span> <span class="keyword">max</span>(math) 数学最高分 <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line">3. min：计算最小值</span><br><span class="line"></span><br><span class="line">4. sum：计算和</span><br><span class="line">  <span class="comment"># 例</span></span><br><span class="line">  <span class="keyword">select</span> <span class="keyword">sum</span>(math) 班级数学总分 <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line">5. avg：计算平均值</span><br><span class="line">  <span class="comment"># 例</span></span><br><span class="line">  <span class="keyword">select</span> <span class="keyword">avg</span>(ifNU1l(english,<span class="number">0</span>)) 英语平均分,<span class="keyword">avg</span>(math) 数学平均分 <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h3 id="56分组查询-group-by"><a class="markdownIt-Anchor" href="#56分组查询-group-by"></a> 5.6：分组查询 – group by</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line">group by 分组字段；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意</span></span><br><span class="line">1. 分组之后查询的字段：分组字段、聚合函数</span><br><span class="line">2. where 和 having 的区别？</span><br><span class="line">  1. where 在分组之前进行限定，如果不满足条件，则不参与分组。</span><br><span class="line">     having在分组之后进行限定，如果不满足结果，则不会被查询出来</span><br><span class="line">  2. where 后不可以跟聚合函数，</span><br><span class="line">     having可以进行聚合函数的判断</span><br><span class="line"><span class="comment">-- 例</span></span><br><span class="line"><span class="comment"># 根据性别查询</span></span><br><span class="line"><span class="keyword">select</span> sex <span class="keyword">from</span> student <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询男女平均分及人数</span></span><br><span class="line"><span class="keyword">select</span> sex, <span class="keyword">avg</span>(math), <span class="keyword">count</span>(<span class="keyword">id</span>) <span class="keyword">from</span> student <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br><span class="line"><span class="keyword">select</span> sex 性别, <span class="keyword">avg</span>(math) 数学平均分, <span class="keyword">count</span>(<span class="keyword">id</span>) 人数 <span class="keyword">from</span> student <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只让数学成绩大于70的参与分组</span></span><br><span class="line"><span class="keyword">select</span> sex 性别, <span class="keyword">avg</span>(math) 数学平均分, <span class="keyword">count</span>(<span class="keyword">id</span>) 人数 <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> math&gt;<span class="number">70</span> <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只让数学成绩大于70的参与分组且分组后过滤人数低于两个人的</span></span><br><span class="line"><span class="keyword">select</span> sex 性别, <span class="keyword">avg</span>(math) 数学平均分, <span class="keyword">count</span>(<span class="keyword">id</span>) 人数 <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> math&gt;<span class="number">70</span> <span class="keyword">group</span> <span class="keyword">by</span> sex <span class="keyword">having</span> <span class="keyword">count</span>(<span class="keyword">id</span>)&gt;<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sex 性别, <span class="keyword">avg</span>(math) 数学平均分, <span class="keyword">count</span>(<span class="keyword">id</span>) 人数 <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> math&gt;<span class="number">70</span> <span class="keyword">group</span> <span class="keyword">by</span> sex <span class="keyword">having</span> 人数&gt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h3 id="57分页查询-limit"><a class="markdownIt-Anchor" href="#57分页查询-limit"></a> 5.7：分页查询 – limit</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">limit 是一个MySQL&quot;方言&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 语法</span></span><br><span class="line">limit 开始的索引,每页查询的条数;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 公式</span></span><br><span class="line">开始的索引 = (当前的页码 - 1)*每页显示的条数</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 例：每页显示3条</span></span><br><span class="line"><span class="comment"># 第一页</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">3</span>;</span><br><span class="line"><span class="comment"># 第二页</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">3</span>;</span><br><span class="line"><span class="comment"># 第三页</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">limit</span> <span class="number">6</span>,<span class="number">3</span>;</span><br></pre></td></tr></table></figure><h2 id="6dcl管理用户授权"><a class="markdownIt-Anchor" href="#6dcl管理用户授权"></a> 6：DCL–管理用户，授权</h2><p>DBA：数据库管理员</p><h3 id="61添加用户"><a class="markdownIt-Anchor" href="#61添加用户"></a> 6.1：添加用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="62删除用户"><a class="markdownIt-Anchor" href="#62删除用户"></a> 6.2：删除用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="63修改用户密码"><a class="markdownIt-Anchor" href="#63修改用户密码"></a> 6.3：修改用户密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span> = <span class="keyword">password</span>(<span class="string">&#x27;新密码&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span> = <span class="string">&#x27;用户名&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">password</span> <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> = <span class="keyword">password</span>(<span class="string">&#x27;新密码&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="64mysql-中忘记了-root-用户的密码"><a class="markdownIt-Anchor" href="#64mysql-中忘记了-root-用户的密码"></a> 6.4：mysql 中忘记了 root 用户的密码？</h3><ol><li><p>cmd → <code>net stop mysql</code> 停止 mysql 服务 (需要管理员运行该 cmd)</p></li><li><p>使用无验证方式启动 mysql 服务： <code>mysqld --skip-grant-tables</code></p></li><li><p>打开新的 cmd 窗口，直接输入 mysql 登录命令，无需输密码直接敲回车。就可以登录成功</p></li><li><p>输入以下代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span> = <span class="keyword">password</span>(<span class="string">&#x27;你的新密码&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span> = <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>关闭两个窗口</p></li><li><p>打开任务管理器，手动结束mysqld.exe 的进程</p></li><li><p>启动mysql服务</p></li><li><p>使用新密码登录。</p></li></ol><h3 id="65查询用户"><a class="markdownIt-Anchor" href="#65查询用户"></a> 6.5：查询用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 切换到mysql数据库</span></span><br><span class="line"><span class="keyword">use</span> myql;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询user表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line">通配符： % 表示可以在任意主机使用用户登录数据库</span><br></pre></td></tr></table></figure><h3 id="66权限管理"><a class="markdownIt-Anchor" href="#66权限管理"></a> 6.6：权限管理</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询权限</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@ <span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 授予权限</span></span><br><span class="line"><span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 数据库名.表名 <span class="keyword">to</span> <span class="string">&#x27;用户名&#x27;</span> @<span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line"><span class="comment"># 给张三用户授予所有权限，在任意数据库任意表上</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;zhangsan&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 撤销权限：</span></span><br><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 数据库名.表名 <span class="keyword">from</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">update</span> <span class="keyword">on</span> db3.<span class="string">`account`</span> <span class="keyword">from</span> <span class="string">&#x27;lisi&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="四-约束"><a class="markdownIt-Anchor" href="#四-约束"></a> 四、约束</h1><p><strong>概念：</strong> 对表中的数据进行限定，保证数据的正确性、有效性和完整性。</p><p><strong>分类：</strong></p><ol><li><strong>主键</strong> 约束：primary key</li><li><strong>非空</strong> 约束：not null</li><li><strong>唯一</strong> 约束：unique</li><li><strong>外键</strong> 约束：foreign key</li></ol><h2 id="1主键约束primary-key"><a class="markdownIt-Anchor" href="#1主键约束primary-key"></a> 1：主键约束：primary key</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键的特点</span></span><br><span class="line">1：非空且唯一</span><br><span class="line">2：一张表只能有一个字段为主键</span><br><span class="line">3：主键就是表中记录的唯一标识</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.在创建表时，添加主键约束</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu2(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.删除主键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu2 <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.创建完表后，添加主键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu2 <span class="keyword">modify</span> <span class="keyword">id</span> <span class="built_in">varchar</span>(<span class="number">20</span>) primary <span class="keyword">key</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 自动增长：</span></span><br><span class="line">概念：如果某一列是数值类型的，使用 auto_increment 可以来完成值得自动增长</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.创建表时添加自动增长(不一定非要是主键)</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu3(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.删除字段的自动增长</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu3 <span class="keyword">modify</span> <span class="keyword">id</span> <span class="built_in">int</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.创建完表之后添加自动增长</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu3 <span class="keyword">modify</span> <span class="keyword">id</span> <span class="built_in">int</span> auto_increment;</span><br></pre></td></tr></table></figure><h2 id="2非空约束not-null"><a class="markdownIt-Anchor" href="#2非空约束not-null"></a> 2：非空约束：not null</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">not null：值不能为null</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表时添加约束</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line">    </span><br><span class="line"><span class="comment">-- 删除name的非空约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu <span class="keyword">modify</span> <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表完后，添加非空约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu <span class="keyword">modify</span> <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h2 id="3唯一约束unique"><a class="markdownIt-Anchor" href="#3唯一约束unique"></a> 3：唯一约束：unique</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x27;注意&#x27;：mysql中，唯一约束限定的列的值可以有多个null</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表时，添加唯一约束</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu1(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    phone <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除唯一约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu1 <span class="keyword">drop</span> <span class="keyword">index</span> phone;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在创建完表后，添加唯一约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu1 <span class="keyword">modify</span> phone <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span>;</span><br></pre></td></tr></table></figure><h2 id="4外键约束foreign-key"><a class="markdownIt-Anchor" href="#4外键约束foreign-key"></a> 4：外键约束：foreign key</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">让表于表产生关系，从而保证数据的正确性。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在创建表时，可以添加外键</span></span><br><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">    ....</span><br><span class="line">    外键列</span><br><span class="line">    <span class="keyword">constraint</span> 外键名称 <span class="keyword">foreign</span> <span class="keyword">key</span> (外键列名称) </span><br><span class="line"><span class="keyword">references</span> 主表名称(主表列名称)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除外键</span></span><br><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> 外键名称;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表之后，添加外键</span></span><br><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 外键名称 <span class="keyword">foreign</span> <span class="keyword">key</span> (外键字段名称) </span><br><span class="line"><span class="keyword">references</span> 主表名称(主表列名称);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 级联操作</span></span><br><span class="line">1.添加级联操作</span><br><span class="line">  <span class="comment"># 语法</span></span><br><span class="line">  <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 外键名称 </span><br><span class="line">  <span class="keyword">foreign</span> <span class="keyword">key</span> (外键字段名称) <span class="keyword">references</span> 主表名称(主表列名称) </span><br><span class="line">  <span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">cascade</span> <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">cascade</span>;</span><br><span class="line">2.分类：</span><br><span class="line">  1.级联更新：on <span class="keyword">update</span> <span class="keyword">cascade</span> </span><br><span class="line">  <span class="number">2.</span>级联删除：<span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">cascade</span></span><br></pre></td></tr></table></figure><h1 id="五-数据库设计"><a class="markdownIt-Anchor" href="#五-数据库设计"></a> 五、数据库设计</h1><p>前边主要是单表操作，下边说一说多表操作</p><p>主要内容：多表之间的关系、实现关系、三大范式</p><h2 id="1多表之间的关系"><a class="markdownIt-Anchor" href="#1多表之间的关系"></a> 1：多表之间的关系</h2><p>有如下几种：</p><ul><li><p><strong>一对一：</strong></p><p>如：人和身份证，分析：一个人只有一个身份证，一个身份证只能对应一个人</p></li><li><p><strong>一对多(多对一)：</strong></p><p>如：部门和员工，分析：一个部门有多个员工，一个员工只能对应一个部门</p></li><li><p><strong>多对多：</strong></p><p>如：学生和课程，分析：一个学生可以选择多门课程，一个课程可以被多学生选择</p></li></ul><h2 id="2实现关系"><a class="markdownIt-Anchor" href="#2实现关系"></a> 2：实现关系</h2><ul><li><p><strong>一对多(多对一)：</strong></p><p>如：部门和员工，<strong>实现方式：在多的一方建立外键，指向一的一方的主键。</strong></p></li><li><p><strong>多对多：</strong></p><p>如：学生和课程，<strong>实现方式：多对多关系实现需要借助第三张中间表。中间表至少包含两个字段，这两个字段作为第三张表的外键，分别指向两张表的主键</strong></p></li><li><p><strong>一对一(了解)：</strong></p><p>如：人和身份证，<strong>实现方式：一对一关系实现，可以在任意一方添加唯一外键指向另一方的主键。</strong></p></li></ul><h2 id="3三大范式"><a class="markdownIt-Anchor" href="#3三大范式"></a> 3：三大范式</h2><p>概念：要遵循后边的范式要求，必须先遵循前边的所有范式要求，越高的范式数据库冗余越小。</p><p>目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、第四范式(4NF）和 第五范式（5NF， 又称完美范式）。</p><p>创建多表的注意事项：一看列是否有重复列，二看增删一条数据是否对数据造成影响</p><p><strong>原表：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728170730.png" alt="image-20190728170730" /></p><h3 id="31第一范式"><a class="markdownIt-Anchor" href="#31第一范式"></a> 3.1：第一范式</h3><p>每一列都是不可分割的原子数据项</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728170700.png" alt="image-20190728170700" /></p><h3 id="32第二范式"><a class="markdownIt-Anchor" href="#32第二范式"></a> 3.2：第二范式</h3><p>在1NF的基础上，非码属性必须完全依赖于码 （在1NF基础上消除非主属性对主码的部分函数依赖）</p><p>说几个概念</p><ul><li><p><strong>函数依赖：</strong> A → B</p><p>如果通过A属性(属性组)的值，可以确定唯一 B 属性的值。则称 B 依赖于 A</p><p>例如：学号→姓名。(学号，课程名称)→分数</p></li><li><p><strong>完全函数依赖：</strong> A → B</p><p>如果A是一个属性组，则 B 属性值 需要依赖于 A 属性组中所有的属性值。</p><p>例如：(学号，课程名称) → 分数</p></li><li><p><strong>部分函数依赖：</strong> A → B</p><p>如果A是一个属性组，则 B 属性值 只需要依赖于 A 属性组中某一些值即可。</p><p>例如：(学号，课程名称) → 姓名</p></li><li><p><strong>传递函数依赖：</strong> A → B, B → C</p><p>如果通过A属性(属性组)的值， 可以确定唯一 B 属性的值，在通过 B 属性（属 性组）的值可以确定唯一 C 属性的值，则称 C 传递函数依赖于 A</p><p>例如：学号 → 系名，系名 → 系主任</p></li><li><p><strong>码：</strong> 如果在一张表中，一个属性或属性组，被其他所有属性 所完全依赖，则称这个属性(属性组)为该表的码</p><p>例如：该表中码为：（学号，课程名称）</p><p>主属性：码属性组中的所有属性</p><p>非主属性：除过码属性组的属性</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728170724.png" alt="image-20190728170724" /></p><h3 id="33第三范式"><a class="markdownIt-Anchor" href="#33第三范式"></a> 3.3：第三范式</h3><p>在2NF基础上，任何非主属性不依赖于其它非主属性（在 2NF 基础上消除传递依赖）</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/02/image-20190728170744.png" alt="image-20190728170744" /></p><h1 id="六-多表查询"><a class="markdownIt-Anchor" href="#六-多表查询"></a> 六、多表查询</h1><blockquote><p>笛卡尔积：有两个集合A,B 取这两个集合的所有组成情况。(A*B)</p><p>要完成多表查询，需要消除无用的数据</p></blockquote><p><strong>多表查询理解：</strong> 假设有两张表</p><ul><li>内连接：显示两张表的交集部分 (符合查询条件的部分)，其余不做显示</li><li>外连接：显示左/右表的所有数据，以及两张表的交集部分</li><li>笛卡尔积：显示两张表所有的组成情况</li></ul><h2 id="1内连接查询"><a class="markdownIt-Anchor" href="#1内连接查询"></a> 1：内连接查询</h2><blockquote><ol><li>从哪些表中查询数据</li><li>条件是什么</li><li>查询哪些字段</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 隐式内连接</span></span><br><span class="line">使用 where 消除无用数据</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询所有员工信息和对应的部门信息</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp, dept <span class="keyword">where</span> emp.<span class="string">`dept_id`</span> = dept.<span class="string">`id`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显式内连接</span></span><br><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名<span class="number">1</span> <span class="keyword">inner</span> <span class="keyword">join</span> 表名<span class="number">2</span> <span class="keyword">on</span> 条件</span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.<span class="string">`dept_id`</span> = dept.<span class="string">`id`</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">join</span> dept <span class="keyword">on</span> emp.<span class="string">`dept_id`</span> = dept.<span class="string">`id`</span>;</span><br></pre></td></tr></table></figure><h2 id="2外连接查询"><a class="markdownIt-Anchor" href="#2外连接查询"></a> 2：外连接查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 左外连接</span></span><br><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> 表<span class="number">2</span> <span class="keyword">on</span> 条件；</span><br><span class="line">查询的是<span class="string">&quot;左表&quot;</span>所有数据以及<span class="string">&quot;其交集&quot;</span>部分。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 右外连接</span></span><br><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> 表<span class="number">2</span> <span class="keyword">on</span> 条件；</span><br><span class="line">查询的是<span class="string">&quot;右表&quot;</span>所有数据以及<span class="string">&quot;其交集&quot;</span>部分。</span><br><span class="line"><span class="comment"># 例</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> dept t2 <span class="keyword">right</span> <span class="keyword">join</span> emp t1 <span class="keyword">on</span> t1.<span class="string">`dept_id`</span> = t2.<span class="string">`id`</span>;</span><br></pre></td></tr></table></figure><h2 id="3子查询"><a class="markdownIt-Anchor" href="#3子查询"></a> 3：子查询</h2><blockquote><p>查询中嵌套查询，称嵌套的查询为子查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 子查询的结果是单行单列的</span></span><br><span class="line">子查询可以作为条件，使用运算符去判断。</span><br><span class="line"><span class="comment"># 例：查询员工工资小于平均工资的人</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">where</span> emp.salary &lt; (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">avg</span>(salary) <span class="keyword">from</span> emp</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询的结果是多行单列的</span></span><br><span class="line">子查询可以作为条件，使用运算符in来判断</span><br><span class="line"><span class="comment"># 例：查询&#x27;财务部&#x27;和&#x27;市场部&#x27;所有的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> dept </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">&#x27;财务部&#x27;</span> </span><br><span class="line"><span class="keyword">or</span> <span class="keyword">name</span> = <span class="string">&#x27;市场部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">where</span> dept_id = <span class="number">3</span> </span><br><span class="line"><span class="keyword">or</span> dept_id = <span class="number">2</span>;</span><br><span class="line"><span class="comment"># 子查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">where</span> dept_id <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> dept <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">&#x27;财务部&#x27;</span> <span class="keyword">or</span> <span class="keyword">name</span> = <span class="string">&#x27;市场部&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询的结果是多行多列的</span></span><br><span class="line">子查询可以作为一张虚拟表参与查询</span><br><span class="line"><span class="comment"># 例：查询员工入职日期是2011-11-11日之后的员工信息和部门信息</span></span><br><span class="line"><span class="comment"># 子查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> dept t1,</span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> emp.<span class="string">`join_date`</span> &gt; <span class="string">&#x27;2011-11-11&#x27;</span>) t2</span><br><span class="line"><span class="keyword">where</span> t1.id = t2.dept_id;</span><br><span class="line"><span class="comment"># 普通内连接</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp t1,dept t2 </span><br><span class="line"><span class="keyword">where</span> t1.<span class="string">`dept_id`</span> = t2.<span class="string">`id`</span> <span class="keyword">and</span> t1.<span class="string">`join_date`</span> &gt; <span class="string">&#x27;2011-11-11&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="七-事务"><a class="markdownIt-Anchor" href="#七-事务"></a> 七、事务</h1><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p><p><strong>操作事务：</strong></p><ul><li><strong>开启事务： start transaction</strong></li><li><strong>回滚：rollback</strong></li><li><strong>提交：commit</strong></li></ul><h2 id="1事务的提交方式"><a class="markdownIt-Anchor" href="#1事务的提交方式"></a> 1：事务的提交方式</h2><p><strong>事务提交的两种方式：</strong></p><ul><li><p><strong>自动提交：</strong> mysql 就是自动提交的</p><p>一条 DML(增删改) 语句会自动提交一次事务。</p></li><li><p><strong>手动提交：</strong> Oracle 数据库默认是手动提交事务</p><p>需要先开启事务，再提交</p></li></ul><p><strong>修改事务的默认提交方式：</strong></p><ul><li><p><strong>查看</strong> 事务的默认提交方式：<code>SELECT @@autocommit;</code></p><ul><li>1 代表自动提交</li><li>0 代表手动提交</li></ul></li><li><p><strong>修改</strong> 默认提交方式：<code>set @@autocommit = 0;</code></p></li></ul><h2 id="2事务的四大特征"><a class="markdownIt-Anchor" href="#2事务的四大特征"></a> 2：事务的四大特征</h2><p><strong>原子性：</strong> 是不可分割的最小操作单位，要么同时成功，要么同时失败。</p><p><strong>持久性：</strong> 当事务提交或回滚后，数据库会持久化的保存数据。</p><p><strong>隔离性：</strong> 多个事务之间。相互独立。</p><p><strong>一致性：</strong> 事务操作前后，数据总量不变</p><h2 id="3事务的隔离级别了解"><a class="markdownIt-Anchor" href="#3事务的隔离级别了解"></a> 3：事务的隔离级别（了解）</h2><blockquote><p>多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。</p></blockquote><p><strong>可能发生的问题：</strong></p><ul><li><p><strong>脏读：</strong> 一个事务，读取到另一个事务中没有提交的数据</p></li><li><p><strong>不可重复读(虚读)：</strong> 在同一个事务中，两次读取到的数据不一样。</p></li><li><p><strong>幻读：</strong> 一个事务操作(DML)数据表中所有记录，另一个事务添加了一条数据，则第一个事务查询不到自己的修改。</p></li></ul><p><strong>隔离级别：</strong></p><ul><li><p>read uncommitted：读未提交</p><p>产生的问题：脏读、不可重复读、幻读</p></li><li><p>read committed：读已提交 （Oracle）</p><p>产生的问题：不可重复读、幻读</p></li><li><p>repeatable read：可重复读 （MySQL默认）</p><p>产生的问题：幻读</p></li><li><p>serializable：串行化</p><p>可以解决所有的问题</p></li></ul><p><strong>注意：</strong> 隔离级别从小到大安全性越来越高，但是效率越来越低</p><p><strong>查询隔离级别：</strong> <code>select @@tx_isolation;</code></p><p><strong>设置隔离级别：</strong> <code>set global transaction isolation level 级别字符串;</code></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> 关系型 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Windows 安装指南</title>
      <link href="/article/e2f925a8/"/>
      <url>/article/e2f925a8/</url>
      
        <content type="html"><![CDATA[<p><strong>MySQL 在 windows 下目前有两种安装方式：</strong></p><ol><li>msi 安装程序<ul><li>5.5：32 位 和 64 位 分为两个单独的安装程序</li><li>5.6 之后：改为提供集合安装程序，故官网只有 32 位，在安装时会自动根据系统位数进行选择</li></ul></li><li>压缩包</li></ol><p>推荐使用 mysql 5.7 的压缩包版本安装</p><h1 id="一-下载"><a class="markdownIt-Anchor" href="#一-下载"></a> 一、下载</h1><p>官网：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p><p>下边介绍三种下载方式：</p><ol><li><p>5.5.x 安装程序的下载</p></li><li><p>5.6 及以上 的安装程序下载</p></li><li><p>压缩包下载</p></li></ol><h2 id="155-安装程序下载"><a class="markdownIt-Anchor" href="#155-安装程序下载"></a> 1：5.5 安装程序下载</h2><p>打开官网：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559213194982.webp" alt="1559213194982" /></p><p>点击之后，在下列页面中选择参数，位数以自己为准</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559221439978.webp" alt="1559221439978" /></p><p>提示登录账号，选择不登陆</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559221494311.webp" alt="1559221494311" /></p><p>下载后的结果是这样：<img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559221327765.webp" alt="1559221327765" /></p><h2 id="256-及以上安装程序下载"><a class="markdownIt-Anchor" href="#256-及以上安装程序下载"></a> 2：5.6 及以上安装程序下载</h2><p>以 <strong>5.6</strong> 为例</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/15593.webp" alt="15593" /></p><blockquote><p>若要找历史小版本也可以选择 <code>Archived versions</code></p></blockquote><p>这官网也太不严谨了，把安装程序的下载链接搞得跟图片一样，差点就骗过我了</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559225183485.webp" alt="1559225183485" /></p><p>下载完事是这种：<img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559225291083.webp" alt="1559225291083" /></p><h2 id="3压缩包下载"><a class="markdownIt-Anchor" href="#3压缩包下载"></a> 3：压缩包下载</h2><p>依旧以 <strong>5.6</strong> 为例，根据位数下载蛮不多说了</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559225407810.webp" alt="1559225407810" /></p><h1 id="二-安装"><a class="markdownIt-Anchor" href="#二-安装"></a> 二、安装</h1><p>分别介绍三种安装方式</p><ul><li>5.5.x 安装</li><li>5.6 安装程序的安装 (适用于 5.6 及 以上的每个版本)</li><li>压缩包安装</li></ul><h2 id="155x-安装"><a class="markdownIt-Anchor" href="#155x-安装"></a> 1：5.5.x 安装</h2><p>1：双击打开 <code>mysql-5.5.xx-winxx.msi</code> 进行安装</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559227321074.webp" alt="1559227321074" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559227372510.webp" alt="1559227372510" /></p><p>2：选择安装类型</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559227508276.webp" alt="1559227508276" /></p><p>3.：点选 <code>Browse</code>，手动指定安装目录。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559227549755.webp" alt="1559227549755" /></p><p>4：修改为不带空格、中文的目录</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559272124557.webp" alt="1559272124557" /></p><p>5：修改 <code>Server data files</code> 的目录</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559272252960.webp" alt="1559272252960" /></p><p>6：可以在 mysql 的安装目录下新建一个 <code>data</code> 目录用来放置 <code>Server data files</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559272345297.webp" alt="1559272345297" /></p><p>7：点击下一步</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559272394997.webp" alt="1559272394997" /></p><p>8：点击安装</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559272462147.webp" alt="1559272462147" /></p><p>9：安装完成出现以下界面</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559227842452.webp" alt="1559227842452" /></p><blockquote><p>数据库安装好了，还需要对数据库进行配置才能使用 MYSQL</p></blockquote><p>10：进入 mysql 配置向导。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559227938913.webp" alt="1559227938913" /></p><p>11：选择配置方式</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228002025.webp" alt="1559228002025" /></p><p>12：选择服务器类型，从上到下 MySQL 占用的资源越大</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228061565.webp" alt="1559228061565" /></p><p>13：选择 mysql 数据库的大致用途</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228240434.webp" alt="1559228240434" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228253082.webp" alt="1559228253082" /></p><p>14：选择网站并发连接数，同时连接的数目</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228335867.webp" alt="1559228335867" /></p><p>15：是否启用 TCP/IP 连接，设定端口，如果不启用，就只能在自己的机器上访问 mysql 数据库了，在这个页面上，您还可以选择 “ 启用标准模式 ” (Enable Strict Mode) ，这样 MySQL 就不会允许细小的语法错误。如果是新手，建议您取消标准模式以减少麻烦。但熟悉 MySQL 以后，尽量使用标准模式，因为它可以降低有害数据进入数据库的可能性。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228394464.webp" alt="1559228394464" /></p><p>16：就是对 mysql 默认数据库语言编码进行设置 (<strong>重要</strong>)，一般选 UTF-8</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228439251.webp" alt="1559228439251" /></p><p>17：选择是否将 mysql 安装为 windows 服务，还可以指定 Service Name（服务标识名称），是否将 mysql 的 bin 目录加入到 Windows PATH（加入后，就可以直接使用 bin 下的文件，而不用指出目录名，比如连接，“ mysql.exe -uusername -ppassword ; ” 就可以了，不用指出 mysql.exe 的完整地址，很方便），我这里全部打上了勾， Service Name 不变。按 “ Next ” 继续。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228532179.webp" alt="1559228532179" /></p><p>18：询问是否要修改默认 root 用户（超级管理）的密码。“ Enable root access from remote machines（是否允许 root 用户在其它的机器上登陆，如果要安全，就不要勾上，如果要方便，就勾上它）”。最后“ Create An Anonymous Account（新建一个匿名用户，匿名用户可以连接数据库，不能操作数据，包括查询）”，</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228583575.webp" alt="1559228583575" /></p><p>19：确认设置无误，按 “ Execute ” 使设置生效，即完成 MYSQL 的安装和配置。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559228607672.webp" alt="1559228607672" /></p><p>20：安装完成</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559273291871.webp" alt="1559273291871" /></p><h2 id="256-及以上安装程序安装"><a class="markdownIt-Anchor" href="#256-及以上安装程序安装"></a> 2：5.6 及以上安装程序安装</h2><p><strong>安装过程：</strong> 依旧以 5.6 为例</p><ol><li><p>双击 <code>mysql-installer-community-5.6.44.0.msi</code> 开始安装</p></li><li><p>同意条款</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559316418496.webp" alt="1559316418496" /></p></li><li><p>**Choose a Setup Type (安装类型选择) ** 在其中列出了5 种安装类型，分别是：</p><ol><li>Developer Default (默认安装类型)</li><li>Server only (仅作为服务器)</li><li>Client only (仅作为客户端)</li><li>Full (完全安装)</li><li>Custom  (自定义安装类型)</li></ol><p>这里选择【Custom 】</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559358172846.webp" alt="1559358172846" /></p></li><li><p><strong>Select Products and Features (定制选择)</strong></p><ol><li>MySQL Server ( MySQL 服务器)</li><li>Applications (应用程序)</li><li>Connectors ( MySQL 连接器)</li><li>Documentation (文档)</li></ol><p>这里只选择 MySQL 服务器、别的一个都不要 (需要可视化界面可以在 Applications → MySQL Workbench 下添加，不过一般不需要，大可以使用：Navicat 或 Sqlyog)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559359200305.webp" alt="1559359200305" /></p></li><li><p>添加完成不要急着点击 next，需要修改 MySQL 的安装路径及 Data 存放的路径</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559360001538.webp" alt="1559360001538" /></p><p>选择不带中文不带空格的目录</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559360241419.webp" alt="1559360241419" /></p><p>点击 OK 之后可以点击 next 了</p></li><li><p><strong>Check Requirements（检查安装条件）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559360992642.webp" alt="1559360992642" /></p></li><li><p>安装确认</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559361179023.webp" alt="1559361179023" /></p><p>安装完成，点击  next 进入配置界面</p></li><li><p><strong>Product Configuration (产品配置)</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559361312956.webp" alt="1559361312956" /></p><p><strong>安装类型及网络配置：</strong> 默认即可，直接点击 next</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559361708430.webp" alt="1559361708430" /></p><p><strong>账户和角色：</strong> 输入 root 用户的密码和确认密码</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559362291803.webp" alt="1559362291803" /></p><p><strong>添加 windows 服务：</strong> 默认即可</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559362460229.webp" alt="1559362460229" /></p><p><strong>保存配置：</strong> 直接点击 Execute</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559362534440.webp" alt="1559362534440" /></p><p>执行完毕，点击 finish，它就回到了安装界面，点击 next 进入最后一步</p></li><li><p>Installation  Complete 安装完成，直接点击 Finish</p></li></ol><p><strong>安装后的配置 - 设置字符集：</strong> 安装完之后默认字符集为拉丁，须设置字符集为 utf8</p><ol><li><p><strong>登录 mysql 查看字符集</strong></p><ol><li><p>登录 mysql</p></li><li><p>输入：<code>show variables like '%character%';</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559369632422.webp" alt="1559369632422" /></p></li></ol></li><li><p><strong>默认为拉丁，修改为 utf8；</strong></p></li><li><p>在你安装是选择的 data 目录下找到 <code>my.ini</code> 文件</p><ol><li><p><code>mysql</code> 字段中添加信息：<code>default-character-set=utf8</code></p></li><li><p><code>mysqld</code> 字段中添加信息：<code>character_set_server = utf8</code></p></li><li><p>修改完后保存！保存！保存！</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559370133242.webp" alt="1559370133242" /></p></li></ol></li><li><p>重启 MySQL 服务</p></li><li><p>登录 MySQL</p></li><li><p>输入：<code>show variables like '%character%';</code> 验证</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559370598980.webp" alt="1559370598980" /></p></li></ol><blockquote><p>一般就算设置了表的 mysql 默认字符集为 utf8 并且通过 UTF-8 编码发送查询，你会发现存入数据库的仍然是乱码。问题就出在这个 connection 连接层上。解决方法是在发送查询前执行一下下面这句临时的改变：<code>SET NAMES 'utf8';</code></p></blockquote><h2 id="3压缩包安装"><a class="markdownIt-Anchor" href="#3压缩包安装"></a> 3：压缩包安装</h2><ol><li><p>解压压缩包</p></li><li><p><strong>添加环境变量</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559387313342.webp" alt="1559387313342" /></p></li><li><p>找到解压目录下的 <strong><code>my-default.ini</code> 复制一份重命名为 <code>my.ini</code></strong></p><blockquote><p>5.7 及以后版本要是没有，就自己手动创建一个 <code>my.ini</code> 就行了</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559387507565.webp" alt="1559387507565" /></p></li><li><p><strong>打开 <code>my.ini</code> 编辑</strong>，输入一下内容 (原来的内容可以全删除了)</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="meta">default-character-set</span> = <span class="string">utf8</span></span><br><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置端口</span></span><br><span class="line"><span class="attr">port</span> = <span class="string">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span> = <span class="string">D:/develop/mysql</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据存放目录</span></span><br><span class="line"><span class="attr">datadir</span> = <span class="string">D:/develop/mysql/data</span></span><br><span class="line"><span class="comment"># 设置服务端字符集为utf8</span></span><br><span class="line"><span class="meta">character-set-server</span> = <span class="string">utf8</span></span><br><span class="line"><span class="comment"># 设置创建新表时默认使用的存储引擎</span></span><br><span class="line"><span class="meta">default-storage-engine</span> = <span class="string">INNODB</span></span><br><span class="line"><span class="comment"># 跳过权限验证，忘记密码时打开</span></span><br><span class="line"><span class="comment"># skip-grant-tables</span></span><br></pre></td></tr></table></figure></li><li><p><strong>以 <code>管理员方式</code> 运行命令行窗口，</strong> 进入 mysql 的安装目录下的 bin 目录，输入 <code>mysqld -install</code> 安装 mysql</p><blockquote><p><code>mysqld -remove</code>：卸载 mysql</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559388273471.webp" alt="1559388273471" /></p><p>若出现弹窗提示 <code>由于找不到 MSVCR110.dll，无法继续执行代码...</code> 解决办法：下载 VC 运行时库安装即可</p><p>蓝奏云：<a href="https://www.lanzous.com/i4z2sed">https://www.lanzous.com/i4z2sed</a> 下载解压之后安装即可</p></li><li><p><strong>启动 mysql 服务：</strong> 命令行输入 <code>net start mysql</code></p><blockquote><p>停止：<code>net stop mysql</code></p></blockquote></li></ol><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559388420891.webp" alt="1559388420891" /></p><ol start="7"><li><p><strong>登录 mysql</strong> 提示输入密码，直接回车即可</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/MySQL/01/1559388554565.webp" alt="1559388554565" /></p></li><li><p><strong>设置密码：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 进入mysql数据库</span></span><br><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line"><span class="comment">-- 更新root用户密码，根据版本选一条</span></span><br><span class="line"><span class="comment">/*5.6版本SQL*/</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">PASSWORD</span>(<span class="string">&quot;123456&quot;</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="comment">/*5.7版本SQL*/</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> authentication_string=<span class="keyword">password</span>(<span class="string">&#x27;123456&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment">-- 刷新权限</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"><span class="comment">-- 退出</span></span><br><span class="line">\q</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> 关系型 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 基础使用</title>
      <link href="/article/36a3c92/"/>
      <url>/article/36a3c92/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 基础使用</title>
      <link href="/article/bd2a9f87/"/>
      <url>/article/bd2a9f87/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 基础使用</title>
      <link href="/article/5066ab62/"/>
      <url>/article/5066ab62/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 基础使用</title>
      <link href="/article/20f56e43/"/>
      <url>/article/20f56e43/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue 基础使用</title>
      <link href="/article/4c31a679/"/>
      <url>/article/4c31a679/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 常用框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>React 基础使用</title>
      <link href="/article/40e4f529/"/>
      <url>/article/40e4f529/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 常用框架 </category>
          
          <category> React </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 基础使用</title>
      <link href="/article/cb47a4e/"/>
      <url>/article/cb47a4e/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS 基础使用</title>
      <link href="/article/2964a09f/"/>
      <url>/article/2964a09f/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 的使用及配置</title>
      <link href="/article/a5b222cf/"/>
      <url>/article/a5b222cf/</url>
      
        <content type="html"><![CDATA[<h1 id="一-idea-简介"><a class="markdownIt-Anchor" href="#一-idea-简介"></a> 一、IDEA 简介</h1><p>IDEA：全称 IntelliJ IDEA，是 Java 语言的集成开发环境，在业界被公认为最好的 java 开发工具之一。尤其在智能代码助手、代码自动提示、重构、J2EE 支持、Ant、JUnit、CVS 整合、代码审查、创新的 GUI 设计等方面的功能可以说是超常的</p><p><strong>官网：</strong> <a href="http://www.jetbrains.com">www.jetbrains.com</a></p><p>IDEA 分为两个版本，<strong>旗舰版</strong> (Ultimate) 和 <strong>社区版</strong> (Community)。旗舰版当然是收费的啦，当然功能也比较强大</p><p>建议：tb 买个教育邮箱，然后去官网注册个账号，进行学生认证即可</p><p>更多姿势可以参考：</p><ul><li>官方文档：<a href="https://www.jetbrains.com/help/idea/discover-intellij-idea.html">https://www.jetbrains.com/help/idea/discover-intellij-idea.html</a></li><li>w3cschool 文档：<a href="https://www.w3cschool.cn/intellij_idea_doc/">https://www.w3cschool.cn/intellij_idea_doc/</a></li></ul><h2 id="1下载"><a class="markdownIt-Anchor" href="#1下载"></a> 1：下载</h2><p>官网：<a href="https://www.jetbrains.com/idea/">https://www.jetbrains.com/idea/</a>  点击 Download</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210500.webp" alt="image-20190529210500" /></p><p>IDEA 每年会发布三个版本，如：2018.1、2018.2、2018.3，每个版本都会有子版本，如 2018.3.1、2018.3.2</p><div class="note warning"><p>个人建议使用每一个版本的最终版本即可，如 2018.3.6。不建议直接使用每个版本的初始版本，如 2018.3.1，bug 比较多。</p></div><blockquote><p>注：本文以 Windows 2018 版本为例，相关设置更新会有标注 (如 2020 版本中的设置不一样的地方)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210508.webp" alt="image-20190529210508" /></p><p>选择对应平台直接下载旗舰版</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200313040326.webp" alt="image-20200313040326" /></p><h2 id="2安装"><a class="markdownIt-Anchor" href="#2安装"></a> 2：安装</h2><ol><li><p>双击打开：<img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210528.webp" alt="image-20190529210528" /></p></li><li><p>next：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210520.webp" alt="image-20190529210520" /></p></li><li><p>选择安装路径，点完 next 它去校验路径去了，可能会有点迟钝不用管</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210534.webp" alt="image-20190529210534" /></p></li><li><p>安装的配置</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210538.webp" alt="image-20190529210538" /></p></li><li><p>开始安装</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210544.webp" alt="image-20190529210544" /></p></li><li><p>安装完成，重启一下</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210548.webp" alt="image-20190529210548" /></p></li><li><p>重启完成，打开IDEA，第一项：导入配置；第二项：不导入任何设置</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529210554.webp" alt="image-20190529210554" /></p></li><li><p>同意霸王条款</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220526.webp" alt="image-20190529220526" /></p></li><li><p>发送自己设置给 jetbrains 公司，刚刚才让我同意霸王条款，不同意</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220552.webp" alt="image-20190529220552" /></p></li><li><p>环境设置：可以直接跳过，也可以一路下一步(有一步显示 Vim 编辑器有个感叹号，不用管它一路 next)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220518.webp" alt="image-20190529220518" /></p></li><li><p>激活：填写进行过学生认证的账户，别的激活方式请自行百度</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200313040316.webp" alt="image-20200313040316" /></p></li><li><p>安装完成，下边介绍一下 IDEA 的目录结构</p></li></ol><h2 id="3目录结构"><a class="markdownIt-Anchor" href="#3目录结构"></a> 3：目录结构</h2><p><strong>安装目录结构：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220538.webp" alt="image-20190529220538" /></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bin：容器，执行文件和启动参数等 </span><br><span class="line">help：快捷键文档和其他帮助文档 </span><br><span class="line">jre64：64位java运行环境 </span><br><span class="line">lib：idea 依赖的类库 </span><br><span class="line">license：各个插件许可证</span><br><span class="line">plugin：插件</span><br></pre></td></tr></table></figure><p>bin 目录下</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220546.webp" alt="image-20190529220546" /></p><p><strong><s>可以编辑配置文件，设置VM的参数</s></strong></p><div class="note warning"><p>自 2019 版本起，直接修改安装目录下的配置文件将不会生效</p><p>需要在 IDEA 中点击 help → Edit Custom VMoptions，对该文件进行修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#初始内存数</span><br><span class="line">-Xms512m</span><br><span class="line">#最大内存数</span><br><span class="line">-Xmx1024m</span><br><span class="line">#保存代码占用的内存容量</span><br><span class="line">-XX:ReservedCodeCacheSize&#x3D;512m</span><br></pre></td></tr></table></figure></div><p><strong>配置目录：</strong></p><div class="tabs" id="配置目录"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#配置目录-1">2018 版本</button></li><li class="tab active"><button type="button" data-href="#配置目录-2">2020 版本</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="配置目录-1"><p><code>C:\Users\${user.name}\.IntelliJIdea2018.3</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220520.webp" alt="image-20190529220520" /></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="配置目录-2"><p><strong>config</strong> → <code>C:\Users\${user.name}\AppData\Roaming\JetBrains\IntelliJIdea2020.1</code></p><p><strong>system</strong> → <code>C:\Users\${user.name}\AppData\Local\JetBrains\IntelliJIdea2020.1</code></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>这是 IDEA 的各种配置的保存目录。这个设置目录有一个特性，就是你删除掉整个目录之后，重新启动 IntelliJ IDEA 会再自动帮你生成一个全新的默认配置， 所以很多时候如果你把 IntelliJ IDEA 配置改坏了，没关系，删掉该目录，一切都会还原到默认。</p><div class="note danger"><p>只删除 system 文件夹即可，删除 config 之后配置就没了</p></div><p><strong>config：</strong> 主要记录了IDE 主要配置功能，自定义的代码模板、文件模板、快捷键等，Project  的 tasks  记录等等个性化的设置</p><p><strong>system：</strong> IntelliJ IDEA 系统文件目录，里面主要有：缓存、索引、容器文件输出等等</p><p><strong>如需修改配置目录位置：</strong></p><ul><li><p>打开 <code>IDEA安装目录\bin\idea.properties</code></p></li><li><p>将以下两行的注释放开，并修改值为你要存放的目录，注意写路径时使用正斜杠 <code>/</code></p><p><code>idea.config.path=$&#123;user.home&#125;/.IntelliJIdea/config</code></p><p><code>idea.system.path=$&#123;user.home&#125;/.IntelliJIdea/system</code></p></li></ul><h1 id="二-idea-常用设置-使用技巧"><a class="markdownIt-Anchor" href="#二-idea-常用设置-使用技巧"></a> 二、IDEA 常用设置 &amp; 使用技巧</h1><h2 id="1进入设置"><a class="markdownIt-Anchor" href="#1进入设置"></a> 1：进入设置</h2><p>要想对整个 IDEA 进行设置而不是对某个项目进行设置，最好使用下边的方式</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220542.webp" alt="image-20190529220542" /></p><p>不要在创建项目之后再设置 settings 那样只是对该项目起作用，或者可以选择 Other Settings → Settings for new Project（没有创建项目请忽略，使用上一种方式）</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220626.webp" alt="image-20190529220626" /></p><p><strong>设置目录介绍：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220550.webp" alt="image-20190529220550" /></p><p><strong>导入/导出设置：</strong> 做好备份是非常必要滴 (import：导入，Export：导出)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220508.webp" alt="image-20190529220508" /></p><h2 id="2必改配置项"><a class="markdownIt-Anchor" href="#2必改配置项"></a> 2：必改配置项</h2><h3 id="21设置文件编码"><a class="markdownIt-Anchor" href="#21设置文件编码"></a> 2.1：设置文件编码</h3><p>Transparent native-to-ascii conversion 主要用于转换 ascii，一般都要勾选， 不然 Properties 文件中的注释显示的都不会是中文。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220500.webp" alt="image-20190529220500" /></p><p><strong>打开文件时设置源文件的编码：</strong> IDEA 右下角</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220505.webp" alt="image-20190529220505" /></p><p>点击之后选择更换，若弹窗提示是否更换源文件编码，参考：</p><ul><li>Reload：仅预览，不修改源文件编码</li><li>Convert：预览并修改源文件编码</li></ul><h3 id="22设置自动编译"><a class="markdownIt-Anchor" href="#22设置自动编译"></a> 2.2：设置自动编译</h3><p>Intellij Idea 默认不会将你修改后的 java 文件编译成 class 文件，修改完成需要手动编译，可以设置自动编译</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220515.webp" alt="image-20190529220515" /></p><h3 id="23设置自动导包"><a class="markdownIt-Anchor" href="#23设置自动导包"></a> 2.3：设置自动导包</h3><p>Add unambiguous imports on the fly：自动优化导入的包</p><p>Optimize imports on the fly：自动去掉一些没有用到的包</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220516.webp" alt="image-20190529220516" /></p><h3 id="24忽略大小写提示"><a class="markdownIt-Anchor" href="#24忽略大小写提示"></a> 2.4：忽略大小写提示</h3><p>默认情况下，你输入 str 它是不会给你提示出来 String 的，必须输入 Str 才行</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220523.webp" alt="image-20190529220523" /></p><h2 id="3个性化配置项"><a class="markdownIt-Anchor" href="#3个性化配置项"></a> 3：个性化配置项</h2><h3 id="31设置显示行号及显示方法分隔线"><a class="markdownIt-Anchor" href="#31设置显示行号及显示方法分隔线"></a> 3.1：设置显示行号及显示方法分隔线</h3><p>设置行号及方法分隔线，便于阅读</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220519.webp" alt="image-20190529220519" /></p><h3 id="32取消打开的标签页单行显示"><a class="markdownIt-Anchor" href="#32取消打开的标签页单行显示"></a> 3.2：取消打开的标签页单行显示</h3><p>在打开很多文件的时候，IntelliJ IDEA 默认是把所有打开的文件名 Tab 单行显示的。</p><p>但多行效率比单行高，因为单行会隐藏超过界面部分 Tab，这样找文件不方便。</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220524.webp" alt="image-20190529220524" /></p><h3 id="33类头文档注释信息"><a class="markdownIt-Anchor" href="#33类头文档注释信息"></a> 3.3：类头文档注释信息</h3><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200505080550.webp" alt="image-20200505080550" /></p><h3 id="34显示内存指示器"><a class="markdownIt-Anchor" href="#34显示内存指示器"></a> 3.4：显示内存指示器</h3><div class="tabs" id="显示内存指示器"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#显示内存指示器-1">2018 版本</button></li><li class="tab active"><button type="button" data-href="#显示内存指示器-2">2020 版本</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="显示内存指示器-1"><p>Appearance &amp; Behavior → Appearance</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220533.webp" alt="image-20190529220533" /></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="显示内存指示器-2"><p>主界面 → view → Appearance → Status Bar → Widgets → Memory Indicator</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819194357212.webp" alt="image-20200819194357212" /></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>设置完成后，IDEA 右下角就会出现如图所示图标(单击它可以运行垃圾回收哦)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200313050346.webp" alt="image-20200313050346" /></p><h3 id="35鼠标滚轮控制编辑区字体大小及悬浮提示"><a class="markdownIt-Anchor" href="#35鼠标滚轮控制编辑区字体大小及悬浮提示"></a> 3.5：鼠标滚轮控制编辑区字体大小及悬浮提示</h3><p>设置完后 <code>Ctrl + 鼠标滚轮</code> 可以来控制代码字体大小显示，及光标放到代码上会有提示(设置时间稍微长一点，不然影响阅读，1.5 秒最合适)</p><div class="tabs" id="鼠标控制字体大小及悬浮提示"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#鼠标控制字体大小及悬浮提示-1">2018 版本</button></li><li class="tab active"><button type="button" data-href="#鼠标控制字体大小及悬浮提示-2">2020 版本</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="鼠标控制字体大小及悬浮提示-1"><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220512.webp" alt="image-20190529220512" /></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="鼠标控制字体大小及悬浮提示-2"><p>鼠标控制字体大小与 2018 版本一致，悬浮提示如下</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819195747539.webp" alt="image-20200819195747539" /></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="36html-标签缩进"><a class="markdownIt-Anchor" href="#36html-标签缩进"></a> 3.6：HTML 标签缩进</h3><p>在 IntelliJ Idea 中 HTML 格式化时，默认 <code>&lt;head&gt;&lt;body &gt;</code> 以及 <code>&lt;body&gt;</code> 下的标签不会缩进</p><p>editor → code style → HTML → other → Do not indent children of 删除 <code>&lt;html&gt;&lt;head&gt;&lt;body&gt;</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190904020938.webp" alt="image-20190904020938" /></p><h3 id="37取消注释自动缩进-2019-及以上版本"><a class="markdownIt-Anchor" href="#37取消注释自动缩进-2019-及以上版本"></a> 3.7：取消注释自动缩进 - 2019 及以上版本</h3><p>2019 版使用 IDEA 快捷键进行注释时发现，自动加的注释是从改行的第一个字符开始注释，而且加了很多缩进</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200325180300.webp" alt="image-20200325180300" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200325180350.webp" alt="image-20200325180350" /></p><h3 id="38控制台自动换行"><a class="markdownIt-Anchor" href="#38控制台自动换行"></a> 3.8：控制台自动换行</h3><p>有时需要查看控制台上的日志信息，但是发现，长度太长了</p><div class="note warning"><p>修改完之后，控制台格式看起来可能比较乱，自行斟酌</p></div><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190911060918.webp" alt="image-20190911060918" /></p><h3 id="39关闭格式化后自动在文档注释描述下一行加空行"><a class="markdownIt-Anchor" href="#39关闭格式化后自动在文档注释描述下一行加空行"></a> 3.9：关闭格式化后自动在文档注释描述下一行加空行</h3><p>使用 Ctrl + Alt + L 进行格式化时会自动在描述后边加个空格，很烦人</p><p>Editor → Code Style → Java → JavaDoc → Blank Lines → 去掉 After description 前面的勾选</p><blockquote><p>ps：再次使用 Ctrl + Alt + L 还可以将原来加过空行的删除哦</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819200140555.webp" alt="image-20200819200140555" /></p><p>修改前：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h3 id="310误删文件恢复"><a class="markdownIt-Anchor" href="#310误删文件恢复"></a> 3.10：误删文件恢复</h3><p>IDEA 会记录文件的操作记录，所以即使误删亦可回复</p><p>右键误删文件所在项目 → 找到 local history → show history → 找到误删的文件恢复即可</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819200524868.webp" alt="image-20200819200524868" /></p><h3 id="311开启注解处理"><a class="markdownIt-Anchor" href="#311开启注解处理"></a> 3.11：开启注解处理</h3><p>使用 Lombok 时记得开</p><p>Build → Compiler → Annotation Processors → 勾选 Enable Annotation Processors</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819212312511.webp" alt="image-20200819212312511" /></p><h3 id="312开启-java-中的面包屑"><a class="markdownIt-Anchor" href="#312开启-java-中的面包屑"></a> 3.12：开启 Java 中的面包屑</h3><p>Editor → General → Breadcrumbs，勾选 Java</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819212405306.webp" alt="image-20200819212405306" /></p><h3 id="313隐藏-idea-和-iml"><a class="markdownIt-Anchor" href="#313隐藏-idea-和-iml"></a> 3.13：隐藏 .idea 和 .iml</h3><p><code>.idea</code> 和 <code>.iml</code> 是 IDEA 自动创建的文件夹 / 文件，若是嫌它看着烦可以隐藏</p><p>Edit → File Types，在 Ignore files and folders 中添加 <code>.idea;*.iml;</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819213451195.webp" alt="image-20200819213451195" /></p><h3 id="314不打开最近使用的项目"><a class="markdownIt-Anchor" href="#314不打开最近使用的项目"></a> 3.14：不打开最近使用的项目</h3><p>启动 IDEA 之后，默认打开最后一次使用的项目，可以关闭该行为，视个人喜好而定</p><p>Appearance&amp;Behavior → System Settings，取消 Reopen last projects on startup 的勾</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819212706935.webp" alt="image-20200819212706935" /></p><h3 id="315将自定义单词添加到字典"><a class="markdownIt-Anchor" href="#315将自定义单词添加到字典"></a> 3.15：将自定义单词添加到字典</h3><p>IDEA 会对单词进行拼写检查，关闭了不合适，有时拼写错了它可以告诉你。但是不关，一些第三方框架起的名字它检测不到，总是给你显示个黄色的波浪线，看着烦人。</p><p>可以将诸如：dubbo、nacos 等这里单词添加到 IDEA 的字典中</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200505090510.webp" alt="image-20200505090510" /></p><p>在拼写警告的单词上按快捷键 <code>Alt + Enter</code>，选择添加到字典</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200505090506.webp" alt="image-20200505090506" /></p><h3 id="316关闭使用-mybatis-时-sql-语句下的警告线"><a class="markdownIt-Anchor" href="#316关闭使用-mybatis-时-sql-语句下的警告线"></a> 3.16：关闭使用 MyBatis 时 SQL 语句下的警告线</h3><p>使用 MyBatis 框架时，Mapper 映射配置文件中写的 SQL 语句会有一堆黄色的警告线，看起来比较烦人</p><p>报黄主要是有两项警告：</p><ol><li>没有配置数据库</li><li>SQL 方言检测的检查提示项</li></ol><p>关闭步骤：</p><ol><li><p>File → Setting → Editor → Inspections，找到 SQL 选项并展开</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200904095413473.webp" alt="image-20200904095413473" /></p></li><li><p>将 <code>No data sources configured</code>、<code>SQL dialect detection</code>这两项的勾选去掉，点击 ok</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200904095628769.webp" alt="image-20200904095628769" /></p></li></ol><h2 id="4外观配置项"><a class="markdownIt-Anchor" href="#4外观配置项"></a> 4：外观配置项</h2><h3 id="41设置窗体及菜单的字体及大小"><a class="markdownIt-Anchor" href="#41设置窗体及菜单的字体及大小"></a> 4.1：设置窗体及菜单的字体及大小</h3><p>修改的是整个 UI 的字体</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819190924396.webp" alt="image-20200819190924396" /></p><h3 id="42设置主题"><a class="markdownIt-Anchor" href="#42设置主题"></a> 4.2：设置主题</h3><p>默认提供了三种主题，你要感觉都不是你的菜，可以在 Clor Scheme 这种自己进行配色，或者去网上找好看的主题然后导入(然后自己也可以进行二次修改，让它跟适合自己，修改完成之后可以导出与他人分享)</p><p>提供两个主题网站：</p><ul><li><a href="http://www.riaway.com">http://www.riaway.com</a></li><li><a href="http://www.themesmap.com">http://www.themesmap.com</a></li></ul><p>还有一种使用插件个性化自己整个 IDEA 的 UI，后边插件中进行介绍</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220521.webp" alt="image-20190529220521" /></p><h3 id="43设置编辑区字体及大小"><a class="markdownIt-Anchor" href="#43设置编辑区字体及大小"></a> 4.3：设置编辑区字体及大小</h3><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819191036253.webp" alt="image-20200819191036253" /></p><blockquote><p>Enable font ligatures 可以开启连字，个人不建议开启</p></blockquote><h3 id="44修改控制台输出的字体及大小"><a class="markdownIt-Anchor" href="#44修改控制台输出的字体及大小"></a> 4.4：修改控制台输出的字体及大小</h3><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819191347633.webp" alt="image-20200819191347633" /></p><h3 id="45设置背景图"><a class="markdownIt-Anchor" href="#45设置背景图"></a> 4.5：设置背景图</h3><p>这个不是插件提供，而是 IDEA 的功能，不安装插件也可以设置</p><p>全局搜索 (双击 shift) → 输入 set background Image 后回车。我透明度设置的有点高了(实验证明 15~20 最好)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220522.webp" alt="image-20190529220522" /></p><h3 id="46更换启动图"><a class="markdownIt-Anchor" href="#46更换启动图"></a> 4.6：更换启动图</h3><p><strong>效果如下：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200820161124159.webp" alt="image-20200820161124159" /></p><p><strong>操作步骤：</strong></p><ol><li><p>进入 <code>IDEA 安装目录/lib</code> 目录，找到 <code>resources.jar</code></p><div class="note warning"><p>最好复制到别的地方进行操作，不然搞坏了就没得玩了</p></div><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200820161626673.webp" alt="image-20200820161626673" /></p></li><li><p>使用压缩软件，将其解压。可以看到有 <code>idea_logo.webp</code> 和 <code>idea_logo@2x.webp</code> 两个文件</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200820162112344.webp" alt="image-20200820162112344" /></p></li><li><p>将制作好的图片放入，进行替换</p><p><code>idea_logo.webp</code> 尺寸 <code>640*400</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/idea_logo.png" alt="idea_logo" /></p><p><code>idea_logo@2x.webp</code>  尺寸 <code>1280*800</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/idea_logo@2x.png" alt="idea_logo@2x" /></p></li><li><p>shift + 右键打开 powershell 窗口，输入以下命令进行打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar cvf resources.jar *</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200820163024705.webp" alt="image-20200820163024705" /></p></li><li><p>将当前目录下生成的 resources.jar 复制到 <code>IDEA 安装目录/lib</code> 中进行替换即可</p></li></ol><h1 id="三-创建项目-界面介绍"><a class="markdownIt-Anchor" href="#三-创建项目-界面介绍"></a> 三、创建项目 &amp; 界面介绍</h1><p>测试为主，没用过 Eclipse 不用看下边的解释，免得混乱</p><p>解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果你用过Eclipse，就会知道Eclipse有一个workspace(工作空间)的概念，在IDEA一个Projecct就相当于一个workspace(当然不能说就是，这只不过是模块化而已)</span><br><span class="line">每一个Project(Eclipse的workspace)可以有多个Module(Eclipse的project)</span><br><span class="line">每一个Project(Eclipse的workspace)都可以自己的配置，所以在上边设置时没有在项目中设置</span><br></pre></td></tr></table></figure><h2 id="1新建项目"><a class="markdownIt-Anchor" href="#1新建项目"></a> 1：新建项目</h2><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220624.webp" alt="image-20190529220624" /></p><p>创建一个 Java 项目，提示没有 sdk 选择右边的 new</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220529.webp" alt="image-20190529220529" /></p><p>找到你 JDK 的安装目录，选中点击 next</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220534.webp" alt="image-20190529220534" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220537.webp" alt="image-20190529220537" /></p><p>问是否使用模板创建，不管他直接 next</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220547.webp" alt="image-20190529220547" /></p><p>输入项目名及路径，点击 finsh 完成，如果它弹窗提示路径不存在，是否创建点击 ok 即可</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220558.webp" alt="image-20190529220558" /></p><p>关闭启动时显示功能演示</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220504.webp" alt="image-20190529220504" /></p><h2 id="2打开工具栏及工具按钮"><a class="markdownIt-Anchor" href="#2打开工具栏及工具按钮"></a> 2：打开工具栏及工具按钮</h2><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220511.webp" alt="image-20190529220511" /></p><h2 id="3界面介绍"><a class="markdownIt-Anchor" href="#3界面介绍"></a> 3：界面介绍</h2><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220625.webp" alt="image-20190529220625" /></p><p>可以直接新建包 / 类，不演示了</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220530.webp" alt="image-20190529220530" /></p><p><strong>状态栏：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200325040338.webp" alt="image-20200325040338" /></p><h2 id="4创建模块"><a class="markdownIt-Anchor" href="#4创建模块"></a> 4：创建模块</h2><p>项目右键新建 module，创建过程与创建项目类似不做演示(不用 new sdk 了，写一下模块名就好了)</p><p>模块中也可以创建包/类…</p><p>SE 阶段一般使用的话可以创建一个空项目 (Empty Project)，然后再创建多个模块</p><p>另外提示一下在 IDEA 中删除项目/模块是删不掉的，最好删除后到本地文件看一下是否删除成功</p><h1 id="四-插件"><a class="markdownIt-Anchor" href="#四-插件"></a> 四、插件</h1><p>查找插件：可以直接输入插件名进行查找，也可以去官方插件库查找：<a href="https://plugins.jetbrains.com/idea">https://plugins.jetbrains.com/idea</a></p><h2 id="1常用插件集合"><a class="markdownIt-Anchor" href="#1常用插件集合"></a> 1：常用插件集合</h2><p><strong>主题插件：</strong> Material Theme UI</p><p><strong>Java 编码规范：</strong> Alibaba Java Coding Guidelines</p><p><strong>一键翻译：</strong> Translation，翻译快捷键如下：</p><ul><li>选中翻译Ctrl + Shift + Y 或 右键选择 Translation</li><li>翻译并替换Ctrl + Shift + X 再也不用担心变量名如何起了</li><li>显示对话框Ctrl + Shift + O</li></ul><p><strong>热加载插件：</strong> JRebel and XRebel for IntelliJ</p><p><strong>Free MyBatis plugin：</strong> 对 MyBatis 的 xml 具有强大的提示功能，同时可以关联 mapper 接口和 mapper.xml 中的 sql 实现</p><p><strong>简化实体类快速生成 get/set：</strong> Lombok</p><p><strong>彩色括号插件：</strong> Rainbow Brackets</p><p><strong>汉化插件：</strong> Chinese (Simplified) Language，2020 版以后官方提供</p><p><strong>一键根据 json 文本生成 java 类：</strong> GsonFormat</p><p><strong>快速部署到服务器(本地/云)：</strong> Alibaba Cloud Toolkit</p><h2 id="2安装主题插件"><a class="markdownIt-Anchor" href="#2安装主题插件"></a> 2：安装主题插件</h2><p>搜索 → 安装 → 接受(弹出来小框框的大概意思是：你的个人数据可能被第三方插件收集，出事了 jetbrains 公司不背这个锅)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220544.webp" alt="image-20190529220544" /></p><p>待他变成 Restart IDE 重启一下 IDEA，若弹窗选择 Restart（一般安装插件都需要重启 IDEA）</p><p>重启完成，让你配置一下你的个性化设置(这欢迎界面看的我有点眼花，差点以为自己 X 多了呢，所以直接选择让他默认，进到编辑器了再手动设置)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220551.webp" alt="image-20190529220551" /></p><p>进入 settings → Appearance &amp; Behavior → Material Theme 中 进行手动设置</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200521130510.webp" alt="image-20200521130510" /></p><p>下边是我个人配置的截图</p><p><strong>配置截图：</strong> 原版太花了，还是清新淡雅一点好</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220501.webp" alt="image-20190529220501" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220506.webp" alt="image-20190529220506" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220510.webp" alt="image-20190529220510" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819213841066.webp" alt="image-20200819213841066" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220517.webp" alt="image-20190529220517" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819213920559.webp" alt="image-20200819213920559" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200819213947098.webp" alt="image-20200819213947098" /></p><p>其余的没啥了，自己可以进行自定义 (多动手看看哪里修改完哪里变了)</p><h2 id="3安装-jrebel-热加载插件"><a class="markdownIt-Anchor" href="#3安装-jrebel-热加载插件"></a> 3：安装 Jrebel 热加载插件</h2><p>据说你修改完 Java 代码还在重启容器？启动要多久，不小心少写了一个字符又要重启？累不累。</p><p>使用 Jrebel 可以在不重启容器的情况下进行热加载</p><p>为什么不是 springboot-devtools？</p><ul><li>首先明确一点，引入这些工具只是方便开发，节省时间的。引入 springboot-devtools 的依赖，生产环境是不需要，开发者引入后容易误提交到线上。</li><li>springboot-devtools 方式的热部署在功能上有限制。如在方法内的修改可以实现热部署，但是新增的方法或者修改方法参数之后热部署是不生效的。</li><li>相对于 JRebel，springboot-devtools 方式热部署的速度可能有点慢</li></ul><p><strong>安装：</strong> 搜索 JRebel and XRebel for IntelliJ 安装即可</p><blockquote><p>JRebel：热加载插件；XRebel：性能分析插件。新版本将两个整合在一起了</p></blockquote><p><strong>破解：</strong> 该插件是收费的，所以需要破解，需要的东西如下：</p><blockquote><p>注意请支持正版，本教程仅支持个人学习使用，请不要用于商业用途！</p></blockquote><p><strong>准备：</strong></p><ul><li>UUID：可以在线生成，打开之后直接将 UUID 复制即可<ul><li><a href="https://www.guidgen.com/">https://www.guidgen.com/</a></li><li><a href="http://www.ofmonkey.com/transfer/guid">http://www.ofmonkey.com/transfer/guid</a></li><li><a href="https://www.guidgenerator.com/online-guid-generator.aspx">https://www.guidgenerator.com/online-guid-generator.aspx</a></li></ul></li><li>反向代理服务器：可以使用别人搭好的如：<a href="https://jrebel.qekang.com/">https://jrebel.qekang.com/</a></li><li>邮箱：邮箱随便写，格式正确就好</li></ul><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200521150508.webp" alt="image-20200521150508" /></p><h3 id="31使用远程反向代理服务器"><a class="markdownIt-Anchor" href="#31使用远程反向代理服务器"></a> 3.1：使用远程反向代理服务器</h3><p>使用别人搭好的 <a href="https://jrebel.qekang.com/">https://jrebel.qekang.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20200521150534.webp" alt="image-20200521150534" /></p><h3 id="32使用本地反向代理"><a class="markdownIt-Anchor" href="#32使用本地反向代理"></a> 3.2：使用本地反向代理</h3><p>下载一个反向代理软件：<a href="https://github.com/ilanyu/ReverseProxy/releases">https://github.com/ilanyu/ReverseProxy/releases</a></p><p>选择对应操作系统的版本，运行</p><blockquote><p>你也可以把他放在服务器上，这样就可以让别人也用</p></blockquote><h3 id="32配置"><a class="markdownIt-Anchor" href="#32配置"></a> 3.2：配置</h3><p>将其设置为离线模式，File&gt;Setting&gt;JRebel&gt;work offline</p><h2 id="4彩色括号插件"><a class="markdownIt-Anchor" href="#4彩色括号插件"></a> 4：彩色括号插件</h2><p>插件名称：Rainbow Brackets</p><p>自定义括号颜色：Settings → Editor → Color scheme → Rainbow Brackets</p><ul><li>Round Brackets：圆括号</li><li>Square Brackets：方括号</li><li>Squiggly Brackets：波形括号、大括号</li><li>Angle Brackets：尖括号</li></ul><p>括号内代码高亮：Ctrl + 鼠标右键</p><p>括号外代码变暗：Alt + 鼠标右键</p><h1 id="五-模板"><a class="markdownIt-Anchor" href="#五-模板"></a> 五、模板</h1><h2 id="1预定义模板"><a class="markdownIt-Anchor" href="#1预定义模板"></a> 1：预定义模板</h2><p>模板有的只能单独使用 (如：psvm)，大部分既可以单独使用还可以用于后缀补全</p><p>使用和快速设置模板快捷键：</p><ul><li>插入代码模板：Ctrl + J，该快捷键亦可用于后缀补全</li><li>将选定的代码加入动态模板中：Ctrl + Alt + J</li></ul><p>常用代码模板：</p><ul><li><p>! + Tab：快速生成 html 模板</p></li><li><p>psvm： 生成 main 方法</p></li><li><p>sout：快速打印，类似的还有：</p><ul><li>soutp = <code>System.out.println(&quot;方法形参名 = &quot; + 形参名);</code></li><li>soutv = <code>System.out.println(&quot;变量名 = &quot; + 变量);</code></li><li>soutm = <code>System.out.println(&quot;当前类名.当前方法&quot;);</code></li></ul></li><li><p>for：foreach 遍历，也可以使用 iter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.<span class="keyword">for</span></span><br><span class="line">list.iter</span><br></pre></td></tr></table></figure></li><li><p>fori：带索引的遍历，也可以使用 itar</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.fori</span><br><span class="line">list.itar</span><br></pre></td></tr></table></figure></li><li><p>var：声明变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;petrel&quot;</span>.<span class="keyword">var</span></span><br><span class="line"><span class="number">100.</span><span class="keyword">var</span></span><br><span class="line"><span class="keyword">new</span> User().<span class="keyword">var</span></span><br></pre></td></tr></table></figure></li><li><p>null：判断对象为空</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.<span class="keyword">null</span></span><br></pre></td></tr></table></figure></li><li><p>notnull：判断对象非空</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.notnull</span><br></pre></td></tr></table></figure></li><li><p>nn：判断对象非空</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.nn</span><br></pre></td></tr></table></figure></li><li><p>not：对布尔类型取反</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isTrue.not</span><br></pre></td></tr></table></figure></li><li><p>if：条件判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.length &gt; <span class="number">0.</span><span class="keyword">if</span></span><br><span class="line">isTrue.<span class="keyword">if</span></span><br></pre></td></tr></table></figure></li><li><p>cast：强转对象 / 数据类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.cast</span><br></pre></td></tr></table></figure></li><li><p>return：返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;yanggb&quot;</span>.return</span><br><span class="line">student.return</span><br><span class="line">list.return</span><br><span class="line"><span class="keyword">new</span> Student().return</span><br></pre></td></tr></table></figure></li></ul><h2 id="2自定义模板"><a class="markdownIt-Anchor" href="#2自定义模板"></a> 2：自定义模板</h2><ol><li><p>添加组</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220527.webp" alt="image-20190529220527" /></p></li><li><p>添加模板</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220532.webp" alt="image-20190529220532" /></p></li><li><p>设置模板内容</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220536.webp" alt="image-20190529220536" /></p></li></ol><h1 id="六-快捷键"><a class="markdownIt-Anchor" href="#六-快捷键"></a> 六、快捷键</h1><h2 id="1常用快捷键"><a class="markdownIt-Anchor" href="#1常用快捷键"></a> 1：常用快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">Ctrl + X剪切光标所在行 或 剪切选择内容</span><br><span class="line">Ctrl + C复制光标所在行 或 复制选择内容</span><br><span class="line">Ctrl + Y复制光标所在行#Editor Actions--&gt;Dulicate Line or Selection</span><br><span class="line">Ctrl + D删除当前行#Editor Actions--&gt;Delete Line</span><br><span class="line">Ctrl + F在当前文件进行文本查找</span><br><span class="line">Ctrl + R在当前文件进行文本替换</span><br><span class="line">Ctrl + Z撤销</span><br><span class="line">Ctrl + Shift + Z取消撤销</span><br><span class="line">Ctrl + P查看方法参数</span><br><span class="line">Ctrl + J插入模板</span><br><span class="line">Ctrl + H显示当前类的层次结构</span><br><span class="line">Ctrl + &#x2F;单行注释</span><br><span class="line">Ctrl + Shift + &#x2F;多行注释 （必备）</span><br><span class="line">Shift + Shift全局搜索</span><br><span class="line">Shift + F6重命名，重构 – 文件重命名&#x2F;批量重命名(选中一个变量名，然后修改加回车)</span><br><span class="line">Alt + &#x2F;代码补全，#Main menu--code--Complete(完成)--Basic</span><br><span class="line">Alt + Enter万能提示，导入包，自动修正代码</span><br><span class="line">Alt + Insert代码自动生成，如生成对象的 set&#x2F;get 方法，构造函数，toString()等</span><br><span class="line">Alt + Shift + 上&#x2F;下  上&#x2F;下移动本行代码</span><br><span class="line">Ctrl + Shift + 上&#x2F;下 上&#x2F;下移动一个代码块</span><br><span class="line">Ctrl + Shift + U大小写转换</span><br><span class="line">Ctrl + Shift + T生成单元测试类，如果已经存在的单元测试类则可以进行选择</span><br><span class="line">Ctrl + Shift + Enter：自动结束代码，行末自动添加分号</span><br><span class="line">Ctrl + Alt + B查看接口的实现类</span><br><span class="line">Ctrl + Alt + L格式化代码</span><br><span class="line">Ctrl + Alt + M抽取方法</span><br><span class="line">Ctrl + Alt + T将选中的代码，添加到if&#x2F;try&#x2F;for&#x2F;…代码块中去</span><br><span class="line">Ctrl + Alt + 左   退回到上一个操作的地方</span><br><span class="line">Ctrl + Alt + 右   前进到上一个操作的地方</span><br><span class="line">Ctrl + Alt + U选中类名，在当前标签页以图形方式展现类的继承体系(选中类名右键Diagrams(图形化))</span><br><span class="line">Ctrl + Alt + Shift + U：新开一页展示继承体系</span><br></pre></td></tr></table></figure><h2 id="2修改快捷键"><a class="markdownIt-Anchor" href="#2修改快捷键"></a> 2：修改快捷键</h2><p>某些快捷键不适合使用习惯可进行修改，如：</p><ul><li>Ctrl+D：删除一行</li><li>Ctrl+Y：复制一行</li></ul><p>IDEA 刚好相反</p><p>找到之后右键进行增删改操作 (Add：添加；Remove：删除)</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/IDEA/01/image-20190529220502.webp" alt="image-20190529220502" /></p><h2 id="2快捷键记录表"><a class="markdownIt-Anchor" href="#2快捷键记录表"></a> 2：快捷键记录表</h2><h3 id="21ctrl"><a class="markdownIt-Anchor" href="#21ctrl"></a> 2.1：Ctrl</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">Ctrl + F在当前文件进行文本查找 （必备）</span><br><span class="line">Ctrl + R在当前文件进行文本替换 （必备）</span><br><span class="line">Ctrl + Z撤销 （必备）</span><br><span class="line">Ctrl + Y复制光标所在行 或 复制选中的行，并把复制内容插入光标位置下面(必备)</span><br><span class="line">Ctrl + X剪切光标所在行 或 剪切选择内容</span><br><span class="line">Ctrl + C复制光标所在行 或 复制选择内容</span><br><span class="line">Ctrl + D删除光标所在行 或 删除选择内容(必备)</span><br><span class="line">Ctrl + W递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围（必备）</span><br><span class="line">Ctrl + E显示最近打开的文件记录列表</span><br><span class="line">Ctrl + N根据输入的类名查找类文件</span><br><span class="line">Ctrl + G在当前文件跳转到指定行处</span><br><span class="line">Ctrl + J插入自定义动态代码模板</span><br><span class="line">Ctrl + P方法参数提示显示</span><br><span class="line">Ctrl + Q光标所在的变量 &#x2F; 类名 &#x2F; 方法名等上面（也可以在提示补充的时候按），显示文档内容</span><br><span class="line">Ctrl + U前往当前光标所在的方法的父类的方法 &#x2F; 接口定义</span><br><span class="line">Ctrl + B进入光标所在的方法&#x2F;变量的接口或是定义出，等效于 Ctrl + 左键单击</span><br><span class="line">Ctrl + K版本控制提交项目，需要此项目有加入到版本控制才可用</span><br><span class="line">Ctrl + T版本控制更新项目，需要此项目有加入到版本控制才可用</span><br><span class="line">Ctrl + H显示当前类的层次结构</span><br><span class="line">Ctrl + O选择可重写的方法</span><br><span class="line">Ctrl + I选择可继承的方法</span><br><span class="line">Ctrl + +展开代码</span><br><span class="line">Ctrl + -折叠代码</span><br><span class="line">Ctrl + &#x2F;注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 （必备）</span><br><span class="line">Ctrl + [移动光标到当前所在代码的花括号开始位置</span><br><span class="line">Ctrl + ]移动光标到当前所在代码的花括号结束位置</span><br><span class="line">Ctrl + F1在光标所在的错误代码出显示错误信息</span><br><span class="line">Ctrl + F3调转到所选中的词的下一个引用位置</span><br><span class="line">Ctrl + F4关闭当前编辑文件</span><br><span class="line">Ctrl + F8在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点</span><br><span class="line">Ctrl + F9执行 Make Project 操作</span><br><span class="line">Ctrl + F11选中文件 &#x2F; 文件夹，使用助记符设定 &#x2F; 取消书签</span><br><span class="line">Ctrl + F12弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选</span><br><span class="line">Ctrl + Tab编辑窗口切换，如果在切换的过程又加按上delete，则是关闭对应选中的窗口</span><br><span class="line">Ctrl + Enter智能分隔行</span><br><span class="line">Ctrl + End跳到文件尾</span><br><span class="line">Ctrl + Home跳到文件头</span><br><span class="line">Ctrl + Space基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 Ctrl + 逗号（必备）</span><br><span class="line">Ctrl + Delete删除光标后面的单词或是中文句</span><br><span class="line">Ctrl + BackSpace删除光标前面的单词或是中文句</span><br><span class="line">Ctrl + 1,2,3...9定位到对应数值的书签位置</span><br><span class="line">Ctrl + 左键单击在打开的文件标题上，弹出该文件路径</span><br><span class="line">Ctrl + 光标定位按 Ctrl 不要松开，会显示光标所在的类信息摘要</span><br><span class="line">Ctrl + 左方向键光标跳转到当前单词 &#x2F; 中文句的左侧开头位置</span><br><span class="line">Ctrl + 右方向键光标跳转到当前单词 &#x2F; 中文句的右侧开头位置</span><br><span class="line">Ctrl + 前方向键等效于鼠标滚轮向前效果</span><br><span class="line">Ctrl + 后方向键等效于鼠标滚轮向后效果</span><br></pre></td></tr></table></figure><h3 id="22alt"><a class="markdownIt-Anchor" href="#22alt"></a> 2.2：Alt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">Alt+ &#x2F;基础代码补全Main menu--code--Completion(完成)--Basic</span><br><span class="line">Alt +  显示版本控制常用操作菜单弹出层</span><br><span class="line">Alt + Q弹出一个提示，显示当前类的声明 &#x2F; 上下文信息</span><br><span class="line">Alt + F1显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择</span><br><span class="line">Alt + F2对于前面页面，显示各类浏览器打开目标选择弹出层</span><br><span class="line">Alt + F3选中文本，逐个往下查找相同文本，并高亮显示</span><br><span class="line">Alt + F7查找光标所在的方法&#x2F;变量&#x2F;类被调用的地方</span><br><span class="line">Alt + F8在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果</span><br><span class="line">Alt + Home定位 &#x2F; 显示到当前文件的 Navigation Bar</span><br><span class="line">Alt + Enter根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同(必备)</span><br><span class="line">Alt + Insert代码自动生成，如生成对象的 set &#x2F; get 方法，构造函数，toString() 等</span><br><span class="line">Alt + 左方向键按左方向切换当前已打开的文件视图</span><br><span class="line">Alt + 右方向键按右方向切换当前已打开的文件视图</span><br><span class="line">Alt + 前方向键当前光标跳转到当前文件的前一个方法名位置</span><br><span class="line">Alt + 后方向键当前光标跳转到当前文件的后一个方法名位置</span><br><span class="line">Alt + 1,2,3...9显示对应数值的选项卡，其中 1 是 Project 用得最多</span><br></pre></td></tr></table></figure><h3 id="23shift"><a class="markdownIt-Anchor" href="#23shift"></a> 2.3：Shift</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">Shift + F1如果有外部文档可以连接外部文档</span><br><span class="line">Shift + F2跳转到上一个高亮错误 或 警告位置</span><br><span class="line">Shift + F3在查找模式下，查找匹配上一个</span><br><span class="line">Shift + F4对当前打开的文件，使用新Windows窗口打开，旧窗口保留</span><br><span class="line">Shift + F6重构 – 文件重命名&#x2F;批量重命名(选中一个变量名，然后修改加回车)</span><br><span class="line">Shift + F7在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法</span><br><span class="line">Shift + F8在 Debug 模式下，跳出，表现出来的效果跟 F9 一样</span><br><span class="line">Shift + F9等效于点击工具栏的 Debug 按钮</span><br><span class="line">Shift + F10等效于点击工具栏的 Run 按钮</span><br><span class="line">Shift + F11弹出书签显示层</span><br><span class="line">Shift + Tab取消缩进</span><br><span class="line">Shift + ESC隐藏当前 或 最后一个激活的工具窗口</span><br><span class="line">Shift + End选中光标到当前行尾位置</span><br><span class="line">Shift + Home选中光标到当前行头位置</span><br><span class="line">Shift + Enter开始新一行。光标所在行下空出一行，光标定位到新行位置</span><br><span class="line">Shift + 左键单击在打开的文件名上按此快捷键，可以关闭当前打开文件</span><br><span class="line">Shift + 滚轮前后滚动当前文件的横向滚动轴滚动</span><br></pre></td></tr></table></figure><h3 id="24ctrl-alt"><a class="markdownIt-Anchor" href="#24ctrl-alt"></a> 2.4：Ctrl + Alt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">Ctrl + Alt + U选中类名，在当前标签页以图形方式展现类的继承体系(选中类名右键Diagrams(图形化))</span><br><span class="line">Ctrl+Alt+Shift+U：新开一页展示</span><br><span class="line">Ctrl + Alt + L格式化代码，可以对当前文件和整个包目录使用 （必备）</span><br><span class="line">Ctrl + Alt + O优化导入的类，可以对当前文件和整个包目录使用 （必备）</span><br><span class="line">Ctrl + Alt + I光标所在行 或 选中部分进行自动代码缩进，有点类似格式化</span><br><span class="line">Ctrl + Alt + T对选中的代码弹出环绕选项弹出层</span><br><span class="line">Ctrl + Alt + J弹出模板选择窗口，讲选定的代码加入动态模板中</span><br><span class="line">Ctrl + Alt + H调用层次</span><br><span class="line">Ctrl + Alt + B在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</span><br><span class="line">Ctrl + Alt + V快速引进变量</span><br><span class="line">Ctrl + Alt + Y同步、刷新</span><br><span class="line">Ctrl + Alt + S打开 IntelliJ IDEA 系统设置</span><br><span class="line">Ctrl + Alt + F7显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来</span><br><span class="line">Ctrl + Alt + F11切换全屏模式</span><br><span class="line">Ctrl + Alt + Enter光标所在行上空出一行，光标定位到新行</span><br><span class="line">Ctrl + Alt + Home弹出跟当前文件有关联的文件弹出层</span><br><span class="line">Ctrl + Alt + Space类名自动完成</span><br><span class="line">Ctrl + Alt + 左方向键退回到上一个操作的地方 （必备）</span><br><span class="line">Ctrl + Alt + 右方向键前进到上一个操作的地方 （必备）</span><br><span class="line">Ctrl + Alt + 前方向键在查找模式下，跳到上个查找的文件</span><br><span class="line">Ctrl + Alt + 后方向键在查找模式下，跳到下个查找的文件</span><br></pre></td></tr></table></figure><h3 id="25ctrl-shift"><a class="markdownIt-Anchor" href="#25ctrl-shift"></a> 2.5：Ctrl + Shift</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">Ctrl + Shift + F根据输入内容查找整个项目 或 指定目录内文件 （必备）</span><br><span class="line">Ctrl + Shift + R根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 （必备）</span><br><span class="line">Ctrl + Shift + J自动将下一行合并到当前行末尾 （必备）</span><br><span class="line">Ctrl + Shift + Z取消撤销 （必备）</span><br><span class="line">Ctrl + Shift + W递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围 （必备）</span><br><span class="line">Ctrl + Shift + N通过文件名定位 &#x2F; 打开文件 &#x2F; 目录，打开目录需要在输入的内容后面多加一个正斜杠 （必备）</span><br><span class="line">Ctrl + Shift + U对选中的代码进行大&#x2F;小写轮流转换(必备)</span><br><span class="line">Ctrl + Shift + T对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择</span><br><span class="line">Ctrl + Shift + C复制当前文件磁盘路径到剪贴板</span><br><span class="line">Ctrl + Shift + V弹出缓存的最近拷贝的内容管理器弹出层</span><br><span class="line">Ctrl + Shift + E显示最近修改的文件列表的弹出层</span><br><span class="line">Ctrl + Shift + H显示方法层次结构</span><br><span class="line">Ctrl + Shift + B跳转到类型声明处</span><br><span class="line">Ctrl + Shift + I快速查看光标所在的方法 或 类的定义</span><br><span class="line">Ctrl + Shift + A查找动作 &#x2F; 设置</span><br><span class="line">Ctrl + Shift + &#x2F;代码块注释 （必备）</span><br><span class="line">Ctrl + Shift + [选中从光标所在位置到它的顶部中括号位置</span><br><span class="line">Ctrl + Shift + ]选中从光标所在位置到它的底部中括号位置</span><br><span class="line">Ctrl + Shift + +展开所有代码</span><br><span class="line">Ctrl + Shift + -折叠所有代码</span><br><span class="line">Ctrl + Shift + F7高亮显示所有该选中文本，按Esc高亮消失</span><br><span class="line">Ctrl + Shift + F8在 Debug 模式下，指定断点进入条件</span><br><span class="line">Ctrl + Shift + F9编译选中的文件 &#x2F; 包 &#x2F; Module</span><br><span class="line">Ctrl + Shift + F12编辑器最大化</span><br><span class="line">Ctrl + Shift + Space智能代码提示</span><br><span class="line">Ctrl + Shift + Enter自动结束代码，行末自动添加分号 （必备）</span><br><span class="line">Ctrl + Shift + Backspace退回到上次修改的地方</span><br><span class="line">Ctrl + Shift + 1,2,3...9快速添加指定数值的书签</span><br><span class="line">Ctrl + Shift + 左方向键在代码文件上，光标跳转到当前单词 &#x2F; 中文句的左侧开头位置，同时选中该单词 &#x2F; 中文句</span><br><span class="line">Ctrl + Shift + 右方向键在代码文件上，光标跳转到当前单词 &#x2F; 中文句的右侧开头位置，同时选中该单词 &#x2F; 中文句</span><br><span class="line">Ctrl + Shift + 左方向键在光标焦点是在工具选项卡上，缩小选项卡区域</span><br><span class="line">Ctrl + Shift + 右方向键在光标焦点是在工具选项卡上，扩大选项卡区域</span><br><span class="line">Ctrl + Shift + 前方向键光标放在方法名上，将方法移动到上一个方法前面，调整方法排序</span><br><span class="line">Ctrl + Shift + 后方向键光标放在方法名上，将方法移动到下一个方法前面，调整方法排序</span><br></pre></td></tr></table></figure><h3 id="26alt-shift"><a class="markdownIt-Anchor" href="#26alt-shift"></a> 2.6：Alt + Shift</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">Alt + Shift + N选择 &#x2F; 添加 task</span><br><span class="line">Alt + Shift + F显示添加到收藏夹弹出层</span><br><span class="line">Alt + Shift + C查看最近操作项目的变化情况列表</span><br><span class="line">Alt + Shift + F添加到收藏夹</span><br><span class="line">Alt + Shift + I查看项目当前文件</span><br><span class="line">Alt + Shift + F7在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入</span><br><span class="line">Alt + Shift + F9弹出 Debug 的可选择菜单</span><br><span class="line">Alt + Shift + F10弹出 Run 的可选择菜单</span><br><span class="line">Alt + Shift + 左键双击选择被双击的单词 &#x2F; 中文句，按住不放，可以同时选择其他单词 &#x2F; 中文句</span><br><span class="line">Alt + Shift + 前方向键移动光标所在行向上移动</span><br><span class="line">Alt + Shift + 后方向键移动光标所在行向下移动</span><br></pre></td></tr></table></figure><h3 id="27ctrl-shift-alt"><a class="markdownIt-Anchor" href="#27ctrl-shift-alt"></a> 2.7：Ctrl + Shift + Alt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">Ctrl + Shift + Alt + V无格式黏贴</span><br><span class="line">Ctrl + Shift + Alt + N前往指定的变量 &#x2F; 方法</span><br><span class="line">Ctrl + Shift + Alt + S打开当前项目设置</span><br><span class="line">Ctrl + Shift + Alt + C复制参考信息</span><br></pre></td></tr></table></figure><h3 id="28其他"><a class="markdownIt-Anchor" href="#28其他"></a> 2.8：其他</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">快捷键介绍</span><br><span class="line">F2跳转到下一个高亮错误 或 警告位置 （必备）</span><br><span class="line">F3在查找模式下，定位到下一个匹配处</span><br><span class="line">F4编辑源</span><br><span class="line">F7在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</span><br><span class="line">F8在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</span><br><span class="line">F9在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上</span><br><span class="line">F11添加书签</span><br><span class="line">F12回到前一个工具窗口</span><br><span class="line">Tab缩进</span><br><span class="line">ESC从工具窗口进入代码文件窗口</span><br><span class="line">连按两次Shift弹出 Search Everywhere 弹出层</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jetbrains </tag>
            
            <tag> IntelliJIDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一台电脑配置两个 SSH 连接两个 GitHub 账户</title>
      <link href="/article/f85ee879/"/>
      <url>/article/f85ee879/</url>
      
        <content type="html"><![CDATA[<p><strong>起因：</strong> 搭建博客的时候，搭建了一个技术博，一个生活博。两个博客是由两个不同的 GitHub 账户管理，两个都想用 SSH 连接 GitHub</p><p>下边就以 <code>test@163.com</code> 为旧帐户、<code>test@qq.com</code> 为新账户为例</p><p><strong>已知：</strong></p><ul><li>旧账户 (<a href="mailto:test@163.com">test@163.com</a>) 生成了一个密钥对：<code>id_rsa</code> 为私钥，<code>id_rsa_pub</code> 为公钥</li><li>下文中所有 <code>~</code> 代表用户的家目录，也就是 windows 中 <code>C:\Users\用户名</code> 目录</li><li>所有命令请在 <code>Git Bash</code> 中执行</li></ul><h2 id="1生成新账户的密钥对"><a class="markdownIt-Anchor" href="#1生成新账户的密钥对"></a> 1：生成新账户的密钥对</h2><p>使用 <code>ssh-keygen</code> 生成一个新的密钥对</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令, 新密钥的名称无所谓,只要不与旧帐户的id_rsa同名即可</span></span><br><span class="line">ssh-keygen -t rsa -f ~/.ssh/新密钥的名称 -C <span class="string">&quot;邮箱&quot;</span></span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">ssh-keygen -t rsa -f ~/.ssh/id_rsa_test_qq -C <span class="string">&quot;test@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><ol><li><code>-f</code> ：用于指定密钥对生成的地方，若配置的是第二个账户，就会默认生成在当前目录下 (目前处于的目录)</li><li><code>新密钥的名称</code> ：不要使用 <code>id_rsa</code> 不然的话会发生覆盖。</li></ol><h2 id="2将私钥添加到-ssh-agent"><a class="markdownIt-Anchor" href="#2将私钥添加到-ssh-agent"></a> 2：将私钥添加到 SSH agent</h2><p>打开 ssh agent，若不执行会提示 “Could not open a connection to your authentication agent”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent bash</span><br></pre></td></tr></table></figure><p>清除缓存并添加私钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清除缓存</span></span><br><span class="line">ssh-add -D</span><br><span class="line"><span class="comment"># 添加私钥</span></span><br><span class="line">ssh-add ~/.ssh/id_rsa</span><br><span class="line">ssh-add ~/.ssh/id_rsa_test_qq</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取确私钥列表</span></span><br><span class="line">ssh-add -l</span><br></pre></td></tr></table></figure><h2 id="3添加配置文件"><a class="markdownIt-Anchor" href="#3添加配置文件"></a> 3：添加配置文件</h2><p>在 <code>~/.ssh</code> 目录下新建一个没有后缀的 config 文件，用于管理不同的主机 (其实骗过 git，让它以为是两个主机) 与密钥的关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch config</span><br></pre></td></tr></table></figure><p>添加内容：！！ <code>Host</code> 第五步时需要用到，请牢记自己配置的内容！！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 主机 Host 和 私钥 IdentityFile，不一样即可</span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">Host test.qq.github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_test_qq</span><br></pre></td></tr></table></figure><h2 id="4配置单个仓库的用户名邮箱"><a class="markdownIt-Anchor" href="#4配置单个仓库的用户名邮箱"></a> 4：配置单个仓库的用户名/邮箱</h2><p>旧帐户配置的全局账户可以取消，也可以不取消 (作为默认 git 账户)，取消命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> <span class="string">&quot;test-163&quot;</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> <span class="string">&quot;test.@163.com&quot;</span></span><br></pre></td></tr></table></figure><p>在需要用新账户的仓库中单独设置用户名/邮箱：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name <span class="string">&quot;test-qq&quot;</span></span><br><span class="line">git config user.email <span class="string">&quot;test@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p>如果此时报错：<code>fatal: not in a git directory</code>，说明你当前没有处于包含 <code>.git</code> 的目录中</p><blockquote><p>如果你也是给 Hexo 配置，那就进入博客中的 deploy_git 中执行</p></blockquote><p>执行以下命令可以查看设置是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><h2 id="5push-时需要修改-git-地址"><a class="markdownIt-Anchor" href="#5push-时需要修改-git-地址"></a> 5：push 时需要修改 git 地址</h2><blockquote><p>仅新账户 push 时需要修改，此步骤与 <code>3：添加配置文件</code> 中的 Host 相对应</p></blockquote><p>原来使用 ssh 推送的 git 地址为：<code>git@github.com:用户名/仓库名.git</code></p><p>现在：<code>git@你配置Host:用户名/仓库名.git</code></p><p>例如：<code>git@test.qq.github.com:test-qq/repo.git</code></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 基础使用</title>
      <link href="/article/2eec1551/"/>
      <url>/article/2eec1551/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 写作常用配置记录</title>
      <link href="/article/324da06/"/>
      <url>/article/324da06/</url>
      
        <content type="html"><![CDATA[<h1 id="一-front-matter"><a class="markdownIt-Anchor" href="#一-front-matter"></a> 一、Front-matter</h1><h2 id="1页面-front-matter"><a class="markdownIt-Anchor" href="#1页面-front-matter"></a> 1：页面 Front-matter</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">页面标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">页面创建日期</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">标签、分类和友情链接三个页面需要配置</span></span><br><span class="line"><span class="attr">updated:</span> <span class="string">页面更新日期</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">页面描述</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">页面关键字</span></span><br><span class="line"><span class="attr">comments:</span> <span class="string">显示页面评论模块</span> <span class="string">(默认</span> <span class="literal">true</span><span class="string">)</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">页面顶部图片</span></span><br><span class="line"><span class="attr">katex:</span> <span class="string">显示</span> <span class="string">katex</span> <span class="string">(当设置</span> <span class="string">katex</span> <span class="string">的</span> <span class="string">per_page：false</span> <span class="string">时，才需要配置，默认</span> <span class="literal">false</span><span class="string">)</span></span><br><span class="line"><span class="attr">aside:</span> <span class="string">显示侧边栏</span> <span class="string">(默认</span> <span class="literal">true</span><span class="string">)</span></span><br><span class="line"><span class="attr">aplayer:</span> <span class="string">在需要的页面加载</span> <span class="string">aplayer</span> <span class="string">的</span> <span class="string">js</span> <span class="string">和</span> <span class="string">css</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="string">配置代码框是否展开</span> <span class="string">(true/false)(默认为设置中</span> <span class="string">highlight_shrink</span> <span class="string">的配置)</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="2文章-front-matter"><a class="markdownIt-Anchor" href="#2文章-front-matter"></a> 2：文章 Front-matter</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">文章标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">文章创建日期</span></span><br><span class="line"><span class="attr">updated:</span> <span class="string">文章更新日期</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">文章标签</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">文章关键字</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">文章描述</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">文章顶部图片</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">文章缩略图</span> <span class="string">(如果没有设置</span> <span class="string">top_img,</span> <span class="string">文章页顶部将显示缩略图，可设为</span> <span class="literal">false</span> <span class="string">/</span> <span class="string">图片地址</span> <span class="string">/</span> <span class="string">留空)</span></span><br><span class="line"><span class="attr">comments:</span> <span class="string">显示文章评论模块</span> <span class="string">(默认</span> <span class="literal">true</span><span class="string">)</span></span><br><span class="line"><span class="attr">toc:</span> <span class="string">显示文章</span> <span class="string">TOC</span> <span class="string">(默认为设置中</span> <span class="string">toc</span> <span class="string">的</span> <span class="string">enable</span> <span class="string">配置)</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="string">显示</span> <span class="string">toc_number</span> <span class="string">(默认为设置中</span> <span class="string">toc</span> <span class="string">的</span> <span class="string">number</span> <span class="string">配置)</span></span><br><span class="line"><span class="attr">auto_open:</span> <span class="string">是否自动打开</span> <span class="string">TOC</span> <span class="string">(默认为设置中</span> <span class="string">toc</span> <span class="string">的</span> <span class="string">auto_open</span> <span class="string">配置)</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="string">显示文章版权模块</span> <span class="string">(默认为设置中</span> <span class="string">post_copyright</span> <span class="string">的</span> <span class="string">enable</span> <span class="string">配置)</span></span><br><span class="line"><span class="attr">copyright_author:</span> <span class="string">文章版权模块的文章作者</span></span><br><span class="line"><span class="attr">copyright_author_href:</span> <span class="string">文章版权模块的文章作者链接</span></span><br><span class="line"><span class="attr">copyright_url:</span> <span class="string">文章版权模块的文章链接</span></span><br><span class="line"><span class="attr">copyright_info:</span> <span class="string">文章版权模块的版权声明文字</span></span><br><span class="line"><span class="attr">katex:</span> <span class="string">显示</span> <span class="string">katex</span> <span class="string">(当设置</span> <span class="string">katex</span> <span class="string">的</span> <span class="string">per_page：false</span> <span class="string">时，才需要配置，默认</span> <span class="literal">false</span><span class="string">)</span></span><br><span class="line"><span class="attr">aplayer:</span> <span class="string">在需要的页面加载</span> <span class="string">aplayer</span> <span class="string">的</span> <span class="string">js</span> <span class="string">和</span> <span class="string">css,</span> <span class="string">请参考文章下面的音乐</span> <span class="string">配置</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="string">配置代码框是否展开</span> <span class="string">(true/false)(默认为设置中</span> <span class="string">highlight_shrink</span> <span class="string">的配置)</span></span><br><span class="line"><span class="attr">sticky:</span> <span class="string">文章置顶，数值越大优先级越高</span></span><br></pre></td></tr></table></figure><h1 id="二-标签外挂"><a class="markdownIt-Anchor" href="#二-标签外挂"></a> 二、标签外挂</h1><h2 id="1提示标签外挂-note"><a class="markdownIt-Anchor" href="#1提示标签外挂-note"></a> 1：提示标签外挂 (note)</h2><p><strong>格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>[class]</code>：标签类型，可选类型有：default | primary | success | info | warning | danger</p><p>分别对应：默认 | 基本| 成功 | 信息 | 警告 | 危险</p></li><li><p><code>[no-icon]</code> ：关闭前边的 icon</p></li></ul><h2 id="2多标签外挂-tabs"><a class="markdownIt-Anchor" href="#2多标签外挂-tabs"></a> 2：多标签外挂 (tabs)</h2><p><strong>格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab [Tab caption] [@icon] --&gt;</span></span></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p><code>Unique name</code>： 当前多标签在当前整篇文章中唯一标识 (不可以带逗号)</p><ul><li>它是所有子标签的前缀 (如果没有指定子标题的名称的话)</li><li>如果名称中有空格将被 “-” 代替</li><li>在当前文章中唯一，不可以重复</li></ul><p><code>[index]</code>：默认展示的标签页。可选参数</p><ul><li>如果没有指定，默认选择第一个选项卡 (1)</li><li>如果索引为 -1，则不会选择任何选项卡</li></ul><p><code>[Tab caption]</code>：当前标签的标题。可选参数</p><ul><li>如果没有指定标题，则使用 <code>Unique name + 标签索引</code> 作为标题</li><li>如果没有指定标题，但指定了 icon，就显示图标</li></ul><p><code>[@icon]</code>：<a href="https://fontawesome.com/">FontAwesome</a> 图标名 (例如：‘fas fa-font’)，标签名和图标名之间可以加空格也可以不加</p><h2 id="3流程图外挂-mermaid"><a class="markdownIt-Anchor" href="#3流程图外挂-mermaid"></a> 3：流程图外挂 (mermaid)</h2><p><a href="https://mermaid-js.github.io/mermaid/#/">mermaid</a> 文档</p><p><strong>格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><h2 id="4隐藏标签外挂-tag-hide"><a class="markdownIt-Anchor" href="#4隐藏标签外挂-tag-hide"></a> 4：隐藏标签外挂 (tag-hide)</h2><div class="note danger"><p>隐藏标签内使用 h1~h6 的标题，不然会影响 Toc</p></div><p>butterfly 支持三种标签隐藏外挂方式：</p><div class="tabs" id="隐藏标签外挂"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#隐藏标签外挂-1">inline</button></li><li class="tab"><button type="button" data-href="#隐藏标签外挂-2">Block</button></li><li class="tab active"><button type="button" data-href="#隐藏标签外挂-3">Toggle</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="隐藏标签外挂-1"><p><code>inline</code> 在文本里面添加按钮隐藏内容，只限文字</p><div class="note danger"><p>content 不能包含英文逗号，可用 <code>&amp;sbquo;</code> 代替</p></div><p><strong>格式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br></pre></td></tr></table></figure><p><code>content</code>：文本内容</p><p><code>display</code>：按钮显示的文字 (可选)</p><p><code>bg</code>：按钮的背景颜色 (可选)</p><p><code>color</code>：按钮文字的颜色 (可选)</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="隐藏标签外挂-2"><p>block 独立的 block 隐藏内容，可以隐藏很多内容，包括图片，代码块等等</p><div class="note danger"><p>content 不能包含英文逗号，可用 <code>&amp;sbquo;</code> 代替</p></div><p><strong>格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><p><code>display</code>：按钮显示的文字 (可选)</p><p><code>content</code>：文本内容</p><p><code>bg</code>：按钮的背景颜色 (可选)</p><p><code>color</code>：按钮文字的颜色 (可选)</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="隐藏标签外挂-3"><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。</p><div class="note danger"><p>display 不能包含英文逗号，可用 <code>&amp;sbquo;</code> 代替</p></div><p><strong>格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><p><code>display</code>：按钮显示的文字 (可选)</p><p><code>content</code>：文本内容</p><p><code>bg</code>：按钮的背景颜色 (可选)</p><p><code>color</code>：按钮文字的颜色 (可选)</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="5按钮标签外挂-button"><a class="markdownIt-Anchor" href="#5按钮标签外挂-button"></a> 5：按钮标签外挂 (Button)</h2><p><strong>格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br></pre></td></tr></table></figure><p><code>[url]</code>：链接</p><p><code>[text]</code>：按钮文字</p><p><code>[icon]</code>： [可选] 图标</p><p><code>[color]</code>：[可选]，按钮背景颜色</p><ul><li>默认 style</li><li>按钮字体和边框颜色 ( outline 时)</li><li>default / blue / pink / red / purple / orange / green</li></ul><p><code>[style]</code>：[可选] 按钮样式</p><ul><li>实心 (默认)</li><li>outline</li><li>留空</li></ul><p><code>[layout]</code>：[可选] 按钮布局</p><ul><li>line (默认)</li><li>block</li><li>留空</li></ul><p><code>[position]</code>：[可选] 按钮位置，前提是设置了 layout 为 block 默认为左边</p><ul><li>center</li><li>right</li><li>留空</li></ul><p><code>[size]</code>：[可选] 按钮大小</p><ul><li>larger</li><li>留空</li></ul><h2 id="6相册标签外挂-gallerygroup"><a class="markdownIt-Anchor" href="#6相册标签外挂-gallerygroup"></a> 6：相册标签外挂 (galleryGroup)</h2><p><strong>格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup 相册名称 相册描述 相册链接 封面地址 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="7相片外挂-gallery"><a class="markdownIt-Anchor" href="#7相片外挂-gallery"></a> 7：相片外挂 (gallery)</h2><p><strong>格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown中咋引入图片这里就咋写</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Butterfly 主题</title>
      <link href="/article/b9d6e722/"/>
      <url>/article/b9d6e722/</url>
      
        <content type="html"><![CDATA[<h1 id="一-使用"><a class="markdownIt-Anchor" href="#一-使用"></a> 一、使用</h1><p>如何使用，可参考<a href="https://demo.jerryc.me/posts/21cfbf15">官方文档</a></p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>我的配置</span></div>    <div class="hide-content"><p>下边是我的 <code>_config.butterfly.yml</code> 配置，可供参考</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Butterfly 主题设置，参考文档：https://demo.jerryc.me/posts/21cfbf15/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################### 网站布局 #####################</span></span><br><span class="line"><span class="comment">#-------------------- 导航菜单 --------------------#</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="comment"># 格式: name: link || icon</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment"># 子菜单格式: &#x27;name || icon:&#x27; + &#x27;- name || link || icon&#x27;</span></span><br><span class="line">  <span class="string">文章</span> <span class="string">||</span> <span class="attr">fas fa-book:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">分类</span> <span class="string">||</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">标签</span> <span class="string">||</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">时间轴</span> <span class="string">||</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">友链:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">百宝箱:</span> <span class="string">/chest/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-box</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br><span class="line"><span class="comment">#-------------------- 图片设置 --------------------#</span></span><br><span class="line"><span class="comment"># 网站图标</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/favicon.ico</span></span><br><span class="line"><span class="comment"># 头像</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/avatar.webp</span></span><br><span class="line">  <span class="comment"># 是否让头像一直转圈</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 社交图标，书写格式: &#x27;图标名: url || 描述&#x27;</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fab fa-github:</span> <span class="string">https://github.com/petrel1024</span> <span class="string">||</span> <span class="string">Github</span></span><br><span class="line">  <span class="attr">fas fa-envelope:</span> <span class="string">mailto:petrel1024@163.com</span> <span class="string">||</span> <span class="string">Email</span></span><br><span class="line"><span class="comment"># 主页顶部图</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="comment"># https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/default_top_img.webp</span></span><br><span class="line"><span class="comment"># 主页 top_img 显示大小。默认top_img全屏, site_info在中间</span></span><br><span class="line"><span class="comment"># 主页标题距离顶部距离，例如: 300px/300em/300rem/10%，可不指定</span></span><br><span class="line"><span class="attr">index_site_info_top:</span></span><br><span class="line"><span class="comment"># 主页top_img高度, 例如: 300px/300em/300rem (不用使用百分比)，可不指定</span></span><br><span class="line"><span class="attr">index_top_img_height:</span> <span class="string">360px</span></span><br><span class="line"><span class="comment"># 页面如果没有设置各自的top_img，则会显示default_top_img图片</span></span><br><span class="line"><span class="attr">default_top_img:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/default_top_img.webp</span></span><br><span class="line"><span class="comment"># archives页的顶部图</span></span><br><span class="line"><span class="attr">archive_img:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/default_archive_top_img.webp</span></span><br><span class="line"><span class="comment"># 标签页的顶部图</span></span><br><span class="line"><span class="comment"># 子标签页面的顶部图</span></span><br><span class="line"><span class="attr">tag_img:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/default_tags_top_img.webp</span></span><br><span class="line"><span class="comment"># 分类页的顶部图</span></span><br><span class="line"><span class="comment"># 子分类页面的顶部图</span></span><br><span class="line"><span class="attr">category_img:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/default_category_top_img.webp</span></span><br><span class="line"><span class="comment"># 封面</span></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># 是否显示文章封面</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 封面显示的位置</span></span><br><span class="line">  <span class="comment"># 三个值可配置left , right , both</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment"># 当没有设置cover时，显示的默认封面</span></span><br><span class="line">  <span class="attr">default_cover:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/default_cover.webp</span></span><br><span class="line"><span class="comment"># 替换无法显示的图片</span></span><br><span class="line"><span class="attr">error_img:</span></span><br><span class="line">  <span class="attr">flink:</span> <span class="string">/img/friend_404.gif</span></span><br><span class="line">  <span class="attr">post_page:</span> <span class="string">/img/404.jpg</span></span><br><span class="line"><span class="comment"># 404 页面</span></span><br><span class="line"><span class="attr">error_404:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&#x27;你的页面被海燕带着飞走了~&#x27;</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/404.webp</span></span><br><span class="line"><span class="comment"># 图片描述</span></span><br><span class="line"><span class="attr">photofigcaption:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#-------------------- 侧边栏 --------------------#</span></span><br><span class="line"><span class="comment"># 在移动侧边栏中隐藏子菜单项</span></span><br><span class="line"><span class="attr">hide_sidebar_menu_child:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 手机页面（ 显示宽度 &lt; 768px ）是否显示aside内容</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 侧边栏的位置 left 或者 right</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment"># 作者卡片</span></span><br><span class="line">  <span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 默认显示 _config.yml 中的网站描述，也可以再这里从新写</span></span><br><span class="line">    <span class="attr">description:</span></span><br><span class="line">    <span class="comment"># 按钮</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">Github</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://github.com/petrel1024</span></span><br><span class="line">  <span class="comment"># 公告卡片</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 内容</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">博文有不当之处，请不吝赐教</span></span><br><span class="line">  <span class="comment"># 最近文章卡片</span></span><br><span class="line">  <span class="attr">card_recent_post:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 如果设置为0将显示全部</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">3</span></span><br><span class="line">    <span class="comment"># 根据创建时间排序 date or updated</span></span><br><span class="line">    <span class="attr">sort:</span> <span class="string">date</span></span><br><span class="line">  <span class="comment"># 分类卡片</span></span><br><span class="line">  <span class="attr">card_categories:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 如果设置为0将显示全部</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">0</span></span><br><span class="line">    <span class="comment"># 分类不可折叠(none)/可折叠默认展开(true)/可折叠默认不展开(false)</span></span><br><span class="line">    <span class="attr">expand:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 标签卡片</span></span><br><span class="line">  <span class="attr">card_tags:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 如果设置为0将显示全部</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">0</span></span><br><span class="line">    <span class="comment"># 彩色字体</span></span><br><span class="line">    <span class="attr">color:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 归档卡片</span></span><br><span class="line">  <span class="attr">card_archives:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 按年归档 (yearly) 还是 按月归档 (monthly)</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">monthly</span></span><br><span class="line">    <span class="comment"># 日期格式</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">YYYY</span> <span class="string">年</span> <span class="string">MM</span> <span class="string">月</span></span><br><span class="line">    <span class="comment"># 排序：1, asc代表升序；-1, desc代表降序</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span></span><br><span class="line">    <span class="comment"># 如果设置为0将显示全部</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span></span><br><span class="line">  <span class="comment"># 网站资讯卡片</span></span><br><span class="line">  <span class="attr">card_webinfo:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">post_count:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">last_push_date:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 访问人数 不蒜子 (UV 和 PV) http://busuanzi.ibruce.info/</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 网站已运行时间</span></span><br><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 格式: 月/日/年 时间 也可以写成 年/月/日 时间</span></span><br><span class="line">  <span class="attr">publish_date:</span> <span class="number">8</span><span class="string">/15/2020</span> <span class="number">00</span><span class="string">:00:00</span></span><br><span class="line"><span class="comment"># 最新评论</span></span><br><span class="line"><span class="attr">newest_comments:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 显示的数量</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span></span><br><span class="line">  <span class="comment"># 是否显示头像</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">leancloud:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">appId:</span> <span class="comment"># 等同于 valine 配置中的 appId</span></span><br><span class="line">    <span class="attr">appKey:</span> <span class="comment"># 等同于 valine 配置中的 appKey</span></span><br><span class="line">    <span class="attr">serverURL:</span> <span class="comment">#  等同于 valine 配置中的 serverURLs，国内版才需要配置</span></span><br><span class="line">    <span class="attr">default_avatar:</span> <span class="comment"># 默认头像，对于一些没有配置 Gravatar 头像的，将会显示默认头像，内置头像：mp/identicon/monsterid/wavatar/retro/robohash/blank</span></span><br><span class="line">  <span class="comment"># 评论存在的仓库，例如 jerryc127/jerryc127.github.io</span></span><br><span class="line">  <span class="attr">github_issues:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">disqus:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 等同于 disqusjs 的 shortname</span></span><br><span class="line">    <span class="attr">forum:</span></span><br><span class="line">    <span class="comment"># 等同于 disqusjs 的 apikey</span></span><br><span class="line">    <span class="attr">api_key:</span></span><br><span class="line"><span class="comment">#-------------------- 右下角 --------------------#</span></span><br><span class="line"><span class="comment"># 阅读模式，去掉除文章外的内容，避免干扰阅读</span></span><br><span class="line"><span class="attr">readmode:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 夜间模式</span></span><br><span class="line"><span class="attr">darkmode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 是否开启明亮与暗黑之间的切换按钮</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 自动切换明亮与暗黑</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 1  跟随系统而变化，不支持的浏览器/ 系统将按照时间晚上 6 点到早上 6 点之间切换为dark mode</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 2  只按照时间晚上 6 点到早上 6 点之间切换为 dark mode, 其余时间为 light mode</span></span><br><span class="line">  <span class="comment"># autoChangeMode: false 取消自动切换</span></span><br><span class="line">  <span class="attr">autoChangeMode:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#-------------------- 页脚 --------------------#</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># 所有者</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 站点起始时间</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2020</span></span><br><span class="line">  <span class="comment"># 自定义文本</span></span><br><span class="line">  <span class="attr">custom_text:</span> <span class="string">&#x27;Copyright © 2020 &lt;i style=&quot;color:#FF6A6A;animation: announ_animation 0.8s linear infinite;&quot; class=&quot;fa fa-heartbeat&quot;&gt;&lt;/i&gt; Petrel&lt;br/&gt;Power by &lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt; | Theme &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly&quot;&gt;butterfly&lt;/a&gt;&#x27;</span></span><br><span class="line">  <span class="comment"># 主题和框架的版权</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># ICP 备案信息</span></span><br><span class="line">  <span class="attr">ICP:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="comment"># http://www.beian.miit.gov.cn/state/outPortal/loginPortal.action</span></span><br><span class="line">    <span class="attr">text:</span> <span class="comment"># 苏ICP备xxxx</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">/img/icp.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################### 文章配置 #####################</span></span><br><span class="line"><span class="comment">#-------------------- 元数据展示 --------------------#</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="comment"># 主页展示的元数据</span></span><br><span class="line">  <span class="attr">page:</span></span><br><span class="line">    <span class="comment"># 显示创建时间 (created) 或者 更新时间 (updated) 或者 都显示 (both)</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span></span><br><span class="line">    <span class="comment"># 主页是否显示分类</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 主页是否显示标签</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 是否显示描述</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 文章页展示的元数据</span></span><br><span class="line">  <span class="attr">post:</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 文章介绍 --------------------#</span></span><br><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="comment"># 1: description. 只显示 description</span></span><br><span class="line">  <span class="comment"># 2: both, 优先选择 description，如果没有配置description，则显示自动节选的内容</span></span><br><span class="line">  <span class="comment"># 3: auto_excerpt,只显示自动节选 (默认)</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span> <span class="comment"># 如果将方法设置为2或3，则需要配置长度</span></span><br><span class="line"><span class="comment">#-------------------- 字数统计 --------------------#</span></span><br><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 文章目录 --------------------#</span></span><br><span class="line"><span class="comment"># 在你的文章md文件的Front-matter，加入toc_number、toc和auto_open，并配置true或者false即可。</span></span><br><span class="line"><span class="comment"># 主题会优先判断文章Markdown的Front-matter是否有配置，如有，则以Front-matter的配置为准。否则，以主题配置文件中的配置为准</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="comment"># 是否显示目录</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 是否显示章节数</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 进入文章页面时，是否自动打开侧边栏显示TOC</span></span><br><span class="line">  <span class="attr">auto_open:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 文章锚点 --------------------#</span></span><br><span class="line"><span class="comment"># 开启文章锚点后，当你在文章页进行滚动时，文章链接会根据标题ID进行替换</span></span><br><span class="line"><span class="comment"># 需要注意的是：每替换一次，会留下一个历史记录。所以如果一篇文章有很多锚点的话，网页的历史记录会很多。</span></span><br><span class="line"><span class="attr">anchor:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 文章过期提醒 --------------------#</span></span><br><span class="line"><span class="attr">noticeOutdate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 样式：simple/flat</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span></span><br><span class="line">  <span class="comment"># 距离更新时间多少天才显示文章过期提醒</span></span><br><span class="line">  <span class="attr">limit_day:</span> <span class="number">365</span></span><br><span class="line">  <span class="comment"># 显示的位置 top/bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="comment"># 最终显示的提示信息为：$&#123;message_prev&#125; + 距离更新时间的天数 + $&#123;message_next&#125;</span></span><br><span class="line">  <span class="comment"># 天数之前的文字</span></span><br><span class="line">  <span class="attr">message_prev:</span> <span class="string">此文章距今已有</span></span><br><span class="line">  <span class="comment"># 天数之后的文字</span></span><br><span class="line">  <span class="attr">message_next:</span> <span class="string">天没有更新了，内容可能已经过时</span></span><br><span class="line"><span class="comment">#-------------------- 文章版权 --------------------#</span></span><br><span class="line"><span class="comment"># 如果有文章（例如：转载文章）不需要显示版权，可以在文章Front-matter 单独设置copyright:false</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 由于Hexo 4.1开始，默认对网址进行解码，以至于如果是中文网址，会被解码，可设置decode: true来显示中文网址。</span></span><br><span class="line">  <span class="attr">decode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br><span class="line"><span class="comment">#-------------------- 文章打赏 --------------------#</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/images/wechat.png</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">支付宝</span></span><br><span class="line"><span class="comment">#-------------------- 相关文章 --------------------#</span></span><br><span class="line"><span class="comment"># 相关文章推荐的原理是根据文章 tags 的比重来推荐</span></span><br><span class="line"><span class="attr">related_post:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 显示推荐文章数目</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span></span><br><span class="line">  <span class="comment"># 显示推荐文章的创建日期或者更新日期</span></span><br><span class="line">  <span class="attr">date_type:</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################### 功能设置 #####################</span></span><br><span class="line"><span class="comment">#-------------------- 预加载 --------------------#</span></span><br><span class="line"><span class="comment"># 网址：https://instant.page/</span></span><br><span class="line"><span class="attr">instantpage:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 过渡动画 --------------------#</span></span><br><span class="line"><span class="comment"># 加载动画。当进入网页时，因为加载速度的问题，可能会导致 top_img 图片出现断层显示，或者网页加载不全而出现等待时间</span></span><br><span class="line"><span class="comment"># 开启 preloader 后，会显示加载动画，等页面加载完，加载动画会消失。</span></span><br><span class="line"><span class="attr">preloader:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#-------------------- 图片懒加载 --------------------#</span></span><br><span class="line"><span class="comment"># 网址：https://github.com/verlok/lazyload</span></span><br><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="string">/img/loading.gif</span></span><br><span class="line"><span class="comment">#-------------------- 开启缓存 --------------------#</span></span><br><span class="line"><span class="comment"># 开启 hexo 自带的缓存,加快生成速度</span></span><br><span class="line"><span class="attr">fragment_cache:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 禁止百度转码 --------------------#</span></span><br><span class="line"><span class="attr">disable_baidu_transformation:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 百度推送 --------------------#</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#-------------------- 中英文之间加空格 --------------------#</span></span><br><span class="line"><span class="comment"># 网址：https://github.com/vinta/pangu.js</span></span><br><span class="line"><span class="attr">pangu:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># site/post</span></span><br><span class="line"><span class="comment">#-------------------- 数学 --------------------#</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 设为 true, 则每一页都会加载 katex 服务</span></span><br><span class="line">  <span class="comment"># 设为 false，则需要在文章 Front-matter 添加 katex: true, 对应的文章才会加载 katex 服务</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hide_scrollbar:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 图片大图查看模式 --------------------#</span></span><br><span class="line"><span class="comment"># fancybox 网址：http://fancyapps.com/fancybox/3/</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 复制设置 --------------------#</span></span><br><span class="line"><span class="attr">copy:</span></span><br><span class="line">  <span class="comment"># 是否开启网站复制权限</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 复制内容后添加版权信息</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">    <span class="comment"># 是否开启复制版权信息添加</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 复制内容超过多少字添加版权信息</span></span><br><span class="line">    <span class="attr">limit_count:</span> <span class="number">50</span></span><br><span class="line"><span class="comment">#-------------------- 标签外挂 --------------------#</span></span><br><span class="line"><span class="comment"># 提示标签</span></span><br><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># 标签样式:</span></span><br><span class="line">  <span class="comment">#  - simple    默认值, 旧的</span></span><br><span class="line">  <span class="comment">#  - modern    新样式</span></span><br><span class="line">  <span class="comment">#  - flat      扁平式</span></span><br><span class="line">  <span class="comment">#  - disabled  取消框内样式，只显示前边的icon</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br><span class="line"><span class="comment"># 流程图标签，可参考：https://github.com/knsv/mermaid</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 主题内置样式: default/forest/dark/neutral</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">default</span></span><br><span class="line"><span class="comment">#-------------------- 搜索系统 --------------------#</span></span><br><span class="line"><span class="comment"># 需要安装：hexo-generator-search 插件</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="comment"># 没有搜索到的展示信息</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span></span><br><span class="line"><span class="comment">#-------------------- 分享功能 --------------------#</span></span><br><span class="line"><span class="comment"># Share.js，GitHub地址：https://github.com/overtrue/share.js</span></span><br><span class="line"><span class="attr">sharejs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sites:</span> <span class="string">qq,wechat,weibo</span></span><br><span class="line"><span class="comment"># Open graph meta tags</span></span><br><span class="line"><span class="comment"># https://developers.facebook.com/docs/sharing/webmasters/</span></span><br><span class="line"><span class="attr">Open_Graph_meta:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- 评论系统 --------------------#</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># 最多两个评论系统，第一个将显示为默认，如果不需要请留空</span></span><br><span class="line">  <span class="attr">use:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Valine</span></span><br><span class="line">  <span class="comment">## 是否显示评论服务商的名字</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">## 是否为评论开启 lazyLoad，开启后，只有滚动到评论位置时才会加载评论所需要的资源（开启 lazyLoad 后，评论数将不显示）</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否在文章顶部显示评论数。</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># valine评论系统，参考文档：https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="comment"># 从 LeanCloud 的应用中得到的 appId.</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="string">MkjAWENnDwXmvnYsIfUhmyx8-gzGzoHsz</span></span><br><span class="line">  <span class="comment"># 从 LeanCloud 的应用中得到的 appKey.</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="string">gzEvT8eRfOSxbsrI9OUwmSra</span></span><br><span class="line">  <span class="comment"># 评论列表页面大小</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span></span><br><span class="line">  <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span></span><br><span class="line">  <span class="comment"># i18n: zh-CN/zh-TW/en/ja</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span></span><br><span class="line">  <span class="comment"># 评论框占位提示符</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="number">1</span><span class="string">.</span> <span class="string">昵称填</span> <span class="string">QQ</span> <span class="string">号，会自动获取昵称和头像\n2.</span> <span class="string">输入框右下角可以输入表情\n3.</span> <span class="string">如需发图，将图片拖入输入框内即可</span></span><br><span class="line">  <span class="comment"># 头部评论者相关属性</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail</span></span><br><span class="line">  <span class="comment"># 是否记录评论者IP</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 该配置适用于国内自定义域名用户, 海外版本会自动检测(无需手动填写)</span></span><br><span class="line">  <span class="attr">serverURLs:</span></span><br><span class="line">  <span class="comment"># 背景图</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="string">https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/comment-background.webp</span></span><br><span class="line">  <span class="comment"># emoji CDN</span></span><br><span class="line">  <span class="attr">emojiCDN:</span> <span class="string">//i0.hdslb.com/bfs/emote/</span></span><br><span class="line">  <span class="comment"># 昵称输入QQ号, 自动获取头像信息</span></span><br><span class="line">  <span class="attr">enableQQ:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 设置必填项</span></span><br><span class="line">  <span class="attr">requiredFields:</span> <span class="string">nick,mail</span></span><br><span class="line"><span class="comment">#-------------------- 在线聊天 --------------------#</span></span><br><span class="line"><span class="comment"># 聊天按钮：它将在网站的右下角创建一个按钮，并隐藏原始按钮</span></span><br><span class="line"><span class="attr">chat_btn:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 向上滚动时显示原始聊天按钮，向下滚动时隐藏按钮</span></span><br><span class="line"><span class="attr">chat_hide_show:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># Butterfly主题内置了 5 种在线聊天工具</span></span><br><span class="line"><span class="comment"># chatra，服务商地址：https://chatra.io/</span></span><br><span class="line"><span class="attr">chatra:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">id:</span></span><br><span class="line"><span class="comment"># tidio，服务商地址：https://www.tidio.com/</span></span><br><span class="line"><span class="attr">tidio:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">public_key:</span></span><br><span class="line"><span class="comment"># daovoice，服务商地址：http://daovoice.io/</span></span><br><span class="line"><span class="attr">daovoice:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="string">a3e33c7d</span></span><br><span class="line"><span class="comment"># gitter，服务商地址：https://gitter.im/</span></span><br><span class="line"><span class="attr">gitter:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">room:</span> <span class="string">petrel1024/community</span></span><br><span class="line"><span class="comment"># crisp，服务商地址：https://crisp.chat/en/</span></span><br><span class="line"><span class="attr">crisp:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">website_id:</span> <span class="string">e32208c4-3765-4e62-9bc2-1226d16051b6</span></span><br><span class="line"><span class="comment">#-------------------- 弹窗提示 --------------------#</span></span><br><span class="line"><span class="comment"># https://github.com/polonel/SnackBar</span></span><br><span class="line"><span class="attr">snackbar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 弹窗位置：top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top-center</span></span><br><span class="line">  <span class="attr">bg_light:</span> <span class="string">&#x27;#009688&#x27;</span> <span class="comment"># 浅色模式下的弹窗背景</span></span><br><span class="line">  <span class="attr">bg_dark:</span> <span class="string">&#x27;#9370DB&#x27;</span> <span class="comment"># 深色模式下的弹窗背景</span></span><br><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#-------------------- Pjax [Beta] --------------------#</span></span><br><span class="line"><span class="comment"># It may contain bugs and unstable, give feedback when you find the bugs.</span></span><br><span class="line"><span class="comment"># https://github.com/MoOx/pjax</span></span><br><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">  <span class="comment"># - xxxx</span></span><br><span class="line">  <span class="comment"># - xxxx</span></span><br><span class="line"><span class="comment">#-------------------- PWA --------------------#</span></span><br><span class="line"><span class="comment"># 网址：https://github.com/JLHwung/hexo-offline</span></span><br><span class="line"><span class="comment"># pwa:</span></span><br><span class="line"><span class="comment">#   enable: false</span></span><br><span class="line"><span class="comment">#   manifest: /image/pwa/manifest.json</span></span><br><span class="line"><span class="comment">#   theme_color: &quot;#fff&quot;</span></span><br><span class="line"><span class="comment">#   apple_touch_icon: /image/pwa/apple-touch-icon.png</span></span><br><span class="line"><span class="comment">#   favicon_32_32: /image/pwa/32.png</span></span><br><span class="line"><span class="comment">#   favicon_16_16: /image/pwa/16.png</span></span><br><span class="line"><span class="comment">#   mask_icon: /image/pwa/safari-pinned-tab.svg</span></span><br><span class="line"><span class="comment">#-------------------- 分析统计 --------------------#</span></span><br><span class="line"><span class="comment"># Baidu Analytics，网址：https://tongji.baidu.com/web/welcome/login</span></span><br><span class="line"><span class="attr">baidu_analytics:</span></span><br><span class="line"><span class="comment"># Google Analytics 网址：https://analytics.google.com/analytics/web/</span></span><br><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line"><span class="comment"># Tencent Analytics ID 网址：https://mta.qq.com</span></span><br><span class="line"><span class="attr">tencent_analytics:</span></span><br><span class="line"><span class="comment"># CNZZ Analytics 网址：https://www.umeng.com/</span></span><br><span class="line"><span class="attr">cnzz_analytics:</span></span><br><span class="line"><span class="comment">#-------------------- 广告 --------------------#</span></span><br><span class="line"><span class="comment"># 谷歌广告</span></span><br><span class="line"><span class="attr">google_adsense:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">auto_ads:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">  <span class="attr">enable_page_level_ads:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 手动插入广告</span></span><br><span class="line"><span class="comment"># ad:</span></span><br><span class="line"><span class="comment">#   index:</span></span><br><span class="line"><span class="comment">#   aside:</span></span><br><span class="line"><span class="comment">#   post:</span></span><br><span class="line"><span class="comment">#-------------------- 站长 (网站) 验证 --------------------#</span></span><br><span class="line"><span class="comment"># 如果需要搜索引擎收录网站，可能需要登录对应搜索引擎的管理平台进行提交。各自的验证码可从各自管理平台拿到</span></span><br><span class="line"><span class="comment"># 谷歌验证，网址：https://www.google.com/webmasters/</span></span><br><span class="line"><span class="attr">google_site_verification:</span></span><br><span class="line"><span class="comment"># 必应验证，网址：https://www.bing.com/webmaster/</span></span><br><span class="line"><span class="attr">bing_site_verification:</span></span><br><span class="line"><span class="comment"># 百度验证，网址：https://ziyuan.baidu.com/site/</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span></span><br><span class="line"><span class="comment"># 360验证，网址：http://zhanzhang.so.com/</span></span><br><span class="line"><span class="attr">qihu_site_verification:</span></span><br><span class="line"><span class="comment"># Yandex验证，网址：https://webmaster.yandex.com/</span></span><br><span class="line"><span class="attr">yandex_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################### 网站美化 #####################</span></span><br><span class="line"><span class="comment">#-------------------- 网站默认的显示模式 --------------------#</span></span><br><span class="line"><span class="comment"># light (default) / dark</span></span><br><span class="line"><span class="attr">display_mode:</span> <span class="string">light</span></span><br><span class="line"><span class="comment">#-------------------- 自定义主题颜色 --------------------#</span></span><br><span class="line"><span class="attr">theme_color:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 主要颜色</span></span><br><span class="line">  <span class="attr">main:</span> <span class="string">&quot;#009688&quot;</span></span><br><span class="line">  <span class="comment"># 分页器的颜色</span></span><br><span class="line">  <span class="attr">paginator:</span> <span class="string">&quot;#009688&quot;</span></span><br><span class="line">  <span class="comment"># 链接颜色</span></span><br><span class="line">  <span class="attr">link_color:</span> <span class="string">&quot;#009688&quot;</span></span><br><span class="line">  <span class="comment"># 鼠标放到链接上的颜色</span></span><br><span class="line">  <span class="attr">button_hover:</span> <span class="string">&quot;#9370DB&quot;</span></span><br><span class="line">  <span class="comment"># 鼠标选中文字的颜色</span></span><br><span class="line">  <span class="attr">text_selection:</span> <span class="string">&quot;#009688&quot;</span></span><br><span class="line">  <span class="comment"># 首页中文章元数据的颜色(文章标题下有发表时间、更新时间等那个几个元数据)</span></span><br><span class="line">  <span class="attr">meta_color:</span> <span class="string">&quot;#009688&quot;</span> <span class="comment">#&quot;#858585&quot;</span></span><br><span class="line">  <span class="comment"># 水平分割线颜色</span></span><br><span class="line">  <span class="attr">hr_color:</span> <span class="string">&quot;#1A4D4B&quot;</span></span><br><span class="line">  <span class="comment"># 代码`code`的颜色</span></span><br><span class="line">  <span class="attr">code_foreground:</span> <span class="string">&quot;#F47466&quot;</span></span><br><span class="line">  <span class="comment"># 代码`code`的背景颜色</span></span><br><span class="line">  <span class="attr">code_background:</span> <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line">  <span class="comment"># 目录颜色</span></span><br><span class="line">  <span class="attr">toc_color:</span> <span class="string">&quot;#009688&quot;</span></span><br><span class="line">  <span class="comment"># 引用块前边那条竖杠的颜色</span></span><br><span class="line">  <span class="attr">blockquote_padding_color:</span> <span class="string">&quot;#009688&quot;</span></span><br><span class="line">  <span class="comment"># 引用块的颜色</span></span><br><span class="line">  <span class="attr">blockquote_background_color:</span> <span class="string">&quot;#8BDB8E&quot;</span></span><br><span class="line"><span class="comment">#-------------------- 设置网站背景 --------------------#</span></span><br><span class="line"><span class="comment"># 可设置图片 (图片url) 或颜色 (16进制颜色码)</span></span><br><span class="line"><span class="comment"># 默认或留空显示白色</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">url(https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/background-catGirl.webp)</span></span><br><span class="line"><span class="comment"># footer是否显示图片背景(与top_img一致)，当设置 false 时，将与主题色一致。</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 右下角按钮距离底部的距离，默认单位为px</span></span><br><span class="line"><span class="attr">rightside-bottom:</span></span><br><span class="line"><span class="comment">#-------------------- 页面美化展示 --------------------#</span></span><br><span class="line"><span class="comment"># 会改变 ol、ul、h1-h5 的样式</span></span><br><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 可以选择只美化文章 (post) 和 美化全站 (site)</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span></span><br><span class="line">  <span class="comment"># 图标 fontawesome 的 icon 的 Unicode 数</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">&#x27;\f56b&#x27;</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="string">&#x27;#009688&#x27;</span></span><br><span class="line"><span class="comment"># 网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 打字效果</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 循环打字</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source调用第三方服务</span></span><br><span class="line">  <span class="comment"># source: false 关闭调用</span></span><br><span class="line">  <span class="comment"># source: 1  调用搏天api的随机语录（简体） https://api.btstu.cn/</span></span><br><span class="line">  <span class="comment"># source: 2  调用一言网的一句话（简体） https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 3  调用一句网（简体） http://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 4  调用今日诗词（简体） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 会先显示 source , 再显示 sub 的内容</span></span><br><span class="line">  <span class="attr">source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 如果有英文逗号 &#x27;,&#x27; ,请使用转义字符 &amp;#44;</span></span><br><span class="line">  <span class="comment"># 如果有英文双引号 &#x27;&quot;&#x27; ,请使用转义字符 &amp;quot;</span></span><br><span class="line">  <span class="comment"># 开头不允许转义字符，如需要，请把整个句子用双引号包住</span></span><br><span class="line">  <span class="comment"># 如果关闭打字效果，subtitle只会显示sub的第一行文字</span></span><br><span class="line">  <span class="comment"># 数组形式、br 换行</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">态度上不露锋芒，本领上锋芒毕露。</span></span><br><span class="line"><span class="comment">#-------------------- category和tag页的UI设置 --------------------#</span></span><br><span class="line"><span class="comment"># index - index 值代表 UI 与首页的 UI 一样</span></span><br><span class="line"><span class="comment"># default - 默认跟 archives 页面 UI 一样</span></span><br><span class="line"><span class="attr">category_ui:</span> <span class="string">index</span> <span class="comment"># 留空或 index</span></span><br><span class="line"><span class="attr">tag_ui:</span> <span class="string">index</span> <span class="comment"># 留空或 index</span></span><br><span class="line"><span class="comment">#-------------------- 字体设置 --------------------#</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span> <span class="string">15px</span></span><br><span class="line">  <span class="attr">code-font-size:</span> <span class="string">15px</span></span><br><span class="line">  <span class="comment"># 可选值：-apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;Helvetica Neue&quot;, Lato, Roboto, &quot;PingFang SC&quot;, &quot;Microsoft JhengHei&quot;, &quot;Microsoft YaHei&quot;, sans-serif</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">-apple-system</span></span><br><span class="line">  <span class="comment"># 可选值：consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft JhengHei&quot;, &quot;Microsoft YaHei&quot;, sans-serif</span></span><br><span class="line">  <span class="attr">code-font-family:</span> <span class="string">&#x27;CascadiaMono&#x27;</span></span><br><span class="line"><span class="comment"># 网站标题和副标题的字体设置 左上角网站名字 主页居中网站名字</span></span><br><span class="line"><span class="attr">blog_title_font:</span></span><br><span class="line">  <span class="comment"># 不需要字体将 font_link 留空即可</span></span><br><span class="line">  <span class="attr">font_link:</span> <span class="string">https://fonts.googleapis.com/css2?family=Noto+Sans+SC&amp;family=Noto+Serif+SC&amp;display=swap</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">&#x27;Noto Serif SC&#x27;</span></span><br><span class="line"><span class="comment">#-------------------- 水平分隔线图标设置 --------------------#</span></span><br><span class="line"><span class="attr">hr_icon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 字体图标的unicode值，比如&#x27;\3423&#x27;</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">\2708</span></span><br><span class="line">  <span class="attr">icon-top:</span></span><br><span class="line"><span class="comment">#-------------------- 代码高亮 --------------------#</span></span><br><span class="line"><span class="comment">## 高亮主题，供选择的值有：darker / pale night / light / ocean / mac / mac light / false</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">mac</span></span><br><span class="line"><span class="comment">## 是否显示复制按钮</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">## 是否显示代码所用的编程语言</span></span><br><span class="line"><span class="attr">highlight_lang:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">## 代码框折叠：true全部代码框不展开，需点击&gt;打开；false代码狂展开，有&gt;点击按钮；none不显示&gt;按钮</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 代码自动换行，如需开启需要修改 _config.yml，将 line_number 改成 false:</span></span><br><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#-------------------- 鼠标点击特效 --------------------#</span></span><br><span class="line"><span class="comment"># 期望效果：粒子加文字</span></span><br><span class="line"><span class="comment"># 鼠标点击效果: 文字特效</span></span><br><span class="line"><span class="attr">ClickShowText:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">坚持</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">耐心</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">毅力</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">勤奋</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">刻苦</span></span><br><span class="line">  <span class="attr">fontSize:</span> <span class="string">15px</span></span><br><span class="line"><span class="comment">#-------------------- 打字效果 --------------------#</span></span><br><span class="line"><span class="comment"># https://github.com/disjukr/activate-power-mode</span></span><br><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 粒子特效</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 抖动特效</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################### 资源引入 #####################</span></span><br><span class="line"><span class="comment"># 将引入的代码插入到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/custom/petrel1024.css&quot;&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/resource/petrel1024.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/custom/petrel1024.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/resource/petrel1024.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment"># CDN</span></span><br><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="comment"># main</span></span><br><span class="line">  <span class="attr">main_css:</span> <span class="string">/css/index.css</span></span><br><span class="line">  <span class="attr">jquery:</span> <span class="string">https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span></span><br><span class="line">  <span class="attr">main:</span> <span class="string">/js/main.js</span></span><br><span class="line">  <span class="attr">utils:</span> <span class="string">/js/utils.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># pjax</span></span><br><span class="line">  <span class="attr">pjax:</span> <span class="string">https://cdn.jsdelivr.net/npm/pjax/pjax.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 评论</span></span><br><span class="line">  <span class="attr">valine:</span> <span class="string">https://cdn.jsdelivr.net/npm/valine/dist/Valine.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 分享</span></span><br><span class="line">  <span class="attr">sharejs:</span> <span class="string">https://cdn.jsdelivr.net/npm/social-share.js/dist/js/social-share.min.js</span></span><br><span class="line">  <span class="attr">sharejs_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/social-share.js/dist/css/share.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 搜索</span></span><br><span class="line">  <span class="attr">local_search:</span> <span class="string">/js/search/local-search.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 数学</span></span><br><span class="line">  <span class="attr">katex:</span> <span class="string">https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css</span></span><br><span class="line">  <span class="attr">katex_copytex:</span> <span class="string">https://cdn.jsdelivr.net/npm/katex-copytex@latest/dist/katex-copytex.min.js</span></span><br><span class="line">  <span class="attr">katex_copytex_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/katex-copytex@latest/dist/katex-copytex.min.css</span></span><br><span class="line">  <span class="attr">mermaid:</span> <span class="string">https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># count</span></span><br><span class="line">  <span class="attr">busuanzi:</span> <span class="string">//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="string">https://cdn.jsdelivr.net/npm/vanilla-lazyload/dist/lazyload.iife.min.js</span></span><br><span class="line">  <span class="attr">instantpage:</span> <span class="string">https://cdn.jsdelivr.net/npm/instant.page/instantpage.min.js</span></span><br><span class="line">  <span class="attr">typed:</span> <span class="string">https://cdn.jsdelivr.net/npm/typed.js/lib/typed.min.js</span></span><br><span class="line">  <span class="attr">pangu:</span> <span class="string">https://cdn.jsdelivr.net/npm/pangu/dist/browser/pangu.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># photo</span></span><br><span class="line">  <span class="attr">fancybox_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css</span></span><br><span class="line">  <span class="attr">fancybox:</span> <span class="string">https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js</span></span><br><span class="line">  <span class="attr">medium_zoom:</span> <span class="string">https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># snackbar</span></span><br><span class="line">  <span class="attr">snackbar_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.css</span></span><br><span class="line">  <span class="attr">snackbar:</span> <span class="string">https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 特效</span></span><br><span class="line">  <span class="attr">anime:</span> <span class="string">https://cdn.jsdelivr.net/npm/animejs@latest/anime.min.js</span></span><br><span class="line">  <span class="comment"># 打字特效</span></span><br><span class="line">  <span class="attr">activate_power_mode:</span> <span class="string">/js/third-party/activate-power-mode.js</span></span><br><span class="line">  <span class="comment"># 文字特效</span></span><br><span class="line">  <span class="attr">ClickShowText:</span> <span class="string">/js/third-party/ClickShowText.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># fontawesome</span></span><br><span class="line">  <span class="attr">fontawesome:</span> <span class="string">https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># justifiedGallery</span></span><br><span class="line">  <span class="attr">justifiedGallery_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/justifiedGallery/dist/js/jquery.justifiedGallery.min.js</span></span><br><span class="line">  <span class="attr">justifiedGallery_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/justifiedGallery/dist/css/justifiedGallery.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># aplayer</span></span><br><span class="line">  <span class="attr">aplayer_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css</span></span><br><span class="line">  <span class="attr">aplayer_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js</span></span><br><span class="line">  <span class="attr">meting_js:</span> <span class="string">https://cdn.jsdelivr.net/gh/metowolf/MetingJS@1.2/dist/Meting.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Prism.js</span></span><br><span class="line">  <span class="attr">prismjs_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/prismjs/prism.min.js</span></span><br><span class="line">  <span class="attr">prismjs_lineNumber_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/prismjs/plugins/line-numbers/prism-line-numbers.min.js</span></span><br><span class="line">  <span class="attr">prismjs_autoloader:</span> <span class="string">https://cdn.jsdelivr.net/npm/prismjs/plugins/autoloader/prism-autoloader.min.js</span></span><br></pre></td></tr></table></figure></div></div><h1 id="二-个性化"><a class="markdownIt-Anchor" href="#二-个性化"></a> 二、个性化</h1><h2 id="1不涉及源码"><a class="markdownIt-Anchor" href="#1不涉及源码"></a> 1：不涉及源码</h2><blockquote><p>参考乐特的博客：<a href="https://butterfly.lete114.top/">https://butterfly.lete114.top/</a> 基本无源码的修改</p></blockquote><p>创建一个属于自己的 js 和 css 文件，并在主题配置文件中 <code>inject</code> 中引入</p><h3 id="11隐藏首页顶部图"><a class="markdownIt-Anchor" href="#11隐藏首页顶部图"></a> 1.1：隐藏首页顶部图</h3><p>相当于把主页顶部图删了 (文章顶部图正常显示)</p><p>修改主题配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 例如</span></span><br><span class="line"><span class="comment"># 注释掉主页顶部图</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="comment"># https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/default_top_img.webp</span></span><br><span class="line"><span class="comment"># 网站背景图</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">url(https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/info/default_top_img.webp)</span></span><br></pre></td></tr></table></figure><p>js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//隐藏首页banner图</span></span><br><span class="line"><span class="keyword">var</span> full_page = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;full_page&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (full_page.length != <span class="number">0</span>) &#123;</span><br><span class="line">  full_page[<span class="number">0</span>].style.background = <span class="string">&quot;transparent&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12页脚透明"><a class="markdownIt-Anchor" href="#12页脚透明"></a> 1.2：页脚透明</h3><p>css：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13自定义字体"><a class="markdownIt-Anchor" href="#13自定义字体"></a> 1.3：自定义字体</h3><p>css：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 自定义字体 */</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;JetBrainsMono&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://raw.githubusercontent.com/JetBrains/JetBrainsMono/master/web/woff2/JetBrainsMono-Regular.woff2&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>推荐字体：</p><ul><li>Fira Code：<a href="https://github.com/tonsky/FiraCode">https://github.com/tonsky/FiraCode</a></li><li>JetBrains Mono：<a href="https://github.com/JetBrains/JetBrainsMono">https://github.com/JetBrains/JetBrainsMono</a></li><li>Cascadia Code：<a href="https://github.com/microsoft/cascadia-code">https://github.com/microsoft/cascadia-code</a> 目前有四个变种，Mono 表示不连字，PL 表示 PowerLine</li></ul><p>修改主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span> <span class="string">15px</span></span><br><span class="line">  <span class="attr">code-font-size:</span> <span class="string">15px</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">-apple-system</span></span><br><span class="line">  <span class="attr">code-font-family:</span> <span class="string">&#x27;JetBrainsMono&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="2涉及源码"><a class="markdownIt-Anchor" href="#2涉及源码"></a> 2：涉及源码</h2><h3 id="21多级分类折叠"><a class="markdownIt-Anchor" href="#21多级分类折叠"></a> 2.1：多级分类折叠</h3><blockquote><p>参考自：<a href="https://github.com/cnyist/hexo-modify-theme-butterfly">云玩家魔改版</a></p></blockquote><p>主题本来只支持一级分类折叠，二级及以上分类自动展开。修改为：有子分类就折叠</p><p><strong>修改方式：</strong> 找到 <code>主题根目录/scripts/helpers/aside_categories.js</code> 修改 <code>hierarchicalList</code> 方法体</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> hierarchicalList = <span class="function">(<span class="params">t, level, parent, topparent = <span class="literal">true</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment">// 删除 const isTopParent = topparent</span></span><br><span class="line">  <span class="keyword">if</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    prepareQuery(parent).forEach(<span class="function">(<span class="params">cat, i</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        t = t - <span class="number">1</span></span><br><span class="line">        <span class="keyword">let</span> child</span><br><span class="line">        <span class="keyword">if</span> (!depth || level + <span class="number">1</span> &lt; depth) &#123;</span><br><span class="line">          <span class="keyword">const</span> childList = hierarchicalList(t, level + <span class="number">1</span>, cat._id, <span class="literal">false</span>)</span><br><span class="line">          child = childList[<span class="number">0</span>]</span><br><span class="line">          t = childList[<span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 修改 const parentClass = isExpand &amp;&amp; isTopParent &amp;&amp; child ? &#x27;parent&#x27; : &#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">const</span> parentClass = isExpand &amp;&amp; child ? <span class="string">&#x27;parent&#x27;</span> : <span class="string">&#x27;&#x27;</span></span><br><span class="line">        result += <span class="string">`&lt;li class=&quot;card-category-list-item <span class="subst">$&#123;parentClass&#125;</span>&quot;&gt;`</span></span><br><span class="line"></span><br><span class="line">        result += <span class="string">`&lt;a class=&quot;card-category-list-link&quot; href=&quot;<span class="subst">$&#123;<span class="built_in">this</span>.url_for(cat.path)&#125;</span>&quot;&gt;`</span></span><br><span class="line"></span><br><span class="line">        result += <span class="string">`&lt;span class=&quot;card-category-list-name&quot;&gt;<span class="subst">$&#123;cat.name&#125;</span>&lt;/span&gt;`</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (showCount) &#123;</span><br><span class="line">          result += <span class="string">`&lt;span class=&quot;card-category-list-count&quot;&gt;<span class="subst">$&#123;cat.length&#125;</span>&lt;/span&gt;`</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 修改 if (isExpand &amp;&amp; isTopParent &amp;&amp; child) &#123;</span></span><br><span class="line">        <span class="keyword">if</span> (isExpand &amp;&amp; child) &#123;</span><br><span class="line">          result += <span class="string">`&lt;i class=&quot;fas fa-caret-left <span class="subst">$&#123;expandClass&#125;</span>&quot;&gt;&lt;/i&gt;`</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result += <span class="string">&#x27;&lt;/a&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">        result += <span class="string">&#x27;&lt;/li&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (child) &#123;</span><br><span class="line">          result += <span class="string">`&lt;ul class=&quot;card-category-list child&quot;&gt;<span class="subst">$&#123;child&#125;</span>&lt;/ul&gt;`</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> [result, t]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="22本地搜索优化"><a class="markdownIt-Anchor" href="#22本地搜索优化"></a> 2.2：本地搜索优化</h3><p>文章越多，搜索文件越大，拖慢整体速度。</p><blockquote><p>修改后本地预览搜索可能不起用，自行斟酌</p></blockquote><p><strong>修改方式：</strong> 找到 <code>主题根目录/source/js/search/local-search.js</code> 大概在 <code>57</code> 行左右，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params">path</span>) </span>&#123;</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    <span class="comment">//url: GLOBAL_CONFIG.root + path,</span></span><br><span class="line">    url: <span class="string">&quot;https://cdn.jsdelivr.net/gh/lete114/lete114.github.io/search.xml&quot;</span>,</span><br><span class="line">    dataType: <span class="string">&#x27;xml&#x27;</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">xmlResponse</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// get the contents from search data</span></span><br><span class="line">      <span class="keyword">var</span> datas = $(<span class="string">&#x27;entry&#x27;</span>, xmlResponse).map(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          title: $(<span class="string">&#x27;title&#x27;</span>, <span class="built_in">this</span>).text(),</span><br><span class="line">          content: $(<span class="string">&#x27;content&#x27;</span>, <span class="built_in">this</span>).text(),</span><br><span class="line">          url: $(<span class="string">&#x27;url&#x27;</span>, <span class="built_in">this</span>).text()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).get()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3额外添加"><a class="markdownIt-Anchor" href="#3额外添加"></a> 3：额外添加</h2><h3 id="31永久链接"><a class="markdownIt-Anchor" href="#31永久链接"></a> 3.1：永久链接</h3><p>原始的文章链接是：<code>:year/:month/:day/:title/</code></p><p>当文章的 title 有中文时 URL 地址就会边的很长，且一但 tittle 发生变化，就会让原有的链接成为死链</p><p>可以使用的变量参考，来自于官方文档：</p><table><thead><tr><th style="text-align:left">变量</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>:year</code></td><td style="text-align:left">文章的发表年份（4 位数）</td></tr><tr><td style="text-align:left"><code>:month</code></td><td style="text-align:left">文章的发表月份（2 位数）</td></tr><tr><td style="text-align:left"><code>:i_month</code></td><td style="text-align:left">文章的发表月份（去掉开头的零）</td></tr><tr><td style="text-align:left"><code>:day</code></td><td style="text-align:left">文章的发表日期 (2 位数)</td></tr><tr><td style="text-align:left"><code>:i_day</code></td><td style="text-align:left">文章的发表日期（去掉开头的零）</td></tr><tr><td style="text-align:left"><code>:hour</code></td><td style="text-align:left">文章发表时的小时 (2 位数)</td></tr><tr><td style="text-align:left"><code>:minute</code></td><td style="text-align:left">文章发表时的分钟 (2 位数)</td></tr><tr><td style="text-align:left"><code>:second</code></td><td style="text-align:left">文章发表时的秒钟 (2 位数)</td></tr><tr><td style="text-align:left"><code>:title</code></td><td style="text-align:left">文件名称 (relative to “source/_posts/“ folder)</td></tr><tr><td style="text-align:left"><code>:name</code></td><td style="text-align:left">文件名称</td></tr><tr><td style="text-align:left"><code>:post_title</code></td><td style="text-align:left">文章标题</td></tr><tr><td style="text-align:left"><code>:id</code></td><td style="text-align:left">文章 ID (<em>not persistent across <a href="https://hexo.io/zh-cn/docs/commands#clean">cache reset</a></em>)</td></tr><tr><td style="text-align:left"><code>:category</code></td><td style="text-align:left">分类。如果文章没有分类，则是 <code>default_category</code> 配置信息。</td></tr><tr><td style="text-align:left"><code>:hash</code></td><td style="text-align:left">SHA1 hash of filename (same as <code>:title</code>) and date (12-hexadecimal)</td></tr></tbody></table><p>只有 <code>:id</code> 一种，没有和文章数据无关的变量，但是每次都要手动指定，略显麻烦。</p><p>此时就可安装一个链接生成插件 <code>hexo-abbrlink</code></p><p><strong>安装插件：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p><strong>修改主配置文件 <code>_config.yml</code>：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 文章的永久链接格式，永久链接参考文档：https://hexo.io/zh-cn/docs/permalinks</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">article/:abbrlink/</span></span><br><span class="line"><span class="comment">#### 永久链接插件 hexo-abbrlink 配置</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure><h3 id="32文章统计图表"><a class="markdownIt-Anchor" href="#32文章统计图表"></a> 3.2：文章统计图表</h3><p><strong>安装插件：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-charts -S</span><br></pre></td></tr></table></figure><p><strong>归档页添加统计图：</strong> 在 <code>主题目录/Butterfly/layout/archive.pug</code> 文件的 <code>#archive</code> 下面添加一行 <code>#posts-chart</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">block content  </span><br><span class="line">  include ./includes/mixins/article-sort.pug  </span><br><span class="line">    #archive</span><br><span class="line">    #posts-chart </span><br></pre></td></tr></table></figure><p><strong>标签页和分类页添加统计图：</strong> 编辑 <code>主题目录/Butterfly/layout/page.pug</code> 文件，在 <code>.tag-cloud</code> 下面添加一行 <code>#tags-chart</code>，在 <code>.category-content</code> 下面添加一行 <code>#categories-chart</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">block content</span><br><span class="line">  <span class="keyword">if</span> page.type === <span class="string">&#x27;tags&#x27;</span></span><br><span class="line">    .tag-cloud</span><br><span class="line">      #tags-chart</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> page.type === <span class="string">&#x27;categories&#x27;</span></span><br><span class="line">    .category-content</span><br><span class="line">      #categories-chart</span><br></pre></td></tr></table></figure><p><strong>其他页面引用统计图：</strong></p><ul><li><p>文章发布统计图：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;posts-chart&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>标签统计图：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &quot;data-length&quot;为显示标签个数(从多到少)，默认为10 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tags-chart&quot;</span> <span class="attr">data-length</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>文章分类统计图：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;categories-chart&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> ButterFly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章嵌入 Bilibili 视频 - 无需插件</title>
      <link href="/article/98c5f7c4/"/>
      <url>/article/98c5f7c4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考自：<a href="https://www.cnblogs.com/wkfvawl/p/12268980.html">https://www.cnblogs.com/wkfvawl/p/12268980.html</a></p></blockquote><p><strong>在点击分享时，复制嵌入代码：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/bilibili/image-20200915143608875.png" alt="image-20200915143608875" /></p><p><strong>例如：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=796755850&amp;bvid=BV1pC4y1t7Fc&amp;cid=226100228&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>将 src 中的内容复制到下边的 src 中：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">&quot;https:上边src的内容&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><p><code>div</code> 和 <code>iframe</code> 中的 style 样式是用来自适应的</p><table><thead><tr><th>key</th><th>说明</th></tr></thead><tbody><tr><td>aid</td><td>视频 ID。就是 B 站的 avxxxx 后面的数字</td></tr><tr><td>cid</td><td>应该是客户端 id。clientId 的缩写(推测的，不一定准确) 经过测试，这个字段不填也没关系</td></tr><tr><td>page</td><td>第几个视频。默认值也是为 1。就是 B 站视频，选集里的，第几个视频</td></tr><tr><td>as_wide</td><td>是否宽屏。 1: 宽屏，0: 小屏</td></tr><tr><td>high_quality</td><td>是否高清。1: 高清，0: 最低视频质量(默认)</td></tr><tr><td>danmaku</td><td>是否开启弹幕。 1: 开启(默认)，0: 关闭</td></tr></tbody></table><p><strong>效果如下：</strong></p><div style="position: relative; padding: 30% 45%;">    <iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"              src="https://player.bilibili.com/player.html?aid=796755850&bvid=BV1pC4y1t7Fc&cid=226100228&page=1&as_wide=1&high_quality=1&danmaku=0"             frameborder="no"             scrolling="no">    </iframe></div>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + GitHubPages 从零搭建个人博客</title>
      <link href="/article/84176a14/"/>
      <url>/article/84176a14/</url>
      
        <content type="html"><![CDATA[<h1 id="一-前言"><a class="markdownIt-Anchor" href="#一-前言"></a> 一、前言</h1><p><strong>本文环境：</strong></p><ul><li>系统：Windows 10</li><li>Nodejs：10.21.0</li><li>Git：2.27.0</li><li>Hexo：5.0.0</li></ul><p><strong>原理：</strong></p><ul><li>Github Pages 可以被认为是用户编写的、托管在 github 上的静态网页。使用 Github Pages 可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。</li><li>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</li></ul><p><strong>优点：</strong></p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于 github 的；</li><li>数据绝对安全，基于 github 的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>巴拉巴拉。</li></ol><p><strong>参考文档：</strong></p><ul><li><a href="https://hexo.io/zh-cn/docs">https://hexo.io/zh-cn/docs</a></li><li><a href="https://www.itrhx.com/">https://www.itrhx.com/</a></li></ul><h1 id="二-环境搭建与配置"><a class="markdownIt-Anchor" href="#二-环境搭建与配置"></a> 二、环境搭建与配置</h1><h2 id="1nodejs"><a class="markdownIt-Anchor" href="#1nodejs"></a> 1：Node.js</h2><h3 id="11下载与安装"><a class="markdownIt-Anchor" href="#11下载与安装"></a> 1.1：下载与安装</h3><p><strong>官网：</strong> <a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200818231923.webp" alt="img-20200818231923" style="zoom:80%;" /><p><strong>安装：</strong> 修改安装路径，其余一路下一步 (next) 即可</p><p><strong>验证：</strong> cmd 中输入 <code>node -v</code> 、<code>npm -v</code></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200818231816.webp" alt="img-20200818231816" /></p><h3 id="12修改-npm-全局安装依赖包路径"><a class="markdownIt-Anchor" href="#12修改-npm-全局安装依赖包路径"></a> 1.2：修改 npm 全局安装依赖包路径</h3><p>npm 下载的依赖包默认存放在 C 盘，如需修改到其他位置，可参考下列设置</p><p>如：将安装目录设置在 node.js 的目录下，创建 npm_modules 和 npm_cache，执行下边的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;D:\develop\nodejs\npm_modules&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;D:\develop\nodejs\npm_cache&quot;</span></span><br></pre></td></tr></table></figure><p><strong>同时需要配置环境变量，指向：<code>D:\develop\nodejs\npm_modules</code> 不然使用依赖包中的命令时，会提示找不到命令</strong></p><p>此时使用 <code>npm config ls</code> 查询 NPM 管理包路径发现路径已更改</p><h3 id="13修改-npm-registry-为淘宝镜像"><a class="markdownIt-Anchor" href="#13修改-npm-registry-为淘宝镜像"></a> 1.3：修改 npm registry 为淘宝镜像</h3><p>默认 npm registry 是国外服务器，下载依赖包比较慢，可以修改为淘宝镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 控制台输入以下内容</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 查看是否修改成功</span></span><br><span class="line">npm config get registry </span><br></pre></td></tr></table></figure><h2 id="2git"><a class="markdownIt-Anchor" href="#2git"></a> 2：Git</h2><h3 id="21下载与安装"><a class="markdownIt-Anchor" href="#21下载与安装"></a> 2.1：下载与安装</h3><p><strong>官网：</strong> <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819015146.webp" alt="img-20200819015146" style="zoom:80%;" /><p><strong>安装：</strong> 修改安装路径，其余一路下一步 (next) 即可</p><p><strong>验证：</strong> 右键出现 <code>Git Bush Here</code></p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819031129995.webp" alt="image-20200819031129995" style="zoom:80%;" /><p>同时，输入 <code>git --version</code> 出现版本号</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819031613573.webp" alt="image-20200819031613573" style="zoom:80%;" /><h3 id="22使用-ssh-协议关联-github"><a class="markdownIt-Anchor" href="#22使用-ssh-协议关联-github"></a> 2.2：使用 SSH 协议关联 GitHub</h3><p>Github 账户自行注册，过程不演示了</p><ol><li><p>首先在本地 Git 中设置个人身份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致</span></span><br><span class="line">git config --global user.name 名字</span><br><span class="line">git config --global user.email 邮箱</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">git config --list</span><br></pre></td></tr></table></figure><p>该命令执行后，会在 <code>C:\Users\用户名\</code> 下面生成一个 <code>.gitconfig</code> 的文件</p></li><li><p>生成 SSH 密钥对</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># # t:是type的缩写;-t:指定密钥的类型;密钥类型:RSA或DSA;git默认生成的就是rsa,所以-t rsa可以不加</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮箱地址&quot;</span></span><br><span class="line"><span class="comment"># 有提示让输入不用管,一路回车即可</span></span><br></pre></td></tr></table></figure><p>执行命令完成后，在 <code>C:\Users\用户名\.ssh</code> 下面生成如下名称的公钥和私钥：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819033532743.webp" alt="image-20200819033532743" /></p><p>打开 id_rsa.pub 将公钥内容复制</p></li><li><p>登录 GitHub 配置密钥，进入 Settings</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819033826597.webp" alt="image-20200819033826597" style="zoom:80%;" /></li><li><p>选择创建新的 SSH Key</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819033957245.webp" alt="image-20200819033957245" /></p></li><li><p>输入标题和 key</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819034036567.webp" alt="image-20200819034036567" /></p></li><li><p>输入命令进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># 若提示 Are you sure you want to continue connecting(yes/no)</span></span><br><span class="line"><span class="comment"># 因为首次使用需要确认并添加主机到本机SSH可信列表，输入yes即可</span></span><br></pre></td></tr></table></figure><p>若返回 <code>Hi XXX! You've successfully authenticated, but Github.com does not provide shell access.</code> 内容，则证明添加成功</p><p>添加成功后，就可以使用 SSH 协议对仓库进行操作了</p></li></ol><h2 id="3hexo"><a class="markdownIt-Anchor" href="#3hexo"></a> 3：Hexo</h2><p><strong>官网：</strong> <a href="https://hexo.io/zh-cn">https://hexo.io/zh-cn</a></p><p><strong>安装：</strong> 使用 npm 进行全局安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>安装 Hexo 之前，本地的 Node、Git 环境必须搭建好</li><li>注意如果修改了 npm 全局安装依赖包路径，不要忘了配环境变量，否则会提示命令不存在</li></ol><h3 id="31创建博客"><a class="markdownIt-Anchor" href="#31创建博客"></a> 3.1：创建博客</h3><p>初始化一个站点 (博客)。该过程较慢，可以去喝杯 java</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令</span></span><br><span class="line">hexo init 博客名</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">hexo init petrel1024</span><br></pre></td></tr></table></figure><p>进入已经创建好的博客，下载依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> petrel1024</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>本地查看效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成静态网页</span></span><br><span class="line">hexo generate <span class="comment"># 可简写为 hexo g</span></span><br><span class="line"><span class="comment"># 运行服务</span></span><br><span class="line">hexo server <span class="comment"># 可简写为 hexo s</span></span><br><span class="line"><span class="comment"># 上边两行命令也可以简写为 hexo s -g</span></span><br></pre></td></tr></table></figure><p>若控制台输出：<code>INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</code> 即代表运行成功。可在浏览器输入：<a href="http://localhost:4000/">http://localhost:4000/</a> 进行查看</p><blockquote><p>命令行中 Ctrl + C 可停止运行</p></blockquote><h3 id="32发表文章"><a class="markdownIt-Anchor" href="#32发表文章"></a> 3.2：发表文章</h3><p>在 Hexo 中，一篇 Markdown 可以作为一篇文章 (post)，也可以作为一个页面 (page)，还可以作为草稿 (draft，一般用的不多)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建文章或页面，layout默认为post，可以通过修改_config.yml中的default_layout参数来指定默认值</span></span><br><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line"><span class="comment"># 例如，创建一篇文章</span></span><br><span class="line">hexo new <span class="string">&quot;这是我的第一篇文章&quot;</span></span><br><span class="line"><span class="comment"># 例如，创建分类页面</span></span><br><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p>不同的 layout 存储的路径不同</p><table><thead><tr><th style="text-align:left">布局</th><th style="text-align:left">路径</th></tr></thead><tbody><tr><td style="text-align:left">post</td><td style="text-align:left">source/_posts</td></tr><tr><td style="text-align:left">page</td><td style="text-align:left">source</td></tr><tr><td style="text-align:left">draft</td><td style="text-align:left">source/_drafts</td></tr></tbody></table><h3 id="33配置博客"><a class="markdownIt-Anchor" href="#33配置博客"></a> 3.3：配置博客</h3><p>博客根目录下，有一个 <code>_config.yml</code> 的站点配置文件，里边可配置网站的相关内容，具体配置可参考<a href="https://hexo.io/zh-cn/docs/">官方文档</a></p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>中文解释</span></div>    <div class="hide-content"><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo 配置文件</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site 站点配置</span></span><br><span class="line"><span class="comment">## 网站标题</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="comment">## 网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">## 网站描述</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">## 网站的关键词</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="comment">## 作者</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span></span><br><span class="line"><span class="comment">## 网站使用的语言</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="comment">## 网站时区</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL 网址</span></span><br><span class="line"><span class="comment"># 如果网站存放在子目录中,如http://yoursite.com/blog,则url应设为http://yoursite.com/blog并把root设为/blog/</span></span><br><span class="line"><span class="comment">## 网址</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://yoursite.com</span></span><br><span class="line"><span class="comment">## 网站根目录</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="comment">## 文章的永久链接格式，永久链接参考文档：https://hexo.io/zh-cn/docs/permalinks</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="comment">## 永久链接中各部分的默认值</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="comment">## 改写 permalink 的值来美化 URL</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="comment">### 是否在永久链接中保留尾部的 index.html，设置为 false 时去除</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">### 是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory 目录配置 - 如果您刚刚开始接触 Hexo，通常没有必要修改这一部分的值</span></span><br><span class="line"><span class="comment">## 资源文件夹，这个文件夹用来存放内容</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="comment">## 公共文件夹，这个文件夹用于存放生成的站点文件</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="comment">## 标签文件夹</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="comment">## 归档文件夹</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="comment">## 分类文件夹</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="comment">## Include code 文件夹，source_dir 下的子目录</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="comment">## 国际化（i18n）文件夹</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment">## 跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 public 目录中。您可使用 glob 表达式来匹配路径。</span></span><br><span class="line"><span class="comment">## glob表达式：https://github.com/micromatch/micromatch#extended-globbing</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing 写作配置</span></span><br><span class="line"><span class="comment">## 新文章的文件名称</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span></span><br><span class="line"><span class="comment">## 预设布局</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="comment">## 把标题转换为 title case</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 在新标签中打开链接</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 在新标签中打开链接</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># 对整个网站（site）生效或仅对文章（post）生效</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 需要排除的域名。主域名和子域名如 www 需分别配置</span></span><br><span class="line"><span class="comment">## 把文件名称转换为小写 (1) 或 大写 (2) </span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">## 显示草稿</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 启动 Asset 文件夹，Asset参考：https://hexo.io/zh-cn/docs/asset-folders</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 把链接改为与根目录的相对位置</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 显示未来的文章</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">## 代码块的设置，see Highlight.js section for usage guide</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 代码块的设置，see PrismJS section for usage guide</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag 分类 &amp; 标签</span></span><br><span class="line"><span class="comment">## 默认分类</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="comment">## 分类别名</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="comment">## 标签别名</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Meta generator 标签</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format 时间和日期格式化</span></span><br><span class="line"><span class="comment">## Hexo 使用 Moment.js 来解析和显示时间。Moent.js：https://momentjs.com/</span></span><br><span class="line"><span class="comment">## 你可以自定义时间格式化的格式</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="comment">## 日期格式</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="comment">## 时间格式</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## 当 Front Matter 中没有指定 updated 时 updated 的取值</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination 分页</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="comment">## 每页显示的文章量 (0 = 关闭分页功能)</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="comment">## 分页目录</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s) 包括或不包括目录和文件</span></span><br><span class="line"><span class="comment">## Hexo 默认会忽略隐藏文件和文件夹（包括名称以下划线和 . 开头的文件和文件夹，Hexo 的 _posts 和 _data 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 source 目录下。</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="comment">## Hexo 会忽略这些文件和目录</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="comment">## Ignore files/folders</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions 扩展</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">## 当前主题名称。值为 false 时禁用主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment 部署设置</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>我的配置</span></div>    <div class="hide-content"><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo 配置文件</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site 站点配置</span></span><br><span class="line"><span class="comment">## 网站标题</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Petrel&#x27;s</span> <span class="string">Blog</span></span><br><span class="line"><span class="comment">## 网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;Petrel1024&#x27;</span></span><br><span class="line"><span class="comment">## 网站描述</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;明日复明日，明日何其多&#x27;</span></span><br><span class="line"><span class="comment">## 网站的关键词</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">Petrel,Petrel1024,海燕,海燕的博客,小海燕的博客</span></span><br><span class="line"><span class="comment">## 作者</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Petrel</span></span><br><span class="line"><span class="comment">## 网站使用的语言</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment">## 网站时区</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL 网址</span></span><br><span class="line"><span class="comment"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span></span><br><span class="line"><span class="comment">## 网址</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://petrel1024.me</span></span><br><span class="line"><span class="comment">## 网站根目录</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="comment">## 文章的永久链接格式，永久链接参考文档：https://hexo.io/zh-cn/docs/permalinks</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">article/:abbrlink/</span></span><br><span class="line"><span class="comment">#### 永久链接插件, 需安装 hexo-abbrlink 插件</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex</span></span><br><span class="line"><span class="comment">## 永久链接中各部分的默认值</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="comment">## 改写 permalink 的值来美化 URL</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="comment">### 是否在永久链接中保留尾部的 index.html，设置为 false 时去除</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">### 是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory 目录配置 - 如果您刚刚开始接触 Hexo，通常没有必要修改这一部分的值</span></span><br><span class="line"><span class="comment">## 资源文件夹，这个文件夹用来存放内容</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="comment">## 公共文件夹，这个文件夹用于存放生成的站点文件</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="comment">## 标签文件夹</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="comment">## 归档文件夹</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="comment">## 分类文件夹</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="comment">## Include code 文件夹，source_dir 下的子目录</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="comment">## 国际化（i18n）文件夹</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment">## 跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 public 目录中。您可使用 glob 表达式来匹配路径</span></span><br><span class="line"><span class="comment">## glob表达式：https://github.com/micromatch/micromatch#extended-globbing</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">  <span class="comment"># 跳过渲染 chest 目录下的所有文件</span></span><br><span class="line">  <span class="comment"># - &#x27;chest/*&#x27;</span></span><br><span class="line">  <span class="comment"># 跳过渲染 chest 所有文件夹下的所有文件</span></span><br><span class="line">  <span class="comment"># - &#x27;chest/**&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing 写作配置</span></span><br><span class="line"><span class="comment">## 新文章的文件名称</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span></span><br><span class="line"><span class="comment">## 预设布局</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="comment">## 把标题转换为 title case</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 在新标签中打开链接</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 在新标签中打开链接</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># 对整个网站（site）生效或仅对文章（post）生效</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 需要排除的域名。主域名和子域名如 www 需分别配置</span></span><br><span class="line"><span class="comment">## 把文件名称转换为小写 (1) 或 大写 (2)</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">## 显示草稿</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 启动 Asset 文件夹，Asset参考：https://hexo.io/zh-cn/docs/asset-folders</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 把链接改为与根目录的相对位置</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 显示未来的文章</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">## 代码块的设置，see Highlight.js section for usage guide</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 代码块的设置，see PrismJS section for usage guide</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag 分类 &amp; 标签</span></span><br><span class="line"><span class="comment">## 默认分类</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">article</span></span><br><span class="line"><span class="comment">## 分类别名</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="comment">## 标签别名</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements 标签</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format 时间和日期格式化</span></span><br><span class="line"><span class="comment">## Hexo 使用 Moment.js 来解析和显示时间。Moent.js：https://momentjs.com/</span></span><br><span class="line"><span class="comment">## 你可以自定义时间格式化的格式</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="comment">## 日期格式</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="comment">## 时间格式</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## 当 Front Matter 中没有指定 updated 时 updated 的取值</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination 分页</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="comment">## 每页显示的文章量 (0 = 关闭分页功能)</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="comment">## 分页目录</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s) 包括或不包括目录和文件</span></span><br><span class="line"><span class="comment">## Hexo 默认会忽略隐藏文件和文件夹（包括名称以下划线和 . 开头的文件和文件夹，Hexo 的 _posts 和 _data 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 source 目录下。</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="comment">## Hexo 会忽略这些文件和目录</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="comment">## Ignore files/folders</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions 扩展</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">## 当前主题名称。值为 false 时禁用主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment 部署设置</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:petrel1024/petrel1024.github.io.git</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">git@e.coding.net:petrel1024/petrel1024/petrel1024.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="comment">### 自定义提交信息 Site updated: &#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;)</span></span><br><span class="line">  <span class="comment">### message: [message]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭 KaTeX 警告信息</span></span><br><span class="line"><span class="attr">markdown_it_plus:</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">plugin:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">&#x27;@neilsustc/markdown-it-katex&#x27;</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">strict:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div></div><p>每次修改完配置，要运行看效果之前记得清理一下，然后从新生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成静态页并运行</span></span><br><span class="line">hexo s -g</span><br></pre></td></tr></table></figure><h1 id="三-部署"><a class="markdownIt-Anchor" href="#三-部署"></a> 三、部署</h1><h2 id="1创建-github-仓库"><a class="markdownIt-Anchor" href="#1创建-github-仓库"></a> 1：创建 GitHub 仓库</h2><p>首先登录 GitHub 创建一个名为 <code>用户名.github.io</code> 的仓库，用于存放 Hexo 生成的静态文件</p><p>例如：</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819055857.webp" alt="image-20200819055857" style="zoom:80%;" /><p>复制仓库的 SSH 链接</p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200819062725640.webp" alt="image-20200819062725640" style="zoom:80%;" /><h2 id="2hexo-推送至仓库"><a class="markdownIt-Anchor" href="#2hexo-推送至仓库"></a> 2：Hexo 推送至仓库</h2><p>需要先安装一个插件：<a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a> ，命令行输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后修改 <code>_config.yml</code> 中的 deploy</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># 仓库的ssh链接</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment"># 分支</span></span><br><span class="line">  <span class="comment"># 自定义提交信息 - 可不指定使用默认值 Site updated: &#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;</span></span><br><span class="line">  <span class="comment"># message: </span></span><br></pre></td></tr></table></figure><p>推送</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 推送</span></span><br><span class="line">hexo deploy <span class="comment"># 可简写为 hexo d</span></span><br><span class="line"><span class="comment"># 上边两行命令也可以简写为 hexo d -g</span></span><br></pre></td></tr></table></figure><p>若提示 <code>INFO Deploy done: git</code>，就代表部署完成。此时就可以通过 <code>http://用户名.github.io</code> 来访问博客 (仓库) 了</p><h2 id="3配置域名并开启-https"><a class="markdownIt-Anchor" href="#3配置域名并开启-https"></a> 3：配置域名并开启 HTTPS</h2><p>说多了就是心累，国内部分地区访问 <code>xx.github.io</code> 就是这个样子</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200825182432078.webp" alt="image-20200825182432078" /></p><p>你来瓶酸酸乳就一切正常了，配置域名解析也算是一种解决方式吧</p><p>1：购买域名：这个就不用说了吧，国内的域名服务商好像都需要进行实名认证；国外的话选择的多，不需要实名，可以去 godaddy 试试 (把 dns 服务商转移到国内)。</p><p>2：配置域名：</p><ol><li><p>在你的博客 source 目录下新建一个名为 <code>CNAME</code> 的文件，文件内容为你买的域名。例如：</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200825183322989.webp" alt="image-20200825183322989" /></p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200825183359425.webp" alt="image-20200825183359425" /></p></li><li><p>修改 <code>_config.yml</code> 中的 URL</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200825183548372.webp" alt="image-20200825183548372" /></p></li><li><p>推送到仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></li></ol><p>3：设置自定义域名访问，进入你的 GitHub 仓库，点击 settings</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200825184149203.webp" alt="image-20200825184149203" /></p><p>然后向下翻，找到下边这一栏</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200825185532285.webp" alt="image-20200825185532285" /></p><p>4：开启 DNS 解析，以阿里云为例</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200825201606637.webp" alt="image-20200825201606637" /></p><p>5：前往 GitHub 仓库，开启 HTTPS</p><p><img src="https://cdn.jsdelivr.net/gh/petrel1024/CDN@master/blog/Hexo/01/image-20200825201733419.webp" alt="image-20200825201733419" /></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHubPages </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
